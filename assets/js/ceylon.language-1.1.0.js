(function(define) {
define(function(require, exports, module) {
//the Ceylon language module
var $CCMM$={"ceylon.language.impl":{"rethrow":{"$t":{"$pk":"$","$nm":"Anything"},"$ps":[[{"$t":{"$pk":"$","$nm":"Throwable"},"$mt":"prm","$nm":"x"}]],"$mt":"m","$an":{"shared":[],"doc":["Rethrows an exception without declaring it. This is used as a cheap replacement for\nUnsafe.throwException() in our Java Util class, used by the metamodel."],"by":["Stephane Epardaud"]},"$nm":"rethrow"}},"$mod-name":"ceylon.language","ceylon.language.meta.declaration":{"Import":{"$sts":[{"$pk":"$","$nm":"Identifiable"},{"$pk":"$","$nm":"Annotated"}],"$mt":"i","$an":{"shared":[],"doc":["Model of an `import` declaration \nwithin a module declaration."]},"$at":{"shared":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if this imported module is shared."]},"$nm":"shared"},"container":{"$t":{"$pk":".","$nm":"Module"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The containing module."]},"$nm":"container"},"optional":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if this imported module is optional."]},"$nm":"optional"},"name":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The name of the imported module."]},"$nm":"name"},"version":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The compile-time version of the imported module."]},"$nm":"version"}},"$nm":"Import"},"Variance":{"of":[{"$pk":".","$nm":"invariant"},{"$pk":".","$nm":"covariant"},{"$pk":".","$nm":"contravariant"}],"$mt":"i","$an":{"shared":[],"doc":["Variance information."]},"$nm":"Variance"},"AnnotatedDeclaration":{"of":[{"$pk":".","$nm":"NestableDeclaration"},{"$pk":".","$nm":"Module"},{"$pk":".","$nm":"Package"}],"$sts":[{"$pk":".","$nm":"Declaration"},{"$pk":"$","$nm":"Annotated"}],"$mt":"i","$an":{"shared":[],"doc":["Declaration which can be annotated, such as:\n\n- [[NestableDeclaration]]\n- [[Module]]\n- [[Package]]\n\nYou can query annotations that are placed on a given annotated declaration with:\n\n"]},"$m":{"annotations":{"$t":{"$tp":[{"$mt":"tp","$nm":"Annotation"}],"$pk":"$","$nm":"Sequential"},"$mt":"m","$tp":[{"$sts":[{"$pk":"$","$nm":"Annotation"}],"variance":"out","$nm":"Annotation"}],"$an":{"shared":[],"formal":[],"doc":["The annotation instances of the given \nannotation type on this declaration.\n\nFor example, you can list all the [[See|ceylon.language::See]] \nannotations on [[List|ceylon.language::List]]\nwith the following code:\n\n    for(annot in `interface List`.annotations<See>()){\n        for(elems in annot.programElements){\n            print(\"See: ``elems``\");\n        }\n    }\n\nAlternatively, you can use the [[ceylon.language.meta::annotations]] \nfunction.\n"]},"$nm":"annotations"}},"$nm":"AnnotatedDeclaration"},"OpenTypeVariable":{"$sts":[{"$pk":".","$nm":"OpenType"}],"$mt":"i","$an":{"shared":[],"doc":["An open type variable."]},"$at":{"declaration":{"$t":{"$pk":".","$nm":"TypeParameter"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This type variable's type parameter declaration."]},"$nm":"declaration"}},"$nm":"OpenTypeVariable"},"OpenIntersection":{"$sts":[{"$pk":".","$nm":"OpenType"}],"$mt":"i","$an":{"shared":[],"doc":["An open intersection type."]},"$at":{"satisfiedTypes":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"OpenType"}],"$pk":"$","$nm":"List"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This intersection's list of satisfied open types."]},"$nm":"satisfiedTypes"}},"$nm":"OpenIntersection"},"OpenType":{"of":[{"$pk":".","$nm":"nothingType"},{"$pk":".","$nm":"OpenClassOrInterfaceType"},{"$pk":".","$nm":"OpenTypeVariable"},{"$pk":".","$nm":"OpenUnion"},{"$pk":".","$nm":"OpenIntersection"}],"$mt":"i","$an":{"shared":[],"doc":["An open type.\n\nAn open type is a type which may contain unbound type variables, such as `List<T>`."]},"$nm":"OpenType"},"SetterDeclaration":{"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["A setter declaration for a variable `ValueDeclaration`."]},"$at":{"shared":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"shared"},"containingModule":{"$t":{"$pk":".","$nm":"Module"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"containingModule"},"toplevel":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"toplevel"},"formal":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"formal"},"default":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"default"},"container":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"NestableDeclaration"},{"$pk":".","$nm":"Package"}]},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"container"},"containingPackage":{"$t":{"$pk":".","$nm":"Package"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"containingPackage"},"actual":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"actual"},"variable":{"$t":{"$pk":".","$nm":"ValueDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The variable value this setter is for."]},"$nm":"variable"}},"$nm":"SetterDeclaration"},"Module":{"$sts":[{"$pk":"$","$nm":"Identifiable"},{"$pk":".","$nm":"AnnotatedDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["A `module` declaration\nfrom a `module.ceylon` compilation unit"]},"$m":{"resourceByPath":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":"$","$nm":"Resource"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"path"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Searches for a resource by its path inside the module."]},"$nm":"resourceByPath"},"findImportedPackage":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"Package"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Finds a package by name in this module or in its dependencies. Note that all transitive `shared`\ndependencies are searched. Returns `null` if not found."]},"$nm":"findImportedPackage"},"findPackage":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"Package"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Finds a package by name. Returns `null` if not found."]},"$nm":"findPackage"}},"$at":{"dependencies":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Import"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The modules this module depends on."]},"$nm":"dependencies"},"members":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Package"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The package members of the module."]},"$nm":"members"},"version":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The module version."]},"$nm":"version"}},"$nm":"Module"},"InterfaceDeclaration":{"$sts":[{"$pk":".","$nm":"ClassOrInterfaceDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["An interface declaration.\n\n<a name=\"toplevel-sample\"><\/a>\n### Usage sample for toplevel interfaces\n\nBecause some interfaces have type parameters, getting a model requires applying type arguments to the\ninterface declaration with [[interfaceApply]] in order to be able to get a closed type. For example, here is how you would\nobtain an interface model from a toplevel interface declaration:\n\n    interface Foo<T> satisfies List<T> {\n    }\n    \n    void test(){\n        \/\/ We need to apply the Integer closed type to the Foo declaration in order to get the Foo<Integer> closed type\n        Interface<Foo<Integer>> interfaceModel = `interface Foo`.interfaceApply<Foo<Integer>>(`Integer`);\n        \/\/ This will print: ceylon.language::List<ceylon.language::Integer>\n        for(satisfiedType in interfaceModel.satisfiedTypes){\n            print(satisfiedType);\n        }\n    }\n\n<a name=\"member-sample\"><\/a>\n### Usage sample for member interfaces\n\nFor member interfaces it is a bit longer, because member interfaces need to be applied not only their type arguments but also\nthe containing type, so you should use [[memberInterfaceApply]] and start by giving the containing closed type:\n\n    class Outer(){\n        shared interface Inner<T> satisfies List<T> {\n        }\n    }\n\n    void test(){\n        \/\/ apply the containing closed type `Outer` to the member class declaration `Outer.Inner`\n        MemberInterface<Outer,Outer.Inner<Integer>> memberInterfaceModel = `interface Outer.Inner`.memberInterfaceApply<Outer,Outer.Inner<Integer>>(`Outer`, `Integer`);\n        \/\/ This will print: ceylon.language::List<ceylon.language::Integer>\n        for(satisfiedType in memberInterfaceModel.satisfiedTypes){\n            print(satisfiedType);\n        }\n    }\n"]},"$m":{"interfaceApply":{"$t":{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":"ceylon.language.meta.model","$nm":"Interface"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"typeArguments"}]],"$mt":"m","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Applies the given closed type arguments to this toplevel interface declaration in order to obtain an interface model. \nSee [this code sample](#toplevel-sample) for an example on how to use this."]},"$nm":"interfaceApply"},"memberInterfaceApply":{"$t":{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Type"}],"$pk":"ceylon.language.meta.model","$nm":"MemberInterface"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Container"}],"$pk":"ceylon.language.meta.model","$nm":"Type"},"$mt":"prm","$nm":"containerType"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"typeArguments"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result's container type or type parameters."],"doc":["Applies the given closed container type and type arguments to this member interface declaration in order to obtain a member interface model. \nSee [this code sample](#member-sample) for an example on how to use this."]},"$nm":"memberInterfaceApply"}},"$nm":"InterfaceDeclaration"},"TypeParameter":{"$sts":[{"$pk":".","$nm":"Declaration"}],"$mt":"i","$an":{"shared":[],"doc":["A type parameter declaration."]},"$at":{"caseTypes":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"OpenType"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The `of` enumerated bounds for this type parameter."]},"$nm":"caseTypes"},"defaultTypeArgument":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"OpenType"}]},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This type parameter's default type argument, if it has one."]},"$nm":"defaultTypeArgument"},"container":{"$t":{"$pk":".","$nm":"NestableDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The declaration that declared this type parameter. This is either a [[ClassOrInterfaceDeclaration]] or a\n[[FunctionDeclaration]]."]},"$nm":"container"},"variance":{"$t":{"$pk":".","$nm":"Variance"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This type parameter's variance, as defined by `in` or `out` keywords."]},"$nm":"variance"},"satisfiedTypes":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"OpenType"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The `satisfies` upper bounds for this type parameter."]},"$nm":"satisfiedTypes"},"defaulted":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if this type parameter has a default type argument and can be omitted."]},"$nm":"defaulted"}},"$nm":"TypeParameter"},"FunctionalDeclaration":{"$mt":"i","$an":{"shared":[],"doc":["Declaration which can be invoked, and may have parameters. Classes\nand functions are functional declarations.\n\nNote that multiple-parameter lists are not reified at runtime, so if you\nhave a function declaration like this:\n\n    Integer add(Integer a)(Integer b) => a + b;\n\nIt will only have a single parameter list at runtime (the first), and its return\ntype will be `Callable<Integer,[Integer]>`.\n"]},"$m":{"getParameterDeclaration":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"FunctionOrValueDeclaration"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Gets a parameter declaration by name. Returns `null` if no such parameter exists."]},"$nm":"getParameterDeclaration"}},"$at":{"annotation":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if the current declaration is an annotation class or function."]},"$nm":"annotation"},"parameterDeclarations":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"FunctionOrValueDeclaration"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The list of parameter declarations for this functional declaration."]},"$nm":"parameterDeclarations"}},"$nm":"FunctionalDeclaration"},"$pkg-shared":1,"GenericDeclaration":{"$mt":"i","$an":{"shared":[],"doc":["A declaration that can have type parameters."]},"$m":{"getTypeParameterDeclaration":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"TypeParameter"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Finds a type parameter by name. Returns `null` if not found."]},"$nm":"getTypeParameterDeclaration"}},"$at":{"typeParameterDeclarations":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"TypeParameter"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The list of type parameters declared on this generic declaration."]},"$nm":"typeParameterDeclarations"}},"$nm":"GenericDeclaration"},"invariant":{"super":{"$pk":"$","$nm":"Basic"},"$sts":[{"$pk":".","$nm":"Variance"}],"$mt":"o","$an":{"shared":[],"doc":["Invariant means that neither subtype nor supertype can be accepted, the\ntype has to be exactly that which is declared."]},"$at":{"string":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"invariant"},"OpenInterfaceType":{"$sts":[{"$pk":".","$nm":"OpenClassOrInterfaceType"}],"$mt":"i","$an":{"shared":[],"doc":["An open interface type."]},"$at":{"declaration":{"$t":{"$pk":".","$nm":"InterfaceDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This declaration's package container."],"actual":[]},"$nm":"declaration"}},"$nm":"OpenInterfaceType"},"Package":{"$sts":[{"$pk":"$","$nm":"Identifiable"},{"$pk":".","$nm":"AnnotatedDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["Model of a `package` declaration \nfrom a `package.ceylon` compilation unit"]},"$m":{"getValue":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"ValueDeclaration"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["The value with the given name. Returns `null` if not found."]},"$nm":"getValue"},"getAlias":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"AliasDeclaration"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["The type alias with the given name. Returns `null` if not found."]},"$nm":"getAlias"},"getMember":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$nm":"Kind"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$nm":"Kind"}],"$an":{"shared":[],"formal":[],"doc":["Looks up a member declaration by name, provided it satisfies the given `Kind` type\nargument. Returns `null` if no such member matches."]},"$nm":"getMember"},"getFunction":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"FunctionDeclaration"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["The function with the given name. Returns `null` if not found."]},"$nm":"getFunction"},"annotatedMembers":{"$t":{"$tp":[{"$mt":"tp","$nm":"Kind"}],"$pk":"$","$nm":"Sequential"},"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$nm":"Kind"},{"$sts":[{"$pk":"$","$nm":"Annotation"}],"$nm":"Annotation"}],"$an":{"shared":[],"formal":[],"doc":["Returns the list of member declarations that satisfy the given `Kind` type argument and\nthat are annotated with the given `Annotation` type argument"]},"$nm":"annotatedMembers"},"getClassOrInterface":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"ClassOrInterfaceDeclaration"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["The class or interface with the given name. Returns `null` if not found."]},"$nm":"getClassOrInterface"},"members":{"$t":{"$tp":[{"$mt":"tp","$nm":"Kind"}],"$pk":"$","$nm":"Sequential"},"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$nm":"Kind"}],"$an":{"shared":[],"formal":[],"doc":["Returns the list of member declarations that satisfy the given `Kind` type argument."]},"$nm":"members"}},"$at":{"shared":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if this package is shared."]},"$nm":"shared"},"container":{"$t":{"$pk":".","$nm":"Module"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The module this package belongs to."]},"$nm":"container"}},"$nm":"Package"},"OpenClassType":{"$sts":[{"$pk":".","$nm":"OpenClassOrInterfaceType"}],"$mt":"i","$an":{"shared":[],"doc":["An open class type."]},"$at":{"declaration":{"$t":{"$pk":".","$nm":"ClassDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This class declaration."],"actual":[]},"$nm":"declaration"}},"$nm":"OpenClassType"},"TypedDeclaration":{"$mt":"i","$an":{"shared":[],"doc":["Declaration which has an open type."]},"$at":{"openType":{"$t":{"$pk":".","$nm":"OpenType"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The open type for this declaration. For example, the open type for `List<T> f<T>()` is `List<T>`."]},"$nm":"openType"}},"$nm":"TypedDeclaration"},"OpenUnion":{"$sts":[{"$pk":".","$nm":"OpenType"}],"$mt":"i","$an":{"shared":[],"doc":["An open union type."]},"$at":{"caseTypes":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"OpenType"}],"$pk":"$","$nm":"List"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The list of case types for this open union type."]},"$nm":"caseTypes"}},"$nm":"OpenUnion"},"FunctionDeclaration":{"$sts":[{"$pk":".","$nm":"FunctionOrValueDeclaration"},{"$pk":".","$nm":"GenericDeclaration"},{"$pk":".","$nm":"FunctionalDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["A function declaration.\n\n<a name=\"toplevel-sample\"><\/a>\n### Usage sample for toplevel function\n\nBecause some functions have type parameters, getting a model requires applying type arguments to the\nfunction declaration with [[apply]] in order to be able to invoke that function. For example, here is how you would\nobtain a function model that you can invoke from a toplevel function declaration:\n\n    String foo<T>(){\n        return \"Hello, our T is: ``typeLiteral<T>()``\";\n    }\n    \n    void test(){\n        \/\/ We need to apply the Integer closed type to the foo declaration in order to get the foo<Integer> function model\n        Function<String,[]> functionModel = `function foo`.apply<String,[]>(`Integer`);\n        \/\/ This will print: Hello, our T is: ceylon.language::Integer\n        print(functionModel());\n    }\n\n<a name=\"member-sample\"><\/a>\n### Usage sample for methods\n\nFor methods it is a bit longer, because methods need to be applied not only their type arguments but also\nthe containing type, so you should use [[memberApply]] and start by giving the containing closed type:\n\n    class Outer(){\n        shared String hello() => \"Hello\";\n    }\n\n    void test(){\n        \/\/ apply the containing closed type `Outer` to the method declaration `Outer.hello`\n        Method<Outer,String,[]> methodModel = `function Outer.hello`.memberApply<Outer,String,[]>(`Outer`);\n        \/\/ We now have a Method, which needs to be applied to a containing instance in order to become an\n        \/\/ invokable function:\n        Function<String,[]> boundMethodModel = methodModel(Outer());\n        \/\/ This will print: Hello\n        print(boundMethodModel());\n    }\n"]},"$m":{"apply":{"$t":{"$tp":[{"$mt":"tp","$nm":"Return"},{"$mt":"tp","$nm":"Arguments"}],"$pk":"ceylon.language.meta.model","$nm":"Function"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"typeArguments"}]],"$mt":"m","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Return"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Arguments"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Applies the given closed type arguments to this function declaration in order to obtain a function model. \nSee [this code sample](#toplevel-sample) for an example on how to use this."]},"$nm":"apply"},"memberInvoke":{"$t":{"$pk":"$","$nm":"Anything"},"$ps":[[{"$t":{"$pk":"$","$nm":"Object"},"$mt":"prm","$nm":"container"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","$def":1,"$nm":"typeArguments"},{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"arguments"}]],"$mt":"m","$an":{"shared":[],"default":[],"throws":["IncompatibleTypeException","If the specified container, type or value arguments are not compatible with this method."],"doc":["Invokes the underlying method, by applying the specified type arguments and value arguments."]},"$nm":"memberInvoke"},"invoke":{"$t":{"$pk":"$","$nm":"Anything"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","$def":1,"$nm":"typeArguments"},{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"arguments"}]],"$mt":"m","$an":{"shared":[],"default":[],"throws":["IncompatibleTypeException","If the specified type or value arguments are not compatible with this toplevel function."],"doc":["Invokes the underlying toplevel function, by applying the specified type arguments and value arguments."]},"$nm":"invoke"},"memberApply":{"$t":{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Return"},{"$mt":"tp","$nm":"Arguments"}],"$pk":"ceylon.language.meta.model","$nm":"Method"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Container"}],"$pk":"ceylon.language.meta.model","$nm":"Type"},"$mt":"prm","$nm":"containerType"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"typeArguments"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Return"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Arguments"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result's container type or type parameters."],"doc":["Applies the given closed container type and type arguments to this method declaration in order to obtain a method model. \nSee [this code sample](#member-sample) for an example on how to use this."]},"$nm":"memberApply"}},"$nm":"FunctionDeclaration"},"NestableDeclaration":{"of":[{"$pk":".","$nm":"FunctionOrValueDeclaration"},{"$pk":".","$nm":"ClassOrInterfaceDeclaration"},{"$pk":".","$nm":"SetterDeclaration"},{"$pk":".","$nm":"AliasDeclaration"}],"$sts":[{"$pk":".","$nm":"AnnotatedDeclaration"},{"$pk":".","$nm":"TypedDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["A declaration which can be contained in a [[Package]] or in another [[NestableDeclaration]].\n\nFunctions, values, classes, interfaes and aliases are such declarations."]},"$at":{"shared":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"formal":[],"doc":["True if this declaration is annotated with [[shared|ceylon.language::shared]]."]},"$nm":"shared"},"containingModule":{"$t":{"$pk":".","$nm":"Module"},"$mt":"g","$an":{"shared":[],"formal":[],"doc":["This declaration's module container."]},"$nm":"containingModule"},"toplevel":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"formal":[],"doc":["True if this declaration is a toplevel declaration."]},"$nm":"toplevel"},"formal":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"formal":[],"doc":["True if this declaration is annotated with [[formal|ceylon.language::formal]]."]},"$nm":"formal"},"default":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"formal":[],"doc":["True if this declaration is annotated with [[default|ceylon.language::default]]."]},"$nm":"default"},"container":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"NestableDeclaration"},{"$pk":".","$nm":"Package"}]},"$mt":"g","$an":{"shared":[],"formal":[],"doc":["This declaration's immediate container, which can be either a [[NestableDeclaration]]\nor a [[Package]]."]},"$nm":"container"},"containingPackage":{"$t":{"$pk":".","$nm":"Package"},"$mt":"g","$an":{"shared":[],"formal":[],"doc":["This declaration's package container."]},"$nm":"containingPackage"},"actual":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"formal":[],"doc":["True if this declaration is annotated with [[actual|ceylon.language::actual]]."]},"$nm":"actual"}},"$nm":"NestableDeclaration"},"Declaration":{"of":[{"$pk":".","$nm":"AnnotatedDeclaration"},{"$pk":".","$nm":"TypeParameter"}],"$mt":"i","$an":{"shared":[],"doc":["A declaration.\n\nThere are only two types of declarations:\n\n- [[AnnotatedDeclaration]]s such as modules, packages, classes or functions, and\n- [[TypeParameter]] declarations."]},"$at":{"qualifiedName":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The qualified name of this declaration. This includes the container qualified name. For\nexample, the [[Declaration]] class' qualified name is \"ceylon.language.meta.declaration::Declaration\"."]},"$nm":"qualifiedName"},"name":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The name of this declaration. For example, the [[Declaration]] class is named \"Declaration\"."]},"$nm":"name"}},"$nm":"Declaration"},"ClassOrInterfaceDeclaration":{"of":[{"$pk":".","$nm":"ClassDeclaration"},{"$pk":".","$nm":"InterfaceDeclaration"}],"$sts":[{"$pk":".","$nm":"NestableDeclaration"},{"$pk":".","$nm":"GenericDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["A class or interface declaration.\n\n<a name=\"toplevel-sample\"><\/a>\n### Usage sample for toplevel classes\n\nBecause some classes have type parameters, getting a model requires applying type arguments to the\nclass declaration with [[apply]] in order to be able to instantiate that class. For example, here is how you would\nobtain a class or interface model that you can instantiate from a toplevel class declaration:\n\n    class Foo<T>() {\n        string => \"Hello, our T is: ``typeLiteral<T>()``\";\n    }\n    \n    void test(){\n        \/\/ We need to apply the Integer closed type to the Foo declaration in order to get the Foo<Integer> closed type\n        ClassOrInterface<Foo<Integer>> classOrInterfaceModel = `class Foo`.apply<Foo<Integer>>(`Integer`);\n        assert(is Class<Foo<Integer>,[]> classOrInterfaceModel);\n        \/\/ This will print: Hello, our T is: ceylon.language::Integer\n        print(classOrInterfaceModel());\n    }\n\nNote that there are more specialised versions of [[apply]] in [[ClassDeclaration.classApply]] and \n[[InterfaceDeclaration.interfaceApply]].\n\n<a name=\"member-sample\"><\/a>\n### Usage sample for member classes\n\nFor member classes or interfaces it is a bit longer, because member types need to be applied not only their type arguments but also\nthe containing type, so you should use [[memberApply]] and start by giving the containing closed type:\n\n    class Outer(){\n        shared class Inner(){\n            string => \"Hello\";\n        }\n    }\n\n    void test(){\n        \/\/ apply the containing closed type `Outer` to the member class declaration `Outer.Inner`\n        value memberClassModel = `class Outer.Inner`.memberApply<Outer,Outer.Inner>(`Outer`);\n        assert(is MemberClass<Outer,Outer.Inner,[]> memberClassModel);\n        \/\/ We now have a MemberClass, which needs to be applied to a containing instance in order to become an\n        \/\/ invokable class model:\n        Class<Outer.Inner,[]> boundMemberClassModel = memberClassModel(Outer());\n        \/\/ This will print: Hello\n        print(boundMemberClassModel());\n    }\n\nNote that there are more specialised versions of [[memberApply]] in [[ClassDeclaration.memberClassApply]] and \n[[InterfaceDeclaration.memberInterfaceApply]].\n"]},"$m":{"memberDeclarations":{"$t":{"$tp":[{"$mt":"tp","$nm":"Kind"}],"$pk":"$","$nm":"Sequential"},"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$nm":"Kind"}],"$an":{"shared":[],"formal":[],"doc":["Returns the list of shared member declarations that satisfy the given `Kind` type argument. This includes inherited\ndeclarations but not unshared declarations."]},"$nm":"memberDeclarations"},"apply":{"$t":{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":"ceylon.language.meta.model","$nm":"ClassOrInterface"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"typeArguments"}]],"$mt":"m","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Applies the given closed type arguments to this toplevel class or interface declaration in order to obtain a class or interface model. \nSee [this code sample](#toplevel-sample) for an example on how to use this."]},"$nm":"apply"},"getDeclaredMemberDeclaration":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$nm":"Kind"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$nm":"Kind"}],"$an":{"shared":[],"formal":[],"doc":["Looks up a member declaration directly declared on this class or interface, by name, \nprovided it satisfies the given `Kind` type argument. Returns `null` if no such member matches. \nThis includes unshared declarations but not inherited declarations."]},"$nm":"getDeclaredMemberDeclaration"},"memberApply":{"$t":{"comp":"i","$ts":[{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":"ceylon.language.meta.model","$nm":"ClassOrInterface"}],"$pk":"ceylon.language.meta.model","$nm":"Member"},{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":"ceylon.language.meta.model","$nm":"ClassOrInterface"}]},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Container"}],"$pk":"ceylon.language.meta.model","$nm":"Type"},"$mt":"prm","$nm":"containerType"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"typeArguments"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result's container type or type parameters."],"doc":["Applies the given closed container type and type arguments to this member class or interface declaration in order to obtain a \nmember class or interface model. See [this code sample](#member-sample) for an example on how to use this."]},"$nm":"memberApply"},"annotatedDeclaredMemberDeclarations":{"$t":{"$tp":[{"$mt":"tp","$nm":"Kind"}],"$pk":"$","$nm":"Sequential"},"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$nm":"Kind"},{"$sts":[{"$pk":"$","$nm":"Annotation"}],"$nm":"Annotation"}],"$an":{"shared":[],"formal":[],"doc":["Returns the list of member declarations directly declared on this class or interface, which satisfy the given \n`Kind` type argument and that are annotated with the given `Annotation` type argument.\nThis includes unshared declarations but not inherited declarations."]},"$nm":"annotatedDeclaredMemberDeclarations"},"annotatedMemberDeclarations":{"$t":{"$tp":[{"$mt":"tp","$nm":"Kind"}],"$pk":"$","$nm":"Sequential"},"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$nm":"Kind"},{"$sts":[{"$pk":"$","$nm":"Annotation"}],"$nm":"Annotation"}],"$an":{"shared":[],"formal":[],"doc":["Returns the list of shared member declarations that satisfy the given `Kind` type argument and\nthat are annotated with the given `Annotation` type argument. This includes inherited\ndeclarations but not unshared declarations."]},"$nm":"annotatedMemberDeclarations"},"getMemberDeclaration":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$nm":"Kind"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$nm":"Kind"}],"$an":{"shared":[],"formal":[],"doc":["Looks up a shared member declaration by name, provided it satisfies the given `Kind` type\nargument. Returns `null` if no such member matches. This includes inherited\ndeclarations but not unshared declarations"]},"$nm":"getMemberDeclaration"},"declaredMemberDeclarations":{"$t":{"$tp":[{"$mt":"tp","$nm":"Kind"}],"$pk":"$","$nm":"Sequential"},"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$nm":"Kind"}],"$an":{"shared":[],"formal":[],"doc":["Returns the list of member declarations directly declared on this class or interface, which satisfy the given \n`Kind` type argument. This includes unshared declarations but not inherited declarations."]},"$nm":"declaredMemberDeclarations"}},"$at":{"extendedType":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"OpenClassType"}]},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This type's extended type, unless this is the class for [[Anything|ceylon.language::Anything]], which\nis the root of the type hierarchy and thus does not have any extended type."]},"$nm":"extendedType"},"caseTypes":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"OpenType"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["If this type has an `of` clause, this is the list of case types for the current type."]},"$nm":"caseTypes"},"satisfiedTypes":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"OpenInterfaceType"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The list of types satisfied by this type."]},"$nm":"satisfiedTypes"},"isAlias":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if this type is an alias type, in which case the [[extendedType]] will \ncontain the substituted type."]},"$nm":"isAlias"}},"$nm":"ClassOrInterfaceDeclaration"},"OpenClassOrInterfaceType":{"of":[{"$pk":".","$nm":"OpenClassType"},{"$pk":".","$nm":"OpenInterfaceType"}],"$sts":[{"$pk":".","$nm":"OpenType"}],"$mt":"i","$an":{"shared":[],"doc":["An open class or interface, with open type arguments.\n\nFor example, `List<T>` is an open interface type, with a type argument which is the\n[[OpenTypeVariable]] `T`."]},"$at":{"extendedType":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"OpenClassType"}]},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The extended type of this open type."]},"$nm":"extendedType"},"declaration":{"$t":{"$pk":".","$nm":"ClassOrInterfaceDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The class or interface declaration for this open type."]},"$nm":"declaration"},"typeArguments":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"TypeParameter"},{"$mt":"tp","$pk":".","$nm":"OpenType"}],"$pk":"$","$nm":"Map"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The set of open type arguments."]},"$nm":"typeArguments"},"satisfiedTypes":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"OpenInterfaceType"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The satisfied types of this open type."]},"$nm":"satisfiedTypes"}},"$nm":"OpenClassOrInterfaceType"},"covariant":{"super":{"$pk":"$","$nm":"Basic"},"$sts":[{"$pk":".","$nm":"Variance"}],"$mt":"o","$an":{"shared":[],"doc":["Covariant means that subtypes of the given type may be returned."]},"$at":{"string":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"covariant"},"nothingType":{"super":{"$pk":"$","$nm":"Basic"},"$sts":[{"$pk":".","$nm":"OpenType"}],"$mt":"o","$an":{"shared":[],"doc":["The singleton open type for [[Nothing|ceylon.language::nothing]]."]},"$at":{"string":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"nothingType"},"ValueDeclaration":{"$sts":[{"$pk":".","$nm":"FunctionOrValueDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["A value declaration.\n\n<a name=\"toplevel-sample\"><\/a>\n### Usage sample for toplevel value\n\nGetting a model requires applying type arguments to the\nvalue declaration with [[apply]] in order to be able to read that value. For example, here is how you would\nobtain a value model that you can read from a toplevel attribute declaration:\n\n    String foo = \"Hello\";\n    \n    void test(){\n        \/\/ We need to apply the the foo declaration in order to get the foo value model\n        Value<String> valueModel = `value foo`.apply<String>();\n        \/\/ This will print: Hello\n        print(valueModel.get());\n    }\n\n<a name=\"member-sample\"><\/a>\n### Usage sample for attributes\n\nFor attributes it is a bit longer, because attributes need to be applied the containing type, so you should \nuse [[memberApply]] and start by giving the containing closed type:\n\n    class Outer(){\n        shared String foo => \"Hello\";\n    }\n\n    void test(){\n        \/\/ Apply the containing closed type `Outer` to the attribute declaration `Outer.foo`\n        Attribute<Outer,String> valueModel = `value Outer.foo`.memberApply<Outer,String>(`Outer`);\n        \/\/ We now have an Attribute, which needs to be applied to a containing instance in order to become a\n        \/\/ readable value:\n        Value<String> boundValueModel = valueModel(Outer());\n        \/\/ This will print: Hello\n        print(boundValueModel.get());\n    }\n"]},"$m":{"apply":{"$t":{"$tp":[{"$mt":"tp","$nm":"Get"},{"$mt":"tp","$nm":"Set"}],"$pk":"ceylon.language.meta.model","$nm":"Value"},"$mt":"m","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Get"},{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Set"}],"$an":{"shared":[],"formal":[],"throws":["IncompatibleTypeException","If the specified `Get` or `Set` type arguments are not compatible with the actual result."],"doc":["Applies this value declaration in order to obtain a value model. \nSee [this code sample](#toplevel-sample) for an example on how to use this."]},"$nm":"apply"},"get":{"$t":{"$pk":"$","$nm":"Anything"},"$mt":"m","$an":{"shared":[],"default":[],"doc":["Reads the current value of this toplevel value."]},"$nm":"get"},"memberSet":{"$t":{"$pk":"$","$nm":"Anything"},"$ps":[[{"$t":{"$pk":"$","$nm":"Object"},"$mt":"prm","$nm":"container"},{"$t":{"$pk":"$","$nm":"Anything"},"$mt":"prm","$nm":"newValue"}]],"$mt":"m","$an":{"shared":[],"formal":[],"throws":["IncompatibleTypeException","If the specified container or new value type is not compatible with this attribute."],"doc":["Sets the current value of this attribute on the given container instance."]},"$nm":"memberSet"},"set":{"$t":{"$pk":"$","$nm":"Anything"},"$ps":[[{"$t":{"$pk":"$","$nm":"Anything"},"$mt":"prm","$nm":"newValue"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Sets the current value of this toplevel value."]},"$nm":"set"},"memberApply":{"$t":{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Get"},{"$mt":"tp","$nm":"Set"}],"$pk":"ceylon.language.meta.model","$nm":"Attribute"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Container"}],"$pk":"ceylon.language.meta.model","$nm":"Type"},"$mt":"prm","$nm":"containerType"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Get"},{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Set"}],"$an":{"shared":[],"formal":[],"throws":["IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."],"doc":["Applies the given closed container type to this attribute declaration in order to obtain an attribute model. \nSee [this code sample](#member-sample) for an example on how to use this."]},"$nm":"memberApply"},"memberGet":{"$t":{"$pk":"$","$nm":"Anything"},"$ps":[[{"$t":{"$pk":"$","$nm":"Object"},"$mt":"prm","$nm":"container"}]],"$mt":"m","$an":{"shared":[],"default":[],"throws":["IncompatibleTypeException","If the specified container is not compatible with this attribute."],"doc":["Reads the current value of this attribute on the given container instance."]},"$nm":"memberGet"}},"$at":{"objectDeclaration":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"ClassDeclaration"}]},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This value's anonymous class declaration if this value is an object declaration. `null` otherwise."]},"$nm":"objectDeclaration"},"isObject":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if this declaration is an `object` declaration, whose type is an anonymous class."]},"$nm":"isObject"},"setter":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":".","$nm":"SetterDeclaration"}]},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["Returns the setter declaration for this variable.\n\nFor modelling purposes `variable` reference \nvalues have a SetterDeclaration even though there is no \nsuch setter explicit in the source code."]},"$nm":"setter"},"variable":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if this declaration is annotated with [[variable|ceylon.language::variable]]."]},"$nm":"variable"}},"$nm":"ValueDeclaration"},"ClassDeclaration":{"$sts":[{"$pk":".","$nm":"ClassOrInterfaceDeclaration"},{"$pk":".","$nm":"FunctionalDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["Class declaration.\n\n<a name=\"toplevel-sample\"><\/a>\n### Usage sample for toplevel classes\n\nBecause some classes have type parameters, getting a model requires applying type arguments to the\nclass declaration with [[classApply]] in order to be able to instantiate that class. For example, here is how you would\nobtain a class model that you can instantiate from a toplevel class declaration:\n\n    class Foo<T>(){\n        string => \"Hello, our T is: ``typeLiteral<T>()``\";\n    }\n    \n    void test(){\n        \/\/ We need to apply the Integer closed type to the Foo declaration in order to get the Foo<Integer> closed type\n        Class<Foo<Integer>,[]> classModel = `class Foo`.classApply<Foo<Integer>,[]>(`Integer`);\n        \/\/ This will print: Hello, our T is: ceylon.language::Integer\n        print(classModel());\n    }\n\n<a name=\"member-sample\"><\/a>\n### Usage sample for member classes\n\nFor member classes it is a bit longer, because member classes need to be applied not only their type arguments but also\nthe containing type, so you should use [[memberClassApply]] and start by giving the containing closed type:\n\n    class Outer(){\n        shared class Inner(){\n            string => \"Hello\";\n        }\n    }\n\n    void test(){\n        \/\/ apply the containing closed type `Outer` to the member class declaration `Outer.Inner`\n        MemberClass<Outer,Outer.Inner,[]> memberClassModel = `class Outer.Inner`.memberClassApply<Outer,Outer.Inner,[]>(`Outer`);\n        \/\/ We now have a MemberClass, which needs to be applied to a containing instance in order to become an\n        \/\/ invokable class model:\n        Class<Outer.Inner,[]> boundMemberClassModel = memberClassModel(Outer());\n        \/\/ This will print: Hello\n        print(boundMemberClassModel());\n    }\n"]},"$m":{"instantiate":{"$t":{"$pk":"$","$nm":"Anything"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","$def":1,"$nm":"typeArguments"},{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"arguments"}]],"$mt":"m","$an":{"shared":[],"default":[],"throws":["IncompatibleTypeException","If the specified type or value arguments are not compatible with this toplevel class."],"doc":["Creates a new instance of this toplevel class, by applying the specified type arguments and value arguments."]},"$nm":"instantiate"},"memberInstantiate":{"$t":{"$pk":"$","$nm":"Anything"},"$ps":[[{"$t":{"$pk":"$","$nm":"Object"},"$mt":"prm","$nm":"container"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","$def":1,"$nm":"typeArguments"},{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"arguments"}]],"$mt":"m","$an":{"shared":[],"default":[],"throws":["IncompatibleTypeException","If the specified container, type or value arguments are not compatible with this method."],"doc":["Creates a new instance of this member class, by applying the specified type arguments and value arguments."]},"$nm":"memberInstantiate"},"memberClassApply":{"$t":{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":"ceylon.language.meta.model","$nm":"MemberClass"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Container"}],"$pk":"ceylon.language.meta.model","$nm":"Type"},"$mt":"prm","$nm":"containerType"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"typeArguments"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Arguments"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result's container type or type parameters."],"doc":["Applies the given closed container type and type arguments to this member class declaration in order to obtain a member class model. \nSee [this code sample](#member-sample) for an example on how to use this."]},"$nm":"memberClassApply"},"classApply":{"$t":{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":"ceylon.language.meta.model","$nm":"Class"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"ceylon.language.meta.model","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"typeArguments"}]],"$mt":"m","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Arguments"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Applies the given closed type arguments to this toplevel class declaration in order to obtain a class model. \nSee [this code sample](#toplevel-sample) for an example on how to use this."]},"$nm":"classApply"}},"$at":{"anonymous":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if the class is an object class."]},"$nm":"anonymous"},"abstract":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if the class has an [[abstract|ceylon.language::abstract]] annotation."]},"$nm":"abstract"},"final":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if the class has a [[final|ceylon.language::final]] annotation."]},"$nm":"final"}},"$nm":"ClassDeclaration"},"contravariant":{"super":{"$pk":"$","$nm":"Basic"},"$sts":[{"$pk":".","$nm":"Variance"}],"$mt":"o","$an":{"shared":[],"doc":["Contravariant means that supertypes of the given type may be accepted."]},"$at":{"string":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"contravariant"},"FunctionOrValueDeclaration":{"of":[{"$pk":".","$nm":"FunctionDeclaration"},{"$pk":".","$nm":"ValueDeclaration"}],"$sts":[{"$pk":".","$nm":"NestableDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["A function or value declaration."]},"$at":{"parameter":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if this function or value is a parameter to a [[FunctionalDeclaration]]."]},"$nm":"parameter"},"variadic":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if this function or value is a parameter and is variadic (accepts a list of values)."]},"$nm":"variadic"},"defaulted":{"$t":{"$pk":"$","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["True if this function or value is a parameter and has a default value."]},"$nm":"defaulted"}},"$nm":"FunctionOrValueDeclaration"},"AliasDeclaration":{"$sts":[{"$pk":".","$nm":"NestableDeclaration"},{"$pk":".","$nm":"GenericDeclaration"}],"$mt":"i","$an":{"shared":[],"doc":["Type alias declaration. While type aliases are erased (substituted for what they alias is a better term) from every \ndeclaration that uses them during compile-time, the declaration of the type alias is still visible at run-time."]},"$at":{"extendedType":{"$t":{"$pk":".","$nm":"OpenType"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The open type that is substituted by this type alias."]},"$nm":"extendedType"}},"$nm":"AliasDeclaration"}},"$mod-version":"1.1.0","ceylon.language.meta":{"$pkg-shared":1,"sequencedAnnotations":{"$t":{"$tp":[{"$mt":"tp","$nm":"Value"}],"$pk":"$","$nm":"Sequential"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"ProgramElement"}],"$pk":"$","$nm":"SequencedAnnotation"},{"$mt":"tp","$pk":"ceylon.language.meta.model","$nm":"Nothing"}],"$pk":"ceylon.language.meta.model","$nm":"Class"},"$mt":"prm","$nm":"annotationType"},{"$t":{"$nm":"ProgramElement"},"$mt":"prm","$nm":"programElement"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"ProgramElement"}],"$pk":"$","$nm":"SequencedAnnotation"}],"$nm":"Value"},{"$sts":[{"$pk":"$","$nm":"Annotated"}],"variance":"in","$nm":"ProgramElement"}],"$an":{"shared":[],"doc":["The values of given sequenced annotation type on the given program element, \nor empty if the program element was not annotated with that annotation type.\nFor example:\n\n    \/\/ Does the sum declaration have any ThrownException annotations?\n    value throwsSomething = sequencedAnnotation(`ThrownException`, `function sum`) nonempty;\n\nThe annotations may be returned in any order.\n"]},"$nm":"sequencedAnnotations"},"optionalAnnotation":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$nm":"Value"}]},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"ProgramElement"}],"$pk":"$","$nm":"OptionalAnnotation"},{"$mt":"tp","$pk":"ceylon.language.meta.model","$nm":"Nothing"}],"$pk":"ceylon.language.meta.model","$nm":"Class"},"$mt":"prm","$nm":"annotationType"},{"$t":{"$nm":"ProgramElement"},"$mt":"prm","$nm":"programElement"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"ProgramElement"}],"$pk":"$","$nm":"OptionalAnnotation"}],"$nm":"Value"},{"$sts":[{"$pk":"$","$nm":"Annotated"}],"variance":"in","$nm":"ProgramElement"}],"$an":{"shared":[],"doc":["The value of given optional annotation type on the given program element, \nor null if the program element was not annotated with that annotation type.\nFor example:\n\n    \/\/ Does the process declaration have the Shared annotation?\n    value isShared = optionalAnnotation(`Shared`, `value process`) exists;\n"]},"$nm":"optionalAnnotation"},"typeLiteral":{"$t":{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":"ceylon.language.meta.model","$nm":"Type"},"$mt":"m","$tp":[{"$sts":[{"$pk":"$","$nm":"Anything"}],"variance":"out","$nm":"Type"}],"$an":{"shared":[],"native":[],"doc":["Functional equivalent to type literals. Allows you to get a closed type instance\nfor a given type argument.\n\nFor example:\n\n    assert(is Interface<List<Integer>> listOfIntegers = typeLiteral<List<Integer>>());\n"]},"$nm":"typeLiteral"},"annotations":{"$t":{"$nm":"Values"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"Values"},{"$mt":"tp","$nm":"ProgramElement"}],"$pk":"$","$nm":"ConstrainedAnnotation"},{"$mt":"tp","$pk":"ceylon.language.meta.model","$nm":"Nothing"}],"$pk":"ceylon.language.meta.model","$nm":"Class"},"$mt":"prm","$nm":"annotationType"},{"$t":{"$nm":"ProgramElement"},"$mt":"prm","$nm":"programElement"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"Values"},{"$mt":"tp","$nm":"ProgramElement"}],"$pk":"$","$nm":"ConstrainedAnnotation"}],"$nm":"Value"},{"$nm":"Values"},{"$sts":[{"$pk":"$","$nm":"Annotated"}],"variance":"in","$nm":"ProgramElement"}],"$an":{"shared":[],"native":[],"doc":["The annotations of the given type on the given program element. For example:\n\n    \/\/ Does the process declaration have the Shared annotation?\n    value isShared = annotations(`Shared`, `value process`) exists;\n\nThe annotations may be returned in any order.\n"]},"$nm":"annotations"},"modules":{"super":{"$pk":"$","$nm":"Basic"},"$mt":"o","$an":{"shared":[],"native":[],"doc":["Represents the list of Ceylon modules currently loaded at runtime.\n\nNote that this contains all loaded modules, including those that are\nnot imported by your module.\n\nSince Ceylon supports module isolation at runtime, it is possible that\nthere are more than one version of a given module loaded at the same time.\n\n### Usage example\n\nHere's how you would iterate all the loaded modules and print their name and version:\n\n    import ceylon.language.meta { modules }\n\n    for(mod in modules.list){\n        print(\"Module: ``mod.name``\/``mod.version``\");\n    }\n"]},"$m":{"find":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":"ceylon.language.meta.declaration","$nm":"Module"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"},{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"version"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Finds a module by name and version, returns `null` if not found."]},"$nm":"find"}},"$at":{"default":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$pk":"ceylon.language.meta.declaration","$nm":"Module"}]},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Returns the default module, if there is one. This is only the case when\nyou are running the default module."]},"$nm":"default"},"list":{"$t":{"$tp":[{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"Module"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Returns the list of all currently loaded modules. This may include modules that\nwere not imported directly but your module, and multiple versions of the same\nmodule."]},"$nm":"list"}},"$nm":"modules"},"type":{"$t":{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":"ceylon.language.meta.model","$nm":"ClassModel"},"$ps":[[{"$t":{"$nm":"Type"},"$mt":"prm","$nm":"instance"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":"$","$nm":"Anything"}],"variance":"out","$nm":"Type"}],"$an":{"shared":[],"native":[],"doc":["Returns the closed type and model of a given instance. Since only classes\ncan be instantiated, this will always be a [[ClassModel]] model."]},"$nm":"type"}},"ceylon.language.meta.model":{"Member":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Kind"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Container"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$pk":"$","$nm":"Empty"}],"$pk":"$","$nm":"Tuple"}],"$pk":"$","$nm":"Callable"}],"$mt":"i","$tp":[{"variance":"in","$nm":"Container"},{"$sts":[{"$pk":".","$nm":"Model"}],"variance":"out","$nm":"Kind"}],"$an":{"shared":[],"doc":["Model for members that can be bound to a containing instance to turn them into toplevel models.\n\nYou can bind a member to an instance by invoking that member with the instance as parameter:\n\n    shared class Outer(String name){\n        shared class Inner(){\n            shared String hello => \"Hello \"+name;\n        }\n    }\n    \n    void test(){\n        Member<Outer,Class<Outer.Inner,[]>> memberClass = `Outer.Inner`;\n        Class<Outer.Inner,[]> c = memberClass(Outer(\"Stef\"));\n        \/\/ This will print: Hello Stef\n        print(c().hello);\n    }\n"]},"$m":{"bind":{"$t":{"$pk":".","$nm":"Model"},"$ps":[[{"$t":{"$pk":"$","$nm":"Object"},"$mt":"prm","$nm":"container"}]],"$mt":"m","$an":{"shared":[],"formal":[],"throws":["IncompatibleTypeException","If the container is not assignable to this member's container"],"doc":["Type-unsafe container binding, to be used when the container type is unknown until runtime.\n\nThis has the same behaviour as invoking this `Member` directly, but exchanges compile-time type\nsafety with runtime checks."]},"$nm":"bind"}},"$at":{"declaringType":{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The declaring closed type. This is the type that declared this member."]},"$nm":"declaringType"}},"$nm":"Member"},"Model":{"of":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"ClassOrInterface"},{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"FunctionModel"},{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"ValueModel"}],"$mt":"i","$an":{"shared":[],"doc":["The root of all models. There are several types of models:\n\n- [[ClassOrInterface]]\n- [[FunctionModel]]\n- [[ValueModel]]\n"]},"$at":{"declaration":{"$t":{"$pk":"ceylon.language.meta.declaration","$nm":"NestableDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The declaration for this model."]},"$nm":"declaration"},"container":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}]},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The container type of this model, or `null` if this is a toplevel model."]},"$nm":"container"}},"$nm":"Model"},"InterfaceModel":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"ClassOrInterface"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"}],"$an":{"shared":[],"doc":["An interface model represents the model of a Ceylon interface that you can inspect.\n\nAn interface model can be either a toplevel [[Interface]] or a member [[MemberInterface]].\n"]},"$at":{"declaration":{"$t":{"$pk":"ceylon.language.meta.declaration","$nm":"InterfaceDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"declaration"}},"$nm":"InterfaceModel"},"Method":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"FunctionModel"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"Function"}],"$pk":".","$nm":"Member"}],"$mt":"i","$tp":[{"variance":"in","$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"variance":"in","$nm":"Arguments"}],"$an":{"shared":[],"doc":["A function model represents the model of a Ceylon function that you can invoke and inspect.\n\nA method is a member function: it is declared on classes or interfaces.\n\nThis is both a [[FunctionModel]] and a [[Member]]: you can invoke it with an instance value\nto bind it to that instance and obtain a [[Function]]:\n\n    class Outer(){\n        shared String foo(String name) => \"Hello \"+name;\n    }\n    \n    void test(){\n        Method<Outer,String,[String]> method = `Outer.foo`;\n        \/\/ Bind it to an instance value\n        Function<String,[String]> f = method(Outer());\n        \/\/ This will print: Hello Stef\n        print(f(\"Stef\"));\n    }\n"]},"$m":{"bind":{"$t":{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"Function"},"$ps":[[{"$t":{"$pk":"$","$nm":"Object"},"$mt":"prm","$nm":"container"}]],"$mt":"m","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"bind"}},"$nm":"Method"},"Type":{"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"}],"$an":{"shared":[],"doc":["A closed type.\n\nA closed type is a type which is fully resolved and bound and contains no open type variables.\nAll instance types are closed at runtime.\n\nYou have only four sorts of types:\n\n- [[ClassOrInterface]]\n- [[UnionType]]\n- [[IntersectionType]]\n- [[nothingType]]"]},"$m":{"exactly":{"$t":{"$pk":"$","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"},"$mt":"prm","$nm":"type"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["True if the given type is a exactly this type."]},"$nm":"exactly"},"subtypeOf":{"$t":{"$pk":"$","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"},"$mt":"prm","$nm":"type"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["True if this type is a subtype of the given type, or if both types are the same."]},"$nm":"subtypeOf"},"typeOf":{"$t":{"$pk":"$","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":"$","$nm":"Anything"},"$mt":"prm","$nm":"instance"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["True if the given instance is of this type, or is of a subtype of this type."]},"$nm":"typeOf"},"supertypeOf":{"$t":{"$pk":"$","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"},"$mt":"prm","$nm":"type"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["True if this type is a supertype of the given type, or if both types are the same."]},"$nm":"supertypeOf"}},"$nm":"Type"},"IntersectionType":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Intersection"}],"$pk":".","$nm":"Type"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Intersection"}],"$an":{"shared":[],"doc":["A closed intersection type."]},"$at":{"satisfiedTypes":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"List"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The list of closed satisfied types of this intersection."]},"$nm":"satisfiedTypes"}},"$nm":"IntersectionType"},"Applicable":{"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"}],"$an":{"shared":[],"doc":["Represents classes or functions that you can apply in a type-unsafe way.\n"]},"$m":{"namedApply":{"$t":{"$nm":"Type"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"String"},{"$mt":"tp","$pk":"$","$nm":"Object"}],"$pk":"$","$nm":"Entry"},{"$mt":"tp","$pk":"$","$nm":"Null"}],"$pk":"$","$nm":"Iterable"},"$mt":"prm","$nm":"arguments"}]],"$mt":"m","$an":{"shared":[],"formal":[],"throws":["InvocationException","If there are not enough or too many provided arguments, \nor if the target does not support named invocation"],"doc":["Type-unsafe application by name, to be used when the argument types are unknown until runtime.\n\nIf you need to pass [[null]] values, use the [[nullArgument]] singleton.\n\nThis has the same behaviour as invoking the applicable directly, but exchanges compile-time type\nsafety with runtime checks."]},"$nm":"namedApply"},"apply":{"$t":{"$nm":"Type"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"arguments"}]],"$mt":"m","$an":{"shared":[],"formal":[],"throws":["InvocationException","If there are not enough or too many provided arguments"],"doc":["Type-unsafe application, to be used when the argument types are unknown until runtime.\n\nThis has the same behaviour as invoking the applicable directly, but exchanges compile-time type\nsafety with runtime checks."]},"$nm":"apply"}},"$nm":"Applicable"},"UnionType":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Union"}],"$pk":".","$nm":"Type"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Union"}],"$an":{"shared":[],"doc":["A closed union type."]},"$at":{"caseTypes":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Union"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"List"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The list of closed case types of this union."]},"$nm":"caseTypes"}},"$nm":"UnionType"},"$pkg-shared":1,"FunctionModel":{"$sts":[{"$pk":".","$nm":"Model"},{"$pk":".","$nm":"Generic"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"variance":"in","$nm":"Arguments"}],"$an":{"shared":[],"doc":["A function model represents the model of a Ceylon function that you can inspect.\n\nA function model can be either a toplevel [[Function]] or a member [[Method]].\n"]},"$at":{"declaration":{"$t":{"$pk":"ceylon.language.meta.declaration","$nm":"FunctionDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This function's declaration."],"actual":[]},"$nm":"declaration"},"type":{"$t":{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"Type"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This function's return closed type."]},"$nm":"type"},"parameterTypes":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This function's parameter closed types"]},"$nm":"parameterTypes"}},"$nm":"FunctionModel"},"ValueModel":{"$sts":[{"$pk":".","$nm":"Model"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Get"},{"$def":{"$pk":".","$nm":"Nothing"},"variance":"in","$nm":"Set"}],"$an":{"shared":[],"doc":["A value model represents the model of a Ceylon value that you can inspect.\n\nA value model can be either a toplevel [[Value]] or a member [[Attribute]].\n"]},"$at":{"declaration":{"$t":{"$pk":"ceylon.language.meta.declaration","$nm":"ValueDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This value's declaration."],"actual":[]},"$nm":"declaration"},"type":{"$t":{"$tp":[{"$mt":"tp","$nm":"Get"}],"$pk":".","$nm":"Type"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This value's closed type."]},"$nm":"type"}},"$nm":"ValueModel"},"ClassModel":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"ClassOrInterface"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"variance":"in","$nm":"Arguments"}],"$an":{"shared":[],"doc":["A class model represents the model of a Ceylon class that you can inspect.\n\nA class model can be either a toplevel [[Class]] or a member [[MemberClass]].\n"]},"$at":{"declaration":{"$t":{"$pk":"ceylon.language.meta.declaration","$nm":"ClassDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"declaration"},"parameterTypes":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["This function's parameter closed types"]},"$nm":"parameterTypes"}},"$nm":"ClassModel"},"Attribute":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Get"},{"$mt":"tp","$nm":"Set"}],"$pk":".","$nm":"ValueModel"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Get"},{"$mt":"tp","$nm":"Set"}],"$pk":".","$nm":"Value"}],"$pk":".","$nm":"Member"}],"$mt":"i","$tp":[{"variance":"in","$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Get"},{"$def":{"$pk":".","$nm":"Nothing"},"variance":"in","$nm":"Set"}],"$an":{"shared":[],"doc":["An attribute model represents the model of a Ceylon attribute that you can read and inspect.\n\nAn attribute is a member value: it is declared on classes or interfaces.\n\nThis is both a [[ValueModel]] and a [[Member]]: you can invoke it with an instance value\nto bind it to that instance and obtain a [[Value]]:\n\n    class Outer(){\n        shared String foo = \"Hello\";\n    }\n    \n    void test(){\n        Attribute<Outer,String> attribute = `Outer.foo`;\n        Value<String> boundAttribute = attribute(Outer());\n        \/\/ This will print: Hello\n        print(boundAttribute.get());\n    }\n"]},"$m":{"bind":{"$t":{"$tp":[{"$mt":"tp","$nm":"Get"},{"$mt":"tp","$nm":"Set"}],"$pk":".","$nm":"Value"},"$ps":[[{"$t":{"$pk":"$","$nm":"Object"},"$mt":"prm","$nm":"container"}]],"$mt":"m","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"bind"}},"$nm":"Attribute"},"Value":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Get"},{"$mt":"tp","$nm":"Set"}],"$pk":".","$nm":"ValueModel"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Get"},{"$def":{"$pk":".","$nm":"Nothing"},"variance":"in","$nm":"Set"}],"$an":{"shared":[],"doc":["A value model represents the model of a Ceylon value that you can read and inspect.\n\nA value is a toplevel binding, declared on a package.\n\nThis is a [[ValueModel]] that you can query for a value declaration's current value:\n\n    shared String foo = \"Hello\";\n    \n    void test(){\n        Value<String> val = `foo`;\n        \/\/ This will print: Hello\n        print(val.get());\n    }\n"]},"$m":{"get":{"$t":{"$nm":"Get"},"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Reads the current value for this value binding. Note that in the case of getter\nvalues, this can throw if the getter throws."]},"$nm":"get"},"set":{"$t":{"$pk":"$","$nm":"Anything"},"$ps":[[{"$t":{"$nm":"Set"},"$mt":"prm","$nm":"newValue"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Changes this variable's value to the given new value. Note that in the case of\nsetter attributes, this can throw if the setter throws."]},"$nm":"set"},"setIfAssignable":{"$t":{"$pk":"$","$nm":"Anything"},"$ps":[[{"$t":{"$pk":"$","$nm":"Anything"},"$mt":"prm","$nm":"newValue"}]],"$mt":"m","$an":{"shared":[],"formal":[],"throws":["MutationException","If this value is not variable"],"doc":["Non type-safe equivalent to [[Value.set]], to be used when you don't know the \nvariable type at compile-time. This only works if the underlying value is \nvariable. Note that if the underlying variable is a setter, this can throw \nexceptions thrown in the setter block."]},"$nm":"setIfAssignable"}},"$nm":"Value"},"nullArgument":{"super":{"$pk":"$","$nm":"Basic"},"$mt":"o","$an":{"shared":[],"doc":["Use this singleton value to specify a named parameter which should have a [[null]] value in [[Applicable.namedApply]].\n"]},"$nm":"nullArgument"},"InvocationException":{"super":{"$pk":"$","$nm":"Exception"},"$ps":[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"message"}],"$mt":"c","$an":{"shared":[],"doc":["Thrown when attempting to invoke something which can't be invoked, like abstract class\ninitialisers."]},"$at":{"message$g89lkl":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$nm":"message"}},"$nm":"InvocationException"},"Function":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"FunctionModel"},{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":"$","$nm":"Callable"},{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"Applicable"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"variance":"in","$nm":"Arguments"}],"$an":{"shared":[],"doc":["A function model represents the model of a Ceylon function that you can invoke and inspect.\n\nA function is a toplevel binding, declared on a package.\n\nThis is a [[FunctionModel]] that you can also invoke:\n\n    shared String foo(String name) => \"Hello \"+name;\n    \n    void test(){\n        Function<String,[String]> f = `foo`;\n        \/\/ This will print: Hello Stef\n        print(f(\"Stef\"));\n    }\n"]},"$nm":"Function"},"TypeApplicationException":{"super":{"$pk":"$","$nm":"Exception"},"$ps":[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"message"}],"$mt":"c","$an":{"shared":[],"doc":["Thrown when declarations are applied with invalid or incompatible type arguments.\n\nFor example if you try to apply `Foo` with `String`, hoping to get a `Foo<String>`\nbut the type parameter for `Foo` only accepts types that satisfy `Numeric`.\n"]},"$at":{"message$mixz1b":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$nm":"message"}},"$nm":"TypeApplicationException"},"MemberClass":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"ClassModel"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"Class"}],"$pk":".","$nm":"Member"}],"$mt":"i","$tp":[{"variance":"in","$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"variance":"in","$nm":"Arguments"}],"$an":{"shared":[],"doc":["A class model represents the model of a Ceylon class that you can instantiate and inspect.\n\nA member class is is declared on classes or interfaces.\n\nThis is both a [[ClassModel]] and a [[Member]]: you can invoke it with an instance value\nto bind it to that instance and obtain a [[Class]]:\n\n    shared class Outer(String name){\n        shared class Inner(){\n            shared String hello => \"Hello \"+name;\n        }\n    }\n    \n    void test(){\n        MemberClass<Outer,Outer.Inner,[]> memberClass = `Outer.Inner`;\n        Class<Outer.Inner,[]> c = memberClass(Outer(\"Stef\"));\n        \/\/ This will print: Hello Stef\n        print(c().hello);\n    }\n"]},"$m":{"bind":{"$t":{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"Class"},"$ps":[[{"$t":{"$pk":"$","$nm":"Object"},"$mt":"prm","$nm":"container"}]],"$mt":"m","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"bind"}},"$nm":"MemberClass"},"Interface":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"InterfaceModel"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"}],"$an":{"shared":[],"doc":["An interface model that you can inspect."]},"$nm":"Interface"},"MutationException":{"super":{"$pk":"$","$nm":"Exception"},"$ps":[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"message"}],"$mt":"c","$an":{"shared":[],"doc":["Thrown when you try to change the value of a non-variable value"]},"$at":{"message$b4sc8k":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$nm":"message"}},"$nm":"MutationException"},"Class":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"ClassModel"},{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":"$","$nm":"Callable"},{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"Applicable"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"variance":"in","$nm":"Arguments"}],"$an":{"shared":[],"doc":["A class model represents the model of a Ceylon class that you can instantiate and inspect.\n\nA class is a toplevel type, declared on a package.\n\nThis is a [[ClassModel]] that you can also invoke to instantiate new instances of the class:\n\n    shared class Foo(String name){\n        shared String hello => \"Hello \"+name;\n    }\n    \n    void test(){\n        Class<Foo,[String]> c = `Foo`;\n        \/\/ This will print: Hello Stef\n        print(c(\"Stef\").hello);\n    }\n"]},"$nm":"Class"},"nothingType":{"super":{"$pk":"$","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Type"}],"$mt":"o","$an":{"shared":[],"doc":["The singleton closed type for [[Nothing|ceylon.language::nothing]]."]},"$m":{"exactly":{"$t":{"$pk":"$","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"},"$mt":"prm","$nm":"type"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"exactly"},"subtypeOf":{"$t":{"$pk":"$","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"},"$mt":"prm","$nm":"type"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"subtypeOf"},"typeOf":{"$t":{"$pk":"$","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":"$","$nm":"Anything"},"$mt":"prm","$nm":"instance"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"typeOf"},"supertypeOf":{"$t":{"$pk":"$","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"},"$mt":"prm","$nm":"type"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"supertypeOf"}},"$at":{"string":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"nothingType"},"Generic":{"$mt":"i","$an":{"shared":[],"doc":["A generic model which has closed type arguments."]},"$at":{"typeArguments":{"$t":{"$tp":[{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"TypeParameter"},{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Map"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The map of type parameter declaration to type arguments for this generic model."]},"$nm":"typeArguments"}},"$nm":"Generic"},"ClassOrInterface":{"of":[{"$tp":[{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"ClassModel"},{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"InterfaceModel"}],"$sts":[{"$pk":".","$nm":"Model"},{"$pk":".","$nm":"Generic"},{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"Type"}],"$mt":"i","$tp":[{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"}],"$an":{"shared":[],"doc":["Model of a class or interface that you can inspect.\n\nThe models of classes and interfaces are also closed types."]},"$m":{"getClass":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"MemberClass"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"types"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Arguments"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Gets a member class by name. Returns `null` if not found."]},"$nm":"getClass"},"getDeclaredClassOrInterface":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Kind"}],"$pk":".","$nm":"Member"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"types"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"ClassOrInterface"}],"$def":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"ClassOrInterface"},"$nm":"Kind"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Gets a member class or interface by name. Returns `null` if not found."]},"$nm":"getDeclaredClassOrInterface"},"getDeclaredInterface":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"MemberInterface"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"types"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Gets a member interface by name. Returns `null` if not found."]},"$nm":"getDeclaredInterface"},"getMethod":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"Method"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"types"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Arguments"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Gets a method by name. Returns `null` if not found."]},"$nm":"getMethod"},"getDeclaredMethod":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"Method"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"types"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Arguments"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Gets a method by name. Returns `null` if not found."]},"$nm":"getDeclaredMethod"},"getInterface":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"MemberInterface"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"types"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Gets a member interface by name. Returns `null` if not found."]},"$nm":"getInterface"},"getDeclaredAttribute":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Get"},{"$mt":"tp","$nm":"Set"}],"$pk":".","$nm":"Attribute"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Get"},{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Set"}],"$an":{"shared":[],"formal":[],"throws":["IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."],"doc":["Gets an attribute by name. Returns `null` if not found."]},"$nm":"getDeclaredAttribute"},"getAttribute":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Get"},{"$mt":"tp","$nm":"Set"}],"$pk":".","$nm":"Attribute"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Get"},{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Set"}],"$an":{"shared":[],"formal":[],"throws":["IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."],"doc":["Gets an attribute by name. Returns `null` if not found."]},"$nm":"getAttribute"},"getClassOrInterface":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Kind"}],"$pk":".","$nm":"Member"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"types"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"ClassOrInterface"}],"$def":{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"ClassOrInterface"},"$nm":"Kind"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Gets a member class or interface by name. Returns `null` if not found."]},"$nm":"getClassOrInterface"},"getDeclaredClass":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$nm":"Type"},{"$mt":"tp","$nm":"Arguments"}],"$pk":".","$nm":"MemberClass"}]},"$ps":[[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"name"},{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"prm","seq":1,"$nm":"types"}]],"$mt":"m","$tp":[{"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"$nm":"Type"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":"$","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Nothing"},"$nm":"Arguments"}],"$an":{"shared":[],"formal":[],"throws":["TypeApplicationException","If the specified closed type argument values are not compatible with the actual result's type parameters."],"doc":["Gets a member class by name. Returns `null` if not found."]},"$nm":"getDeclaredClass"}},"$at":{"extendedType":{"$t":{"comp":"u","$ts":[{"$pk":"$","$nm":"Null"},{"$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"ClassModel"}]},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The extended closed type for this class or interface. Note that the [[Anything|ceylon.language::Anything]] type\nhas no extended type since it is the top of the type hierarchy."]},"$nm":"extendedType"},"declaration":{"$t":{"$pk":"ceylon.language.meta.declaration","$nm":"ClassOrInterfaceDeclaration"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The declaration for this class or interface."],"actual":[]},"$nm":"declaration"},"caseValues":{"$t":{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The list of case values for this type. This omits any case type to only contain case values."]},"$nm":"caseValues"},"satisfiedTypes":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":"$","$nm":"Anything"}],"$pk":".","$nm":"InterfaceModel"}],"$pk":"$","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The list of closed types that this class or interface satisfies."]},"$nm":"satisfiedTypes"}},"$nm":"ClassOrInterface"},"IncompatibleTypeException":{"super":{"$pk":"$","$nm":"Exception"},"$ps":[{"$t":{"$pk":"$","$nm":"String"},"$mt":"prm","$nm":"message"}],"$mt":"c","$an":{"shared":[],"doc":["Thrown when you invoke metamodel methods with invalid or incompatible type arguments.\n\nFor example if you try to get an attribute from a class and expect an attribute of `String`\ntype but it is an attribute of `Integer` type.\n"]},"$at":{"message$hu04ue":{"$t":{"$pk":"$","$nm":"String"},"$mt":"a","$nm":"message"}},"$nm":"IncompatibleTypeException"},"MemberInterface":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"InterfaceModel"},{"$tp":[{"$mt":"tp","$nm":"Container"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"Interface"}],"$pk":".","$nm":"Member"}],"$mt":"i","$tp":[{"variance":"in","$nm":"Container"},{"$def":{"$pk":"$","$nm":"Anything"},"variance":"out","$nm":"Type"}],"$an":{"shared":[],"doc":["A member interface model that you can inspect."]},"$m":{"bind":{"$t":{"$tp":[{"$mt":"tp","$nm":"Type"}],"$pk":".","$nm":"Interface"},"$ps":[[{"$t":{"$pk":"$","$nm":"Object"},"$mt":"prm","$nm":"container"}]],"$mt":"m","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"bind"}},"$nm":"MemberInterface"}},"ceylon.language":{"Iterator":{"$mt":"i","$tp":[{"variance":"out","$nm":"Element"}],"$an":{"shared":[],"see":["Iterable"],"doc":["Produces elements of an [[Iterable]] object."],"by":["Gavin"]},"$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"formal":[],"doc":["The next element, or [[finished]] if there are no more \nelements to be iterated."]},"$nm":"next"}},"$nm":"Iterator"},"LateAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"LateAnnotation"},{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"ValueDeclaration"}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[late]]."]},"$annot":1,"$nm":"LateAnnotation"},"Callable":{"$mt":"i","$tp":[{"variance":"out","$nm":"Return"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"Sequential"}],"variance":"in","$nm":"Arguments"}],"$an":{"shared":[],"see":["Tuple"],"doc":["A reference to a function. The type arguments encode the \n[[return type|Return]] of the function along with its \n[[parameter types|Arguments]]. The parameter types are \nrepresented by a tuple type. Functions declared `void`\nare considered to have the return type `Anything`.\n\nFor example, the type of the function reference \n`plus<Float>` to the function [[plus]] is:\n\n    Callable<Float, [Float,Float]>\n\nwhich we usually abbreviate `Float(Float,Float)`.\n\nA variadic function is represented using an unterminated \ntuple type. For example, the type of the function reference\n`concatenate<Object>` to the function [[concatenate]] is:\n\n    Callable<Object[], [{Object*}*]>\n\nwhich we usually abbreviate `Object({Object*}*)`.\n\nA function with defaulted parameters is represented using\na union type. For example, the type of the method reference\n`process.writeLine` to the method [[process.writeLine]] is:\n\n    Callable<Anything, [String]|[]>\n\nwhich we usually abbreviate `Anything(String=)`.\n\nAny instance of `Callable` may be _invoked_ by supplying a \npositional argument list:\n\n    Float(Float,Float) add = plus<Float>;\n    value four = add(2.0, 2.0);\n\nor by supplying a tuple containing the arguments:\n\n    Float(Float,Float) add = plus<Float>;\n    [Float,Float] twoAndTwo = [2.0, 2.0];\n    value four = add(*twoAndTwo);\n\nThe type of the tuple must be assignable to the type \nargument of `Arguments`.\n\nThis interface may not be implemented by user code."]},"$nm":"Callable"},"ThrownExceptionAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"ThrownExceptionAnnotation"},{"comp":"u","$mt":"tp","$ts":[{"$pk":"ceylon.language.meta.declaration","$nm":"FunctionOrValueDeclaration"},{"$pk":"ceylon.language.meta.declaration","$nm":"ClassDeclaration"}]}],"$pk":".","$nm":"SequencedAnnotation"}],"$ps":[{"$t":{"$pk":"ceylon.language.meta.declaration","$nm":"Declaration"},"$mt":"prm","$an":{"shared":[],"doc":["The [[Exception]] type that this thrown."]},"$nm":"type"},{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$an":{"shared":[],"doc":["A description, in Markdown syntax, of the circumstances \nthat cause this exception to be thrown."]},"$nm":"when"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[throws]]."]},"$annot":1,"$at":{"when":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"doc":["A description, in Markdown syntax, of the circumstances \nthat cause this exception to be thrown."]},"$nm":"when"},"type":{"$t":{"$pk":"ceylon.language.meta.declaration","$nm":"Declaration"},"$mt":"a","$an":{"shared":[],"doc":["The [[Exception]] type that this thrown."]},"$nm":"type"}},"$nm":"ThrownExceptionAnnotation"},"Array":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Array"}],"$pk":".","$nm":"Ranged"}],"$ps":[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}],"$mt":"c","$tp":[{"$nm":"Element"}],"$an":{"shared":[],"final":[],"native":[],"doc":["A fixed-sized array of mutable elements. An _empty_ array \nis an array of [[size]] `0`. Any element of an array may be\nset to a new value.\n\n    value array = Array { \"hello\", \"world\" };\n    array.set(0, \"goodbye\");\n\nThis class is provided primarily to support interoperation \nwith Java, and for some performance-critical low-level \nprogramming tasks."]},"$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Array"},"$mt":"m","$an":{"shared":[],"native":[],"doc":["A new array with the same elements as this array."],"actual":[]},"$nm":"clone"},"copyTo":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Array"},"$mt":"prm","$an":{"doc":["The array into which to copy the elements."]},"$nm":"other"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$def":1,"$an":{"doc":["The index of the first element in this array to copy."]},"$nm":"sourcePosition"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$def":1,"$an":{"doc":["The index in the given array into which to \ncopy the first element."]},"$nm":"destinationPosition"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$def":1,"$an":{"doc":["The number of elements to copy."]},"$nm":"length"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Efficiently copy the elements in the segment\n`sourcePosition:length` of this array to the segment \n`destinationPosition:length` of the given \n[[array|other]]."]},"$nm":"copyTo"},"get":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"get"},"spanTo":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Array"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"spanTo"},"segment":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Array"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"segment"},"set":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$an":{"doc":["The index of the element to replace."]},"$nm":"index"},{"$t":{"$nm":"Element"},"$mt":"prm","$an":{"doc":["The new element."]},"$nm":"element"}]],"$mt":"m","$an":{"shared":[],"native":[],"throws":["AssertionError","if the given index is out of bounds, that is, \nif `index<0` or if `index>lastIndex`"],"doc":["Replace the existing element at the specified index \nwith the given element."]},"$nm":"set"},"spanFrom":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Array"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"spanFrom"},"span":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Array"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"span"}},"$at":{"lastIndex":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"lastIndex"},"rest":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Array"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The rest of the array, without the first element."],"actual":[]},"$nm":"rest"},"reversed":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Array"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Reverse this array, returning a new array."],"actual":[]},"$nm":"reversed"},"elements$kbphbf":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"a","$nm":"elements"}},"$nm":"Array"},"ArraySequence":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"}],"$ps":[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}],"$mt":"c","$tp":[{"variance":"out","$nm":"Element"}],"$an":{"shared":[],"final":[],"native":[],"see":["SequenceBuilder","SequenceAppender"],"doc":["An immutable [[Sequence]] implemented using an [[Array]]. \nWhere possible, copying of the underlying array is avoided."]},"$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"ArraySequence"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"clone"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"iterator"},"defines":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"key"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"defines"},"get":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"get"},"count":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"count"},"spanTo":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"spanTo"},"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"equals"},"segment":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"segment"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"contains"},"spanFrom":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"spanFrom"},"span":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"span"}},"$at":{"lastIndex":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"lastIndex"},"last":{"$t":{"$nm":"Element"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"last"},"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"hash"},"reversed":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"ArraySequence"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"reversed"},"rest":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"rest"},"first":{"$t":{"$nm":"Element"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"first"},"elements$8ewi38":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"},"$mt":"a","$nm":"elements"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"size"}},"$nm":"ArraySequence"},"Singleton":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"}],"$ps":[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}],"$mt":"c","$tp":[{"variance":"out","$nm":"Element"}],"$an":{"shared":[],"doc":["A sequence with exactly one element, which may be null."]},"$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"},"$mt":"m","$an":{"shared":[],"doc":["Returns a `Singleton` with the same element."],"actual":[]},"$nm":"clone"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$c":{"SingletonIterator$f6hqff":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"}],"$mt":"c","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"string"},"done$wwj31e":{"$t":{"$pk":".","$nm":"Boolean"},"var":1,"$mt":"a","$an":{"shared":[],"actual":[],"variable":[]},"$nm":"done"}},"$nm":"SingletonIterator$f6hqff"}},"$nm":"iterator"},"sort":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"},"$ps":[[{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"a"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"b"}]],"$mt":"prm","$pt":"f","$nm":"comparing"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"sort"},"get":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns the contained element, if the specified \nindex is `0`."],"actual":[]},"$nm":"get"},"count":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns `1` if this `Singleton`'s element\nsatisfies the predicate, or `0` otherwise."],"actual":[]},"$nm":"count"},"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"doc":["A `Singleton` can be equal to another `List` if \nthat `List` has only one element which is equal to \nthis `Singleton`'s element."],"actual":[]},"$nm":"equals"},"select":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"},{"$pk":".","$nm":"Empty"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"select"},"segment":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Empty"},{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns a `Singleton` if the given starting index \nis `0` and the given `length` is greater than `0`.\nOtherwise, returns an instance of `Empty`."],"actual":[]},"$nm":"segment"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns `true` if the specified element is this \n`Singleton`'s element."],"actual":[]},"$nm":"contains"},"every":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"every"},"fold":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"initial"},{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"partial"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$nm":"accumulating"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"fold"},"taking":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"},{"$pk":".","$nm":"Empty"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"take"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"taking"},"reduce":{"$t":{"$nm":"Element"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"comp":"u","$ts":[{"$nm":"Result"},{"$nm":"Element"}]},"$mt":"prm","$nm":"partial"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$nm":"accumulating"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"reduce"},"chain":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"},{"$mt":"tp","$nm":"OtherAbsent"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$tp":[{"$nm":"Other"},{"$sts":[{"$pk":".","$nm":"Null"}],"$nm":"OtherAbsent"}],"$an":{"shared":[],"actual":[]},"$nm":"chain"},"spanTo":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Empty"},{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"spanTo"},"any":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"any"},"map":{"$t":{"$tp":[{"$mt":"tp","$nm":"Result"}],"$pk":".","$nm":"Singleton"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"map"},"findLast":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$nm":"findLast"},"spanFrom":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Empty"},{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"spanFrom"},"skipping":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"},{"$pk":".","$nm":"Empty"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"skip"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"skipping"},"find":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$m":{"selecting$gb54cd":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"m","$nm":"selecting"}},"$nm":"find"},"filter":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"},{"$pk":".","$nm":"Empty"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"filter"},"collect":{"$t":{"$tp":[{"$mt":"tp","$nm":"Result"}],"$pk":".","$nm":"Singleton"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"collect"},"span":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Empty"},{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns a `Singleton` if the given starting index \nis `0`. Otherwise, returns an instance of `Empty`."],"actual":[]},"$nm":"span"}},"$at":{"lastIndex":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"doc":["Returns `0`."],"actual":[]},"$nm":"lastIndex"},"last":{"$t":{"$nm":"Element"},"$mt":"g","$an":{"shared":[],"doc":["Returns the element contained in this `Singleton`."],"actual":[]},"$nm":"last"},"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"hash"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"string"},"coalesced":{"$t":{"comp":"u","$ts":[{"$tp":[{"comp":"i","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Object"}]}],"$pk":".","$nm":"Singleton"},{"$pk":".","$nm":"Empty"}]},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"coalesced"},"element$9sweay":{"$t":{"$nm":"Element"},"$mt":"a","$nm":"element"},"reversed":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Singleton"},"$mt":"g","$an":{"shared":[],"doc":["Return this singleton."],"actual":[]},"$nm":"reversed"},"rest":{"$t":{"$pk":".","$nm":"Empty"},"$mt":"g","$an":{"shared":[],"doc":["Returns `Empty`."],"actual":[]},"$nm":"rest"},"first":{"$t":{"$nm":"Element"},"$mt":"g","$an":{"shared":[],"doc":["Returns the element contained in this `Singleton`."],"actual":[]},"$nm":"first"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"doc":["Returns `1`."],"actual":[]},"$nm":"size"}},"$nm":"Singleton"},"byKey":{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$nm":"Key"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Key"},"$mt":"prm","$nm":"y"}]],"$mt":"prm","$pt":"f","$nm":"comparing"}],[{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$pk":".","$nm":"Object"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"x"},{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$pk":".","$nm":"Object"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"y"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Key"}],"$an":{"shared":[],"see":["byItem"],"doc":["A comparator for `Entry`s which compares their keys \naccording to the given `comparing()` function."]},"$nm":"byKey"},"Comparable":{"of":[{"$nm":"Other"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Comparable"}],"variance":"in","$nm":"Other"}],"$an":{"shared":[],"doc":["The general contract for values whose magnitude can be \ncompared. `Comparable` imposes a total ordering upon\ninstances of any type that satisfies the interface.\n\nIf a type `T` satisfies `Comparable<T>`, then instances \nof `T` may be compared using the comparison operators\n`<`, `>`, `<=`, `>=`.\n\n    assert (x>=0.0);\n\nA _ternary comparison_ is useful for asserting lower and \nupper bounds.\n\n    assert (0.0<=x<1.0);\n\nFinally, the _compare_ operator `<=>` may be used to \nproduce an instance of [[Comparison]].\n\n    switch (x<=>y)\n    case (equal) {\n        print(\"same same\");\n    }\n    case (smaller) {\n        print(\"x smaller\");\n    }\n    case (larger) {\n        print(\"y smaller\");\n    }\n\nThe total order of a type must be consistent with the \ndefinition of equality for the type. That is, there are \nthree mutually exclusive possibilities:\n\n- `x<y`,\n- `x>y`, or\n- `x==y`\n\n(These possibilities are expressed by the enumerated\ninstances [[smaller]], [[larger]], and [[equal]] of\n`Comparison`.)"],"by":["Gavin"]},"$m":{"notLargerThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if this value is smaller than or equal to \nthe given value."]},"$nm":"notLargerThan"},"largerThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if this value is strictly larger than the \ngiven value."]},"$nm":"largerThan"},"notSmallerThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if this value is larger than or equal to the \ngiven value."]},"$nm":"notSmallerThan"},"compare":{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"formal":[],"see":["equals"],"doc":["Compares this value with the given value. \nImplementations must respect the constraints that: \n\n- `x==y` if and only if `x<=>y == equal` \n   (consistency with `equals()`), \n- if `x>y` then `y<x` (symmetry), and \n- if `x>y` and `y>z` then `x>z` (transitivity)."]},"$nm":"compare"},"smallerThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if this value is strictly smaller than the \ngiven value."]},"$nm":"smallerThan"}},"$nm":"Comparable","$st":"Other"},"AbstractAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"AbstractAnnotation"},{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"ClassDeclaration"}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[abstract]]."]},"$annot":1,"$nm":"AbstractAnnotation"},"Comparison":{"abstract":1,"super":{"$pk":".","$nm":"Basic"},"of":[{"$pk":".","$nm":"larger"},{"$pk":".","$nm":"smaller"},{"$pk":".","$nm":"equal"}],"$ps":[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$an":{"shared":[],"actual":[]},"$nm":"string"}],"$mt":"c","$an":{"abstract":[],"shared":[],"see":["Comparable"],"doc":["The result of a comparison between two [[Comparable]] \nobjects."],"by":["Gavin"]},"$m":{"largerThan":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"m","$an":{"shared":[],"deprecated":[]},"$nm":"largerThan"},"equal":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"m","$an":{"shared":[],"deprecated":[]},"$nm":"equal"},"asSmallAs":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"m","$an":{"shared":[],"deprecated":[]},"$nm":"asSmallAs"},"asLargeAs":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"m","$an":{"shared":[],"deprecated":[]},"$nm":"asLargeAs"},"smallerThan":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"m","$an":{"shared":[],"deprecated":[]},"$nm":"smallerThan"},"unequal":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"m","$an":{"shared":[],"deprecated":[]},"$nm":"unequal"}},"$at":{"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"Comparison"},"annotation":{"$t":{"$pk":".","$nm":"AnnotationAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"see":["Annotation"],"doc":["Annotation to mark a class as an *annotation class*, or a \ntop-level function as an *annotation constructor*."]},"$annot":1,"$nm":"annotation"},"Empty":{"of":[{"$pk":".","$nm":"empty"}],"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Sequential"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Ranged"}],"$mt":"i","$an":{"shared":[],"see":["Sequence"],"doc":["A sequence with no elements. The type `Empty` may be\nabbreviated `[]`, and an instance is produced by the \nexpression `[]`. That is, in the following expression,\n`none` has type `[]` and refers to the value `[]`:\n\n    [] none = [];\n\n(Whether the syntax `[]` refers to the type or the value \ndepends upon how it occurs grammatically.)"]},"$m":{"sort":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"a"},{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"b"}]],"$mt":"prm","$pt":"f","$nm":"comparing"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"sort"},"count":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns 0 for any given predicate."],"actual":[]},"$nm":"count"},"segment":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns an `Empty` for any given segment."],"actual":[]},"$nm":"segment"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns `false` for any given element."],"actual":[]},"$nm":"contains"},"by":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"step"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"by"},"every":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"every"},"following":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Other"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"Other"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"head"}]],"$mt":"m","$tp":[{"$nm":"Other"}],"$an":{"shared":[],"actual":[]},"$nm":"following"},"withTrailing":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$tp":[{"$nm":"Element"}],"$an":{"shared":[],"actual":[]},"$nm":"withTrailing"},"spanTo":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns an `Empty` for any given span."],"actual":[]},"$nm":"spanTo"},"any":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"any"},"map":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"map"},"spanFrom":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns an `Empty` for any given span."],"actual":[]},"$nm":"spanFrom"},"find":{"$t":{"$pk":".","$nm":"Null"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"find"},"skipping":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"skip"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"skipping"},"clone":{"$t":{"$pk":".","$nm":"Empty"},"$mt":"m","$an":{"shared":[],"doc":["Returns an `Empty`."],"actual":[]},"$nm":"clone"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"doc":["Returns an iterator that is already exhausted."],"actual":[]},"$nm":"iterator"},"get":{"$t":{"$pk":".","$nm":"Null"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns `null` for any given index."],"actual":[]},"$nm":"get"},"select":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"select"},"fold":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"initial"},{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"partial"},{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"accumulating"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"fold"},"reduce":{"$t":{"$pk":".","$nm":"Null"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"partial"},{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"accumulating"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"reduce"},"taking":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"take"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"taking"},"defines":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"defines"},"chain":{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"},{"$mt":"tp","$nm":"OtherAbsent"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"},{"$mt":"tp","$nm":"OtherAbsent"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$tp":[{"$nm":"Other"},{"$sts":[{"$pk":".","$nm":"Null"}],"$nm":"OtherAbsent"}],"$an":{"shared":[],"doc":["Returns `other`."],"actual":[]},"$nm":"chain"},"withLeading":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$tp":[{"$nm":"Element"}],"$an":{"shared":[],"actual":[]},"$nm":"withLeading"},"filter":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"filter"},"span":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns an `Empty` for any given span."],"actual":[]},"$nm":"span"},"collect":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"collect"}},"$at":{"lastIndex":{"$t":{"$pk":".","$nm":"Null"},"$mt":"g","$an":{"shared":[],"doc":["Returns `null`."],"actual":[]},"$nm":"lastIndex"},"last":{"$t":{"$pk":".","$nm":"Null"},"$mt":"g","$an":{"shared":[],"doc":["Returns `null`."],"actual":[]},"$nm":"last"},"indexed":{"$t":{"$pk":".","$nm":"Empty"},"$mt":"g","$an":{"shared":[],"doc":["Returns an `Empty`."],"actual":[]},"$nm":"indexed"},"sequence":{"$t":{"$pk":".","$nm":"Empty"},"$mt":"g","$an":{"shared":[],"doc":["Returns an `Empty`."],"actual":[]},"$nm":"sequence"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"doc":["Returns a string description of the empty sequence: \n`[]`."],"actual":[]},"$nm":"string"},"coalesced":{"$t":{"$pk":".","$nm":"Empty"},"$mt":"g","$an":{"shared":[],"doc":["Returns an `Empty`."],"actual":[]},"$nm":"coalesced"},"empty":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"doc":["Returns `true`."],"actual":[]},"$nm":"empty"},"rest":{"$t":{"$pk":".","$nm":"Empty"},"$mt":"g","$an":{"shared":[],"doc":["Returns an `Empty`."],"actual":[]},"$nm":"rest"},"reversed":{"$t":{"$pk":".","$nm":"Empty"},"$mt":"g","$an":{"shared":[],"doc":["Returns an `Empty`."],"actual":[]},"$nm":"reversed"},"first":{"$t":{"$pk":".","$nm":"Null"},"$mt":"g","$an":{"shared":[],"doc":["Returns `null`."],"actual":[]},"$nm":"first"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"doc":["Returns 0."],"actual":[]},"$nm":"size"}},"$nm":"Empty"},"ActualAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"ActualAnnotation"},{"comp":"u","$mt":"tp","$ts":[{"$pk":"ceylon.language.meta.declaration","$nm":"FunctionOrValueDeclaration"},{"$pk":"ceylon.language.meta.declaration","$nm":"ClassOrInterfaceDeclaration"}]}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[actual]]."]},"$annot":1,"$nm":"ActualAnnotation"},"SeeAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"SeeAnnotation"},{"$mt":"tp","$pk":".","$nm":"Annotated"}],"$pk":".","$nm":"SequencedAnnotation"}],"$ps":[{"$t":{"$tp":[{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"Declaration"}],"$pk":".","$nm":"Sequential"},"$mt":"prm","seq":1,"$an":{"shared":[],"doc":["The program elements being referred to."]},"$nm":"programElements"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[see]]."]},"$annot":1,"$at":{"programElements":{"$t":{"$tp":[{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"Declaration"}],"$pk":".","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"doc":["The program elements being referred to."]},"$nm":"programElements"}},"$nm":"SeeAnnotation"},"Enumerable":{"of":[{"$nm":"Other"}],"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Ordinal"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Enumerable"}],"variance":"out","$nm":"Other"}],"$an":{"shared":[],"doc":["Abstraction of [[ordinal types|Ordinal]] whose instances \ncan be mapped to the [[integers|Integer]] or to a range of \nintegers."]},"$at":{"integerValue":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The corresponding integer. The implementation must\nsatisfy these constraints:\n\n    (x.successor).integerValue = x.integerValue+1\n    (x.predecessor).integerValue = x.integerValue-1\n\nfor every instance `x` of the enumerable type."]},"$nm":"integerValue"}},"$nm":"Enumerable","$st":"Other"},"empty":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$pk":".","$nm":"Empty"}],"$mt":"o","$an":{"shared":[],"doc":["A sequence with no elements, abbreviated `[]`. The unique \ninstance of the type `[]`."]},"$nm":"empty"},"DeprecationAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"DeprecationAnnotation"},{"$mt":"tp","$pk":".","$nm":"Annotated"}],"$pk":".","$nm":"OptionalAnnotation"}],"$ps":[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$an":{"shared":[],"doc":["A description, in Markdown syntax, of why the element \nis deprecated, and of what alternatives are available."]},"$nm":"description"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[deprecated]]."]},"$annot":1,"$at":{"reason":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"String"}]},"$mt":"g","$an":{"shared":[],"doc":["A description, in Markdown syntax, of why the element \nis deprecated, and what alternatives are available, or \nnull."]},"$nm":"reason"},"description":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"doc":["A description, in Markdown syntax, of why the element \nis deprecated, and of what alternatives are available."]},"$nm":"description"}},"$nm":"DeprecationAnnotation"},"false":{"super":{"$pk":".","$nm":"Boolean"},"$mt":"o","$an":{"shared":[],"native":[],"doc":["A value representing falsity in Boolean logic."]},"$at":{"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"false"},"compose":{"$t":{"$tp":[{"$mt":"tp","$nm":"X"},{"$mt":"tp","$nm":"Args"}],"$pk":".","$nm":"Callable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"X"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Y"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"Y"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"x"},{"$t":{"$tp":[{"$mt":"tp","$nm":"Y"},{"$mt":"tp","$nm":"Args"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"y"}]],"$mt":"m","$tp":[{"$nm":"X"},{"$nm":"Y"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"Sequential"}],"$nm":"Args"}],"$an":{"shared":[],"see":["curry","uncurry"],"doc":["Given a function with return type `Y`, and a second \nfunction with a single parameter also of type `Y`, \nreturn the composition of the two functions. The\nfirst function may have any number of parameters.\n\nFor any such functions `f()` and `g()`,\n\n    compose(g,f)(*args)==g(f(*args))\n\nfor every possible argument tuple `args` of `f()`."]},"$nm":"compose"},"Sequential":{"of":[{"$pk":".","$nm":"Empty"},{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"}],"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"}],"$pk":".","$nm":"Ranged"}],"$mt":"i","$tp":[{"variance":"out","$nm":"Element"}],"$an":{"shared":[],"see":["Tuple"],"doc":["A possibly-empty, immutable sequence of values. The type \n`Sequential<Element>` may be abbreviated `[Element*]` or \n`Element[]`. \n\n`Sequential` has two enumerated subtypes:\n\n- `Empty`, abbreviated `[]`, represents an empty sequence, \n   and\n- `Sequence<Element>`, abbreviated `[Element+]` represents \n   a non-empty sequence, and has the very important \n   subclass [[Tuple]]."]},"$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$mt":"m","$an":{"shared":[],"default":[],"doc":["This sequence."],"actual":[]},"$nm":"clone"},"following":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Other"},{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Nothing"}]}]},{"$mt":"tp","$nm":"Other"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"}],"$pk":".","$nm":"Tuple"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"head"}]],"$mt":"m","$tp":[{"$nm":"Other"}],"$an":{"shared":[],"formal":[],"doc":["Produces a sequence with a given [[initial element|head]], \nfollowed by the elements of this sequence."],"actual":[]},"$nm":"following"},"terminal":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Select the last elements of the sequence, returning a \nsequence no longer than the given length. If this \nsequence is shorter than the given length, return this \nsequence. Otherwise return a sequence of the given \nlength."],"actual":[]},"$nm":"terminal"},"trimTrailing":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"trimming"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Trim the elements satisfying the given predicate\nfunction from the end of this sequence, returning a \nsequence no longer than this sequence."],"actual":[]},"$nm":"trimTrailing"},"initial":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Select the first elements of this sequence, returning \na sequence no longer than the given length. If this \nsequence is shorter than the given length, return this \nsequence. Otherwise return a sequence of the given \nlength."],"actual":[]},"$nm":"initial"},"trimLeading":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"trimming"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Trim the elements satisfying the given predicate\nfunction from the start of this sequence, returning \na sequence no longer than this sequence."],"actual":[]},"$nm":"trimLeading"},"repeat":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"times"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Returns a sequence formed by repeating the elements of \nthis sequence the given number of times, or an empty \nsequence if `times<=0`."],"actual":[]},"$nm":"repeat"},"trim":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"trimming"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Trim the elements satisfying the given predicate\nfunction from the start and end of this sequence, \nreturning a sequence no longer than this sequence."],"actual":[]},"$nm":"trim"}},"$at":{"sequence":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["This sequence."],"actual":[]},"$nm":"sequence"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["A string of form `\"[ x, y, z ]\"` where `x`, `y`, and \n`z` are the `string` representations of the elements of \nthis collection, as produced by the iterator of the \ncollection, or the string `\"{}\"` if this collection \nis empty. If the collection iterator produces the value \n`null`, the string representation contains the string \n`\"null\"`."],"actual":[]},"$nm":"string"},"rest":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The rest of the sequence, without the first \nelement."],"actual":[]},"$nm":"rest"},"reversed":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["Reverse this sequence, returning a new sequence."],"actual":[]},"$nm":"reversed"}},"$nm":"Sequential"},"Finished":{"abstract":1,"super":{"$pk":".","$nm":"Basic"},"of":[{"$pk":".","$nm":"finished"}],"$mt":"c","$an":{"abstract":[],"shared":[],"see":["Iterator"],"doc":["The type of the value that indicates that an [[Iterator]] \nis exhausted and has no more values to return."]},"$nm":"Finished"},"plus":{"$t":{"$nm":"Value"},"$ps":[[{"$t":{"$nm":"Value"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Value"},"$mt":"prm","$nm":"y"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"}],"$pk":".","$nm":"Summable"}],"$nm":"Value"}],"$an":{"shared":[],"see":["times","sum"],"doc":["Add the given `Summable` values."]},"$nm":"plus"},"final":{"$t":{"$pk":".","$nm":"FinalAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to mark a class as final. A `final` class may \nnot be extended. Marking a class as final affects disjoint\ntype analysis."]},"$annot":1,"$nm":"final"},"coalesce":{"$t":{"$tp":[{"comp":"i","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Object"}]},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$an":{"doc":["The values, some of which may be null."]},"$nm":"values"}]],"$mt":"m","$tp":[{"$nm":"Element"}],"$an":{"shared":[],"doc":["Return a sequence containing the given values which are not\nnull. If there are no values which are not null, return an \nempty sequence."]},"$nm":"coalesce"},"Entry":{"super":{"$pk":".","$nm":"Object"},"$ps":[{"$t":{"$nm":"Key"},"$hdn":1,"$mt":"prm","$an":{"shared":[],"doc":["The key used to access the entry."]},"$nm":"key"},{"$t":{"$nm":"Item"},"$hdn":1,"$mt":"prm","$an":{"shared":[],"doc":["The value associated with the key."]},"$nm":"item"}],"$mt":"c","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"variance":"out","$nm":"Key"},{"$sts":[{"$pk":".","$nm":"Object"}],"variance":"out","$nm":"Item"}],"$an":{"shared":[],"final":[],"doc":["A pair containing a _key_ and an associated value called \nthe _item_. Used primarily to represent the elements of a \n[[Map]]. The type `Entry<Key,Item>` may be abbreviated \n`Key->Item`. An instance of `Entry` may be constructed \nusing the `->` operator:\n\n    String->Person entry = person.name->person;"],"by":["Gavin"]},"$m":{"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"doc":["Determines if this entry is equal to the given entry. \nTwo entries are equal if they have the same key and \nthe same value."],"actual":[]},"$nm":"equals"}},"$at":{"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"hash"},"pair":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Key"},{"comp":"u","$ts":[{"$nm":"Item"},{"$pk":".","$nm":"Nothing"}]}]},{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Item"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"Item"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Tuple"},"$mt":"g","$an":{"shared":[],"doc":["A pair (2 element tuple) with the key and\nitem of this entry."]},"$nm":"pair"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"doc":["Returns a description of the entry in the form \n`key->item`."],"actual":[]},"$nm":"string"},"item":{"$t":{"$nm":"Item"},"$mt":"a","$an":{"shared":[],"doc":["The value associated with the key."]},"$nm":"item"},"key":{"$t":{"$nm":"Key"},"$mt":"a","$an":{"shared":[],"doc":["The key used to access the entry."]},"$nm":"key"}},"$nm":"Entry"},"aInt":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$nm":"aInt"},"Invertable":{"of":[{"$nm":"Other"}],"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Summable"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Invertable"}],"$nm":"Other"}],"$an":{"shared":[],"see":["Integer","Float"],"doc":["Abstraction of [[additive|Summable]] numeric types which \nsupport a unary operation `-x` producing the additive\ninverse of `x`. Every `Invertable` type supports a binary \nsubtraction operation `x-y`.\n\n    Integer negativeOne = -1;\n    Float delta = x-y;\n\nA concrete class that implements this interface should be a \nmathematical _group_. That is, it should have an additive \nidentity, denoted `0`, and satisfy:\n\n- `0+x == x+0 == x`\n- `x + -x == 0`\n\nSubtraction must be defined so that it is consistent with\nthe additive inverse:\n\n- `x - y == x + -y`"],"by":["Gavin"]},"$m":{"minus":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The difference between this number and the given \nnumber. Must produce the value `x + -y`."]},"$nm":"minus"}},"$at":{"negated":{"$t":{"$nm":"Other"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The additive inverse of this value."]},"$nm":"negated"}},"$nm":"Invertable","$st":"Other"},"Ordinal":{"of":[{"$nm":"Other"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Ordinal"}],"variance":"out","$nm":"Other"}],"$an":{"shared":[],"see":["Character","Integer","Integral","Enumerable","Range"],"doc":["Abstraction of ordinal types, that is, types with \n[[successor]] and [[predecessor]] operations, including \n[[Integer]] and other [[Integral]] numeric types.\n[[Character]] is also considered an ordinal type.\n\nThe _increment_ operator `++` and _decrement_ operator `--`\nare defined for all `Ordinal` types.\n\n    function increment() {\n        count++;\n    }\n\nAn `Ordinal` type may be used to generate a [[Range]], \nusing the span or segment operators.\n\nThe _span_ operator `..` accepts the first and last values \nof the range.\n\n    0..5    \/\/ [0, 1, 2, 3, 4, 5]\n    0..0    \/\/ [0]\n\nIf the last value is smaller than the first value, the\nrange is reversed.\n\n    5..0    \/\/ [5, 4, 3, 2, 1, 0]\n    0..-5   \/\/ [0, -1, -2, -3, -4, -5]\n\nThe _segment_ operator `:` accepts the first index and \nmaximum length of the subrange.\n\n    0:5     \/\/ [0, 1, 2, 3, 4]\n\nIf the length is nonpositive, the subrange is empty.\n\n    0:0     \/\/ []\n    5:0     \/\/ []\n    0:-5    \/\/ []\n\nMost `Ordinal` types are also [[Enumerable]]."],"by":["Gavin"]},"$at":{"predecessor":{"$t":{"$nm":"Other"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The predecessor of this value."]},"$nm":"predecessor"},"successor":{"$t":{"$nm":"Other"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The successor of this value."]},"$nm":"successor"}},"$nm":"Ordinal","$st":"Other"},"or":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"T"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"T"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"p"},{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"T"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"T"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"q"}],[{"$t":{"$nm":"T"},"$mt":"prm","$nm":"t"}]],"$mt":"m","$tp":[{"$nm":"T"}],"$an":{"shared":[],"doc":["Returns a function which is the logical \ndisjunction of the given predicate functions."]},"$nm":"or"},"largest":{"$t":{"$nm":"Element"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"y"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Comparable"}],"$nm":"Element"}],"$an":{"shared":[],"see":["Comparable","smallest","max"],"doc":["Given two `Comparable` values, return largest of the\ntwo."]},"$nm":"largest"},"not":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"T"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"T"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$an":{"doc":["The predicate function to negate"]},"$nm":"p"}],[{"$t":{"$nm":"T"},"$mt":"prm","$nm":"t"}]],"$mt":"m","$tp":[{"$nm":"T"}],"$an":{"shared":[],"doc":["Returns a function which is the logical \nnegation of the given predicate function."]},"$nm":"not"},"zipPairs":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"First"},{"comp":"u","$ts":[{"$nm":"Second"},{"$pk":".","$nm":"Nothing"}]}]},{"$mt":"tp","$nm":"First"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Second"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"Second"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Tuple"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"First"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"firstElements"},{"$t":{"$tp":[{"$mt":"tp","$nm":"Second"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"secondElements"}]],"$mt":"m","$tp":[{"$nm":"First"},{"$nm":"Second"}],"$an":{"shared":[],"doc":["Given two streams, form a new stream consisting of\nall pairs where, for any given index in the resulting\nstream, the first element of the pair is the element \noccurring at the same index in the first stream, and \nthe second element of the pair is the element occurring \nat the same index in the second stream. The length of \nthe resulting stream is the length of the shorter of the \ntwo given streams.\n\nThus:\n\n    zipPairs(xs,ys)[i]==[xs[i],ys[i]]\n\nfor every `0<=i<min({xs.size,ys.size})`."]},"$nm":"zipPairs"},"system":{"super":{"$pk":".","$nm":"Basic"},"$mt":"o","$an":{"shared":[],"native":[],"doc":["Represents the system on which the current process is running.\n\nHolds information about system time and locale."]},"$at":{"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"},"locale":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Returns the IETF language tag representing the default locale for this system."]},"$nm":"locale"},"nanoseconds":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The elapsed time in nanoseconds since an arbitrary starting point."]},"$nm":"nanoseconds"},"timezoneOffset":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Returns the offset from UTC, in milliseconds, of the default timezone for this system."]},"$nm":"timezoneOffset"},"milliseconds":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The elapsed time in milliseconds since midnight, 1 January 1970."]},"$nm":"milliseconds"}},"$nm":"system"},"unflatten":{"$t":{"$nm":"Return"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Return"},{"$mt":"tp","$nm":"Args"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"flatFunction"}],[{"$t":{"$nm":"Args"},"$mt":"prm","$nm":"args"}]],"$mt":"m","$tp":[{"$nm":"Return"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"Sequential"}],"$nm":"Args"}],"$an":{"shared":[],"native":[],"see":["flatten"],"doc":["Given a function with parameter types \n`P1`, `P2`, ..., `Pn`, return a function with a single\nparameter of tuple type `[P1, P2, ..., Pn]`.\n\nThat is, if `fun` has type `W(X,Y,Z)` then `unflatten(fun)` \nhas type `W([X,Y,Z])`."]},"$nm":"unflatten"},"native":{"$t":{"$pk":".","$nm":"NativeAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to mark a member whose implementation is defined \nin platform-native code."]},"$annot":1,"$nm":"native"},"formatInteger":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"integer"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$def":1,"$nm":"radix"}]],"$mt":"m","$an":{"shared":[],"throws":["AssertionError","if `radix` is not between `minRadix` and `maxRadix`"],"doc":["The string representation of `integer` in the `radix` base.\n`radix` must be between `minRadix` and `maxRadix` included.\n\nIf `integer` is negative, returned string will start by character `-`"]},"$nm":"formatInteger"},"Destroyable":{"$mt":"i","$an":{"shared":[],"doc":["Abstract supertype of classes which are instantiated \nas resources in a `try` statement and [[destroyed|destroy]]\nwhether or not an exception propagates out of the `try` block.\nUnlike [[Obtainable]] a single `Destroyable` instance cannot be \nreused between `try` statements: Its scope is the `try` block.\n"]},"$m":{"destroy":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Throwable"}]},"$mt":"prm","$an":{"doc":["The error propagating out of the `try` block, or null"]},"$nm":"error"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Called after completion of a `try` block."]},"$nm":"destroy"}},"$nm":"Destroyable"},"greaterThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"val"}],[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Comparable"}],"$nm":"Element"}],"$an":{"shared":[],"deprecated":["use [[Comparable.smallerThan]]"],"doc":["Returns a partial function that will compare an element\nto any other element and returns true if the compared\nelement is greater than its element.\nThis is useful in conjunction with methods that receive\na predicate function."]},"$nm":"greaterThan"},"Identifiable":{"$mt":"i","$an":{"shared":[],"doc":["The abstract supertype of all types with a well-defined\nnotion of identity. Values of type `Identifiable` may be \ncompared using the `===` operator to determine if they are \nreferences to the same object instance.\n\nFor the sake of convenience, this interface defines a \ndefault implementation of value equality equivalent to \nidentity. Of course, subtypes are encouraged to refine this \nimplementation."],"by":["Gavin"]},"$m":{"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Identity equality comparing the identity of the two \nvalues. May be refined by subtypes for which value \nequality is more appropriate. Implementations must\nrespect the constraint that if `x===y` then `x==y` \n(equality is consistent with identity)."],"actual":[]},"$nm":"equals"}},"$at":{"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"default":[],"see":["identityHash"],"doc":["The system-defined identity hash value of the instance. \nSubtypes which refine `equals()` must also refine \n`hash`, according to the general contract defined by \n[[Object]]."],"actual":[]},"$nm":"hash"}},"$nm":"Identifiable"},"language":{"super":{"$pk":".","$nm":"Basic"},"$mt":"o","$an":{"shared":[],"native":[],"doc":["Contains information about the language"]},"$at":{"majorVersion":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The Ceylon language major version."]},"$nm":"majorVersion"},"majorVersionBinary":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The major version of the code generated for the underlying runtime."]},"$nm":"majorVersionBinary"},"minorVersion":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The Ceylon language minor version."]},"$nm":"minorVersion"},"versionName":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The Ceylon language release name."]},"$nm":"versionName"},"releaseVersion":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The Ceylon language release version."]},"$nm":"releaseVersion"},"minorVersionBinary":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The minor version of the code generated for the underlying runtime."]},"$nm":"minorVersionBinary"},"version":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The Ceylon language version."]},"$nm":"version"}},"$nm":"language"},"Throwable":{"abstract":1,"super":{"$pk":".","$nm":"Basic"},"of":[{"$pk":".","$nm":"Exception"},{"$pk":".","$nm":"Error"}],"$ps":[{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"String"}]},"$hdn":1,"$mt":"prm","$def":1,"$an":{"doc":["A description of the problem."]},"$nm":"description"},{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Throwable"}]},"$hdn":1,"$mt":"prm","$def":1,"$an":{"shared":[],"doc":["The underlying cause of this exception."]},"$nm":"cause"}],"$mt":"c","$an":{"abstract":[],"shared":[],"native":[],"doc":["The supertype of instances that can be thrown using the `throw` statement\nand caught using the `catch` clause of the `try` statement. \nSuch instances are used to represent \nproblems, typically _unexpected failures_, with the running program \nand can be classified as either\n[[errors|Error]] which are non-transient and generally unrecoverable \nor [[exceptions|Exception]] which are transient problems which \nmay be recovered from.\n\nThe use of throwables to indicate _expected failures_, that \nis, failures that are usually handled by the immediate \ncaller of an operation, is discouraged. (For example,\nnonexistence of a file should not result in an exception.) \nInstead, the failure should be respresented as a return \nvalue of the operation being called."],"by":["Gavin","Tom"]},"$m":{"addSuppressed":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$pk":".","$nm":"Throwable"},"$mt":"prm","$nm":"suppressed"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["The given exception was suppressed in order to \npropagate this exception."]},"$nm":"addSuppressed"},"printStackTrace":{"$t":{"$pk":".","$nm":"Anything"},"$mt":"m","$an":{"shared":[],"see":["printTrace"],"doc":["Print the stack trace to the standard error of the \nvirtual machine process."]},"$nm":"printStackTrace"}},"$at":{"message":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"default":[],"see":["cause"],"doc":["A message describing the problem. This default \nimplementation returns the description, if any, or \notherwise the message of the cause, if any."]},"$nm":"message"},"suppressed":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Throwable"}],"$pk":".","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The exceptions that were suppressed in order to \npropagate this exception."]},"$nm":"suppressed"},"cause":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Throwable"}]},"$mt":"a","$an":{"shared":[],"doc":["The underlying cause of this exception."]},"$nm":"cause"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"default":[],"actual":[]},"$nm":"string"},"description$ujuv":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"String"}]},"$mt":"a","$an":{"doc":["A description of the problem."]},"$nm":"description"}},"$nm":"Throwable"},"emptySet":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Set"}],"$mt":"o","$an":{"shared":[],"doc":["An immutable [[Set]] with no elements."]},"$m":{"intersection":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Set"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Other"}],"$an":{"shared":[],"actual":[]},"$nm":"intersection"},"clone":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Set"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"clone"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator"},"containsAny":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"containsAny"},"superset":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"superset"},"count":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"count"},"select":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"select"},"by":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"step"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"by"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"contains"},"every":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"every"},"fold":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"initial"},{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"partial"},{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"accumulating"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"fold"},"taking":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"take"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"taking"},"complement":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Set"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Other"}],"$an":{"shared":[],"actual":[]},"$nm":"complement"},"subset":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"subset"},"exclusiveUnion":{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Set"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Other"}],"$an":{"shared":[],"actual":[]},"$nm":"exclusiveUnion"},"any":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"any"},"union":{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Set"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Other"}],"$an":{"shared":[],"actual":[]},"$nm":"union"},"map":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Set"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"map"},"skipping":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"skip"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"skipping"},"find":{"$t":{"$pk":".","$nm":"Null"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"find"},"filter":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Set"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"filter"},"collect":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"collect"},"containsEvery":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"containsEvery"}},"$at":{"empty":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"empty"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"size"}},"$nm":"emptySet"},"Null":{"abstract":1,"super":{"$pk":".","$nm":"Anything"},"of":[{"$pk":".","$nm":"null"}],"$mt":"c","$an":{"abstract":[],"shared":[],"see":["null"],"doc":["The type of the [[null]] value. Any union type of form \n`Null|T` is considered an _optional_ type, whose values\ninclude `null`. Any type of this form may be written as\n`T?` for convenience.\n\nThe `if (exists ... )` construct, or, alternatively,\n`assert (exists ...)`, may be used to narrow an optional \ntype to a _definite_ type, that is, a subtype of \n[[Object]]:\n\n    String? firstArg = process.arguments.first;\n    if (exists firstArg) {\n        print(\"hello \" + firstArg);\n    }\n\nThe `else` operator evaluates its second operand if and \nonly if its first operand is `null`:\n\n    String name = process.arguments.first else \"world\";\n\nThe `then` operator evaluates its second operand when\nits first operand evaluates to `true`, and to `null` \notherwise:\n\n    Float? diff = x>=y then x-y;"],"by":["Gavin"]},"$nm":"Null"},"stringify":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Anything"},"$mt":"prm","$nm":"val"}]],"$mt":"m","$nm":"stringify"},"sort":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Comparable"}],"$nm":"Element"}],"$an":{"shared":[],"see":["Comparable"],"doc":["Sort the given elements, returning a new sequence."]},"$nm":"sort"},"equalTo":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"val"}],[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Element"}],"$an":{"shared":[],"doc":["Returns a partial function that will compare an element\nto any other element and returns true if they're equal.\nThis is useful in conjunction with methods that receive\na predicate function."]},"$nm":"equalTo"},"Ranged":{"of":[{"$nm":"Span"}],"$mt":"i","$tp":[{"variance":"in","$nm":"Index"},{"variance":"out","$nm":"Span"}],"$an":{"shared":[],"see":["List","Sequence","String"],"doc":["Abstract supertype of ranged objects which map a range of \n[[Comparable]] keys to ranges of values. The type parameter \n[[Span]] abstracts the type of the resulting range. A \nsubrange may be obtained from an instance of `Ranged` using\nthe _span_ and _segment_ operators.\n\nThe _span_ operator accepts the first and last indices of \nthe subrange.\n\n    print(\"hello world\"[0..5]); \/\/prints \"hello\"\n    print(\"hello world\"[6..6]); \/\/prints \"w\"\n\nIf the last index is smaller than the first index, the\nsubrange is reversed.\n\n    print(\"hello world\"[5..0]); \/\/prints \"olleh\"\n\nIf the range of indices identified by the first and last\nindices is outside the range of indices of this object, an\nempty subrange is produced.\n\n    print(\"hello world\"[-5..-1]); \/\/prints \"\"\n    print(\"hello world\"[11..11]); \/\/prints \"\"\n\nThe first index may be ommitted, implying that the subrange\nextends forward from the smallest possible index (in this\ncase `runtime.minIntegerValue-1`) to the given index.\n\n    print(\"hello world\"[...5]) \/\/prints \"hello\"\n\nIf the first index is before the first index of this object, \nan empty subrange is produced. (A reversed subrange is \nnever produced.)\n\n    print(\"hello world\"[-5...]); \/\/prints \"\"\n\nThe last index may be ommitted, implying that the subrange \nextends forward from the given index to the largest \npossible index (in this case `runtime.maxIntegerValue+1`).\n\n    print(\"hello world\"[6...]) \/\/prints \"world\"\n\nIf the last index is after the last index of this object, \nan empty subrange is produced. (A reversed subrange is \nnever produced.)\n\n    print(\"hello world\"[11...]); \/\/prints \"\"\n\nThe _segment_ operator accepts the first index and maximum \nlength of the subrange.\n\n    print(\"hello world\"[6:5]) \/\/prints \"world\"\n    print(\"hello world\"[6:0]) \/\/prints \"\"\n\nIf the length is nonpositive, the subrange is empty. If the\nrange of indices identified by the first index and length\nis outside the range of indices of this object, an empty\nsubrange is produced. (A reversed subrange is never \nproduced.)\n\n    print(\"hello world\"[-3:3]) \/\/prints \"\"\n    print(\"hello world\"[11:3]) \/\/prints \"\"\n    print(\"hello world\"[6:-3]) \/\/prints \"\""]},"$m":{"spanTo":{"$t":{"$nm":"Span"},"$ps":[[{"$t":{"$nm":"Index"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Obtain a span containing the mapped values between\nthe start of the receiver and the end index."]},"$nm":"spanTo"},"segment":{"$t":{"$nm":"Span"},"$ps":[[{"$t":{"$nm":"Index"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Obtain a segment containing the mapped values\nstarting from the given index, with the given \nlength."]},"$nm":"segment"},"spanFrom":{"$t":{"$nm":"Span"},"$ps":[[{"$t":{"$nm":"Index"},"$mt":"prm","$nm":"from"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Obtain a span containing the mapped values between\nthe starting index and the end of the receiver."]},"$nm":"spanFrom"},"span":{"$t":{"$nm":"Span"},"$ps":[[{"$t":{"$nm":"Index"},"$mt":"prm","$nm":"from"},{"$t":{"$nm":"Index"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Obtain a span containing the mapped values between \nthe two given indices."]},"$nm":"span"}},"$nm":"Ranged","$st":"Span"},"arrayOfSize":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Array"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$an":{"doc":["The size of the resulting array. If the size is \nnon-positive, an empty array will be created."]},"$nm":"size"},{"$t":{"$nm":"Element"},"$mt":"prm","$an":{"doc":["The element value with which to populate the array.\nAll elements of the resulting array will have the \nsame value."]},"$nm":"element"}]],"$mt":"m","$tp":[{"$nm":"Element"}],"$an":{"shared":[],"native":[],"throws":["AssertionError","if `size<0` or `size>runtime.maxArraySize`"],"doc":["Create an array of the specified [[size]], populating every \nindex with the given [[element]]. The specified `size` must\nbe in the range `0..runtime.maxArraySize`."]},"$nm":"arrayOfSize"},"OptionalImportAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"OptionalImportAnnotation"},{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"Import"}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[optional]]."]},"$annot":1,"$nm":"OptionalImportAnnotation"},"times":{"$t":{"$nm":"Value"},"$ps":[[{"$t":{"$nm":"Value"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Value"},"$mt":"prm","$nm":"y"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"}],"$pk":".","$nm":"Numeric"}],"$nm":"Value"}],"$an":{"shared":[],"see":["plus","product"],"doc":["Multiply the given `Numeric` values."]},"$nm":"times"},"entries":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"comp":"i","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Object"}]}],"$pk":".","$nm":"Entry"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$tp":[{"$nm":"Element"}],"$an":{"shared":[],"see":["Iterable.indexed"],"doc":["Given a stream of items, produce a stream of entries. \nFor each non-null item produced by the given stream \nof items, the resulting stream contains an `Entry` \nof form `key->item` where `key` is the index at which\nthe item occurs in the stream of items."]},"$nm":"entries"},"license":{"$t":{"$pk":".","$nm":"LicenseAnnotation"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$an":{"doc":["The name, text, or URL of the license."]},"$nm":"description"}]],"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to specify the URL of the license of a module or \npackage."]},"$annot":1,"$nm":"license"},"FormalAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"FormalAnnotation"},{"comp":"u","$mt":"tp","$ts":[{"$pk":"ceylon.language.meta.declaration","$nm":"FunctionOrValueDeclaration"},{"$pk":"ceylon.language.meta.declaration","$nm":"ClassOrInterfaceDeclaration"}]}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[formal]]."]},"$annot":1,"$nm":"FormalAnnotation"},"Object":{"abstract":1,"super":{"$pk":".","$nm":"Anything"},"$mt":"c","$an":{"abstract":[],"shared":[],"see":["Basic","Null"],"doc":["The abstract supertype of all types representing definite \nvalues. Any two `Object`s may be compared for value \nequality using the `==` and `!=` operators:\n\n    true==false\n    1==\"hello world\"\n    \"hello\"+\" \"+\"world\"==\"hello world\"\n    Singleton(\"hello world\")=={ \"hello world\" }\n\nHowever, since `Null` is not a subtype of `Object`, the\nvalue `null` cannot be compared to any other value using \nthe `==` operator. Thus, value equality is not defined \nfor optional types. This neatly voids the problem of\ndeciding the value of the expression `null==null`, which \nis simply illegal."],"by":["Gavin"]},"$m":{"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Determine if two values are equal. Implementations\nshould respect the constraints that:\n\n- if `x===y` then `x==y` (reflexivity), \n- if `x==y` then `y==x` (symmetry), \n- if `x==y` and `y==z` then `x==z` (transitivity).\n\nFurthermore it is recommended that implementations\nensure that if `x==y` then `x` and `y` have the same \nconcrete class."]},"$nm":"equals"}},"$at":{"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"formal":[],"doc":["The hash value of the value, which allows the value to \nbe an element of a hash-based set or key of a\nhash-based map. Implementations must respect the\nconstraint that if `x==y` then `x.hash==y.hash`."]},"$nm":"hash"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["A developer-friendly string representing the instance. \nConcatenates the name of the concrete class of the \ninstance with the `hash` of the instance. Subclasses \nare encouraged to refine this implementation to produce \na more meaningful representation."]},"$nm":"string"}},"$nm":"Object"},"null":{"super":{"$pk":".","$nm":"Null"},"$mt":"o","$an":{"shared":[],"doc":["The null value."],"by":["Gavin"]},"$nm":"null"},"LicenseAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"LicenseAnnotation"},{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"Module"}],"$pk":".","$nm":"OptionalAnnotation"}],"$ps":[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$an":{"shared":[],"doc":["The name, text, or URL of the license."]},"$nm":"description"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[license]]."]},"$annot":1,"$at":{"description":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"doc":["The name, text, or URL of the license."]},"$nm":"description"}},"$nm":"LicenseAnnotation"},"min":{"$t":{"comp":"u","$ts":[{"$nm":"Absent"},{"$nm":"Value"}]},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"values"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"}],"$pk":".","$nm":"Comparable"}],"$nm":"Value"},{"$sts":[{"$pk":".","$nm":"Null"}],"$nm":"Absent"}],"$an":{"shared":[],"see":["Comparable","max","smallest"],"doc":["Given a nonempty stream of `Comparable` values, \nreturn the smallest value in the stream."]},"$nm":"min"},"Float":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Float"}],"$pk":".","$nm":"Scalar"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Float"},{"$mt":"tp","$pk":".","$nm":"Float"}],"$pk":".","$nm":"Exponentiable"}],"$ps":[{"$t":{"$pk":".","$nm":"Float"},"$hdn":1,"$mt":"prm","$an":{"shared":[],"actual":[]},"$nm":"float"}],"$mt":"c","$an":{"shared":[],"final":[],"native":[],"doc":["An IEEE 754 64-bit [floating point number][]. A `Float` is \ncapable of approximately representing numeric values \nbetween:\n\n- 2<sup>-1022<\/sup>, approximately \n  1.79769×10<sup>308<\/sup>, and \n- (2-2<sup>-52<\/sup>)×2<sup>1023<\/sup>, \n  approximately 5×10<sup>-324<\/sup>.\n\nZero is represented by distinct instances `+0`, `-0`, but \nthese instances are equal. \n\nIn addition, the following special values exist:\n\n- [[infinity]] and `-infinity`, and \n- undefined values (Not a Number).\n\nAn undefined value is not equal to any other value, not \neven to itself.\n\n[floating point number]: http:\/\/www.validlab.com\/goldberg\/paper.pdf"]},"$m":{"plus":{"$t":{"$pk":".","$nm":"Float"},"$ps":[[{"$t":{"$pk":".","$nm":"Float"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"plus"},"plusInteger":{"$t":{"$pk":".","$nm":"Float"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"integer"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"plusInteger"},"minus":{"$t":{"$pk":".","$nm":"Float"},"$ps":[[{"$t":{"$pk":".","$nm":"Float"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"minus"},"times":{"$t":{"$pk":".","$nm":"Float"},"$ps":[[{"$t":{"$pk":".","$nm":"Float"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"times"},"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"equals"},"compare":{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$pk":".","$nm":"Float"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"compare"},"timesInteger":{"$t":{"$pk":".","$nm":"Float"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"integer"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"timesInteger"},"power":{"$t":{"$pk":".","$nm":"Float"},"$ps":[[{"$t":{"$pk":".","$nm":"Float"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"power"},"divided":{"$t":{"$pk":".","$nm":"Float"},"$ps":[[{"$t":{"$pk":".","$nm":"Float"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"divided"}},"$at":{"integer":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"integer"},"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"hash"},"magnitude":{"$t":{"$pk":".","$nm":"Float"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"magnitude"},"strictlyPositive":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determines if this value is a positive number, `+0`, \nor `infinity`. Produces `false` for a negative \nnumber, `-0`, or undefined."]},"$nm":"strictlyPositive"},"float":{"$t":{"$pk":".","$nm":"Float"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"float"},"fractionalPart":{"$t":{"$pk":".","$nm":"Float"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"fractionalPart"},"finite":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"see":["infinite","infinity"],"doc":["Determines whether this value is finite. Produces\n`false` for `infinity`, `-infinity`, and undefined."]},"$nm":"finite"},"sign":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The sign of this value. Produces `1` for a positive \nnumber or `infinity`. Produces `-1` for a negative\nnumber or `-infinity`. Produces `0` for `+0`, `-0`, \nor undefined."],"actual":[]},"$nm":"sign"},"strictlyNegative":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determines if this value is a negative number, `-0`, \nor `-infinity`. Produces `false` for a positive \nnumber, `+0`, or undefined."]},"$nm":"strictlyNegative"},"infinite":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"see":["infinity","finite"],"doc":["Determines whether this value is infinite in \nmagnitude. Produces `true` for `infinity` and \n`-infinity`. Produces `false` for a finite number, \n`+0`, `-0`, or undefined."]},"$nm":"infinite"},"undefined":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"doc":["Determines whether this value is undefined (that is, \nNot a Number or NaN). The undefined value has the \nproperty that it is not equal (`==`) to itself, as \na consequence the undefined value cannot sensibly \nbe used in most collections."]},"$nm":"undefined"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"string"},"wholePart":{"$t":{"$pk":".","$nm":"Float"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"wholePart"},"negative":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determines if this value is a negative number or\n`-infinity`. Produces `false` for a positive number, \n`+0`, `-0`, or undefined."],"actual":[]},"$nm":"negative"},"positive":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determines if this value is a positive number or\n`infinity`. Produces `false` for a negative number, \n`+0`, `-0`, or undefined."],"actual":[]},"$nm":"positive"},"negated":{"$t":{"$pk":".","$nm":"Float"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"negated"}},"$nm":"Float"},"deprecated":{"$t":{"$pk":".","$nm":"DeprecationAnnotation"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$def":1,"$an":{"doc":["A description, in Markdown syntax, of why the element \nis deprecated, and what alternatives are available."]},"$nm":"reason"}]],"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to mark program elements which should not be \nused anymore."]},"$annot":1,"$nm":"deprecated"},"Collection":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"}],"$mt":"i","$tp":[{"variance":"out","$nm":"Element"}],"$an":{"shared":[],"see":["List","Map","Set"],"doc":["Represents an iterable collection of elements of finite \nsize. `Collection` is the abstract supertype of [[List]],\n[[Map]], and [[Set]].\n\nA `Collection` forms a [[Category]] of its elements, and \nis [[Iterable]]. The elements of a collection are not\nnecessarily distinct when compared using [[Object.equals]].\n\nA `Collection` may be [[cloned|clone]]. If a collection is\nimmutable, it is acceptable that `clone()` produce a\nreference to the collection itself. If a collection is\nmutable, `clone()` should produce a collection containing \nreferences to the same elements, with the same structure as \nthe original collection&mdash;that is, it should produce a \nshallow copy of the collection."]},"$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Collection"},"$mt":"m","$an":{"shared":[],"formal":[],"doc":["A shallow copy of this collection, that is, a \ncollection with identical elements which does not\nchange if this collection changes. If this collection\nis immutable, it is acceptable to return a reference to\nthis collection. If this collection is mutable, a newly\ninstantiated collection must be returned."]},"$nm":"clone"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Return `true` if the given object is an element of\nthis collection. In this default implementation, and in \nmost refining implementations, return `false` \notherwise. An acceptable refining implementation may \nreturn `true` for objects which are not elements of the \ncollection, but this is not recommended. (For example, \nthe `contains()` method of `String` returns `true` for \nany substring of the string.)"],"actual":[]},"$nm":"contains"}},"$at":{"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["A string of form `\"{ x, y, z }\"` where `x`, `y`, and \n`z` are the `string` representations of the elements of \nthis collection, as produced by the iterator of the \ncollection, or the string `\"{}\"` if this collection \nis empty. If the collection iterator produces the value \n`null`, the string representation contains the string \n`\"<null>\"`."],"actual":[]},"$nm":"string"},"empty":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["Determine if the collection is empty, that is, if it \nhas no elements."],"actual":[]},"$nm":"empty"}},"$nm":"Collection"},"Range":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"}],"$ps":[{"$t":{"$nm":"Element"},"$hdn":1,"$mt":"prm","$an":{"shared":[],"doc":["The start of the range."],"actual":[]},"$nm":"first"},{"$t":{"$nm":"Element"},"$hdn":1,"$mt":"prm","$an":{"shared":[],"doc":["The end of the range."],"actual":[]},"$nm":"last"}],"$mt":"c","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Ordinal"},{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Comparable"}],"$nm":"Element"}],"$an":{"shared":[],"final":[],"see":["Ordinal"],"doc":["A range of totally ordered, ordinal values generated by two \nendpoints which are both [[Ordinal]] and [[Comparable]]: \n[[first]] and [[last]].\n\n- If `first<last` the range is increasing,\n- if `first>last`, the range is decreasing, or\n- otherwise, if `first==last`, the range contains exactly\n  one value.\n\nA range is always nonempty, containing at least one value.\n\nA range is a [[Sequence]].\n\nThe _span_ operator `..` is an abbreviation for `Range`\ninstantiation.\n\n    for (i in min..max) { ... }\n    if (char in 'A'..'Z') { ... }\n\nSee [[the documentation for `Ordinal`|Ordinal]] for more\ninformation about the span and segment operators."],"by":["Gavin"]},"$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},"$mt":"m","$an":{"shared":[],"doc":["Returns the range itself, since ranges are \nimmutable."],"actual":[]},"$nm":"clone"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"doc":["An iterator for the elements of the range."],"actual":[]},"$nm":"iterator","$o":{"iterator$eyu6v7":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"current$yist5d":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"var":1,"$mt":"a","$an":{"shared":[],"actual":[],"variable":[]},"$nm":"current"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"iterator"}}},"get":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"n"}]],"$mt":"m","$an":{"shared":[],"doc":["The element of the range that occurs `n` values after\nthe start of the range. Note that this operation \nis inefficient for large ranges."],"actual":[]},"$nm":"get"},"count":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$m":{"selecting$9bg0dh":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$nm":"selecting"}},"$nm":"count"},"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"doc":["Determines if two ranges are the same by comparing\ntheir endpoints."],"actual":[]},"$nm":"equals"},"segment":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},{"$pk":".","$nm":"Empty"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"segment"},"includesRange":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},"$mt":"prm","$nm":"sublist"}]],"$mt":"m","$an":{"shared":[],"doc":["Determines if this range includes the given range."]},"$nm":"includesRange"},"by":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"step"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"by"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"doc":["Determines if this range includes the given object."],"actual":[]},"$nm":"contains"},"includes":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"List"},"$mt":"prm","$nm":"sublist"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"includes"},"taking":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},{"$pk":".","$nm":"Empty"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"take"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"taking"},"occurs":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Anything"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"doc":["Determines if this range includes the given value."],"actual":[]},"$nm":"occurs"},"shifted":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"shift"}]],"$mt":"m","$an":{"shared":[],"doc":["Returns a range of the same length and type as this\nrange, with its endpoints shifted by the given number \nof elements, where:\n\n- a negative [[shift]] measures \n  [[decrements|Ordinal.predecessor]], and \n- a positive `shift` measures \n  [[increments|Ordinal.successor]]."]},"$nm":"shifted"},"spanTo":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},{"$pk":".","$nm":"Empty"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"spanTo"},"next$2wbm2z":{"$t":{"$nm":"Element"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"x"}]],"$mt":"m","$nm":"next"},"containsElement":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"x"}]],"$mt":"m","$an":{"shared":[],"doc":["Determines if the range includes the given value."]},"$nm":"containsElement"},"spanFrom":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},{"$pk":".","$nm":"Empty"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"spanFrom"},"skipping":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},{"$pk":".","$nm":"Empty"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"skip"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"skipping"},"span":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},{"$pk":".","$nm":"Empty"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"span"}},"$at":{"lastIndex":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"doc":["The index of the end of the range."],"actual":[]},"$nm":"lastIndex"},"decreasing":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"doc":["Determines if the range is decreasing."]},"$nm":"decreasing"},"last":{"$t":{"$nm":"Element"},"$mt":"a","$an":{"shared":[],"doc":["The end of the range."],"actual":[]},"$nm":"last"},"sequence":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},"$mt":"g","$an":{"shared":[],"doc":["Returns this range."],"actual":[]},"$nm":"sequence"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"string"},"coalesced":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},"$mt":"g","$an":{"shared":[],"doc":["Returns the range itself, since a Range cannot\ncontain nulls."],"actual":[]},"$nm":"coalesced"},"reversed":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Range"},"$mt":"g","$an":{"shared":[],"doc":["Reverse this range, returning a new range."],"actual":[]},"$nm":"reversed"},"rest":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$mt":"g","$an":{"shared":[],"doc":["The rest of the range, without the start of the\nrange."],"actual":[]},"$nm":"rest"},"first":{"$t":{"$nm":"Element"},"$mt":"a","$an":{"shared":[],"doc":["The start of the range."],"actual":[]},"$nm":"first"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"doc":["The nonzero number of elements in the range."],"actual":[]},"$nm":"size"}},"$nm":"Range"},"max":{"$t":{"comp":"u","$ts":[{"$nm":"Absent"},{"$nm":"Value"}]},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"values"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"}],"$pk":".","$nm":"Comparable"}],"$nm":"Value"},{"$sts":[{"$pk":".","$nm":"Null"}],"$nm":"Absent"}],"$an":{"shared":[],"see":["Comparable","min","largest"],"doc":["Given a nonempty stream of `Comparable` values, \nreturn the largest value in the stream."]},"$nm":"max"},"Integral":{"of":[{"$nm":"Other"}],"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Scalar"},{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Enumerable"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Integral"}],"$nm":"Other"}],"$an":{"shared":[],"see":["Integer"],"doc":["Abstraction of integral numeric types. That is, types \nwith no fractional part, including [[Integer]].\n\nThe division operation for integral numeric types results \nin a remainder. Therefore, integral numeric types have \n[[an operation|remainder]], denoted by the _remainder_\noperator `%`, to determine the remainder of any division \noperation.\n\n    if (n%2==0) {\n        print(\"Even!\");\n    }\n\nDivision and the remainder operation should satisfy: \n\n- `x == (x\/y)*y + x%y`\n\nfor any instance `y` other than `0`.\n\n`Integral` numeric types are also [[Ordinal]], so ranges \nof integral values may be produced using the \n[[segment and span operators|Ordinal]].\n    \n    \/\/ Iterate from 0 to 100 inclusive\n    for (i in 0..100) {\n        print(\"The square of ``i`` is ``i^2``\");\n    }\n    \n    \/\/ Iterate all indices of the array, \n    \/\/ from 0 to array.size-1\n    for (i in 0:array.size) {\n        print(array[i]);\n    }"],"by":["Gavin"]},"$m":{"remainder":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"formal":[],"see":["Numeric.divided"],"doc":["The remainder, after dividing this number by the given \nnumber."]},"$nm":"remainder"},"divides":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"doc":["Determine if this number is a factor of the given \nnumber."]},"$nm":"divides"}},"$at":{"unit":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["Determine if the number is one."]},"$nm":"unit"},"zero":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["Determine if the number is zero."]},"$nm":"zero"}},"$nm":"Integral","$st":"Other"},"SequenceAppender":{"super":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"SequenceBuilder"},"$ps":[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}],"$mt":"c","$tp":[{"$nm":"Element"}],"$an":{"shared":[],"native":[],"see":["SequenceBuilder"],"doc":["Builder utility for constructing nonempty \n[[sequences|Sequential]] by incrementally appending \nelements. A newly-instantiated `SequenceAppender` produces\na nonempty sequence containing the given initial \n[[elements]]."]},"$m":{"append":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"SequenceAppender"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"append"},"appendAll":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"SequenceAppender"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"appendAll"}},"$at":{"sequence":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The resulting nonempty sequence. If no elements have \nbeen appended, a nonempty sequence containing the given \ninitial [[elements]]."],"actual":[]},"$nm":"sequence"},"elements$wvmpe":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"},"$mt":"a","$nm":"elements"}},"$nm":"SequenceAppender"},"smallest":{"$t":{"$nm":"Element"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"y"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Comparable"}],"$nm":"Element"}],"$an":{"shared":[],"see":["Comparable","largest","min"],"doc":["Given two `Comparable` values, return smallest of the\ntwo."]},"$nm":"smallest"},"NativeAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"NativeAnnotation"},{"$mt":"tp","$pk":".","$nm":"Annotated"}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[native]]."]},"$annot":1,"$nm":"NativeAnnotation"},"byIncreasing":{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$nm":"Value"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$nm":"comparable"}],[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"y"}]],"$mt":"m","$tp":[{"$nm":"Element"},{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"}],"$pk":".","$nm":"Comparable"}],"$nm":"Value"}],"$an":{"shared":[],"see":["byDecreasing"],"doc":["A comparator which orders elements in increasing order \naccording to the `Comparable` returned by the given \n`comparable()` function."]},"$nm":"byIncreasing"},"larger":{"super":{"$pk":".","$nm":"Comparison"},"$mt":"o","$an":{"shared":[],"doc":["The value is larger than the given value."]},"$nm":"larger"},"IntegerRangeBy":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"}],"$ps":[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"first"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"last"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"step"}],"$mt":"c","$m":{"iterator":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$yeyfho":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Integer"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"current$tetrdc":{"$t":{"$pk":".","$nm":"Integer"},"var":1,"$mt":"a","$an":{"variable":[]},"$nm":"current"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"iterator"}}}},"$at":{"first$kk22n3":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$nm":"first"},"last$kps9nt":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$nm":"last"},"step$fladk3":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$nm":"step"}},"$nm":"IntegerRangeBy"},"true":{"super":{"$pk":".","$nm":"Boolean"},"$mt":"o","$an":{"shared":[],"native":[],"doc":["A value representing truth in Boolean logic."]},"$at":{"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"true"},"Exponentiable":{"of":[{"$nm":"This"}],"$sts":[{"$tp":[{"$mt":"tp","$nm":"This"}],"$pk":".","$nm":"Numeric"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"This"},{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Exponentiable"}],"$nm":"This"},{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Numeric"}],"$nm":"Other"}],"$an":{"shared":[],"see":["Integer","Float"],"doc":["Abstraction of [[numeric types|Numeric]] that may be raised \nto a power using the _exponentiation_ operator ^.\n\n    function exp(Float x) => e^x;\n\nThe exponentiation operation should obey the usual index\nlaws, including:\n\n- `x^0 = 1`,\n- `x^1 = x`,\n- `x^(-1) = 1\/x` \n- `x^(m+n) = x^m * x^n`\n- `x^(m-n) = x^m \/ x^n`\n- `x^(m*n) = (x^m)^n`\n- `(x*y)^n = x^n * y^n`\n\nwhere `0` is the additive identity, and `1` is the \nmultiplicative identity.\n\nNote that in general, the type of the exponent may be \ndifferent to the numeric type which is exponentiated. For\nexample, a `Rational` number class might be a subtype of\n`Exponentiable<Rational,Integer>`, thus accepting only\nwhole-number exponents."]},"$m":{"power":{"$t":{"$nm":"This"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["The result of raising this number to the given power."]},"$nm":"power"}},"$nm":"Exponentiable","$st":"This"},"Keys":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"}],"$pk":".","$nm":"Category"}],"$ps":[{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Correspondence"},"$mt":"prm","$nm":"correspondence"}],"$mt":"c","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"variance":"in","$nm":"Key"},{"variance":"out","$nm":"Item"}],"$m":{"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"key"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"contains"}},"$at":{"correspondence$muvvk9":{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Correspondence"},"$mt":"a","$nm":"correspondence"}},"$nm":"Keys"},"Character":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Character"}],"$pk":".","$nm":"Comparable"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Character"}],"$pk":".","$nm":"Enumerable"}],"$ps":[{"$t":{"$pk":".","$nm":"Character"},"$mt":"prm","$nm":"character"}],"$mt":"c","$an":{"shared":[],"final":[],"native":[],"see":["String"],"doc":["A 32-bit [Unicode][] character. Every `Character` has a \nunique [[Integer]]-valued Unicode _code point_.\n\n    Integer piCodePoint = '\\{GREEK SMALL LETTER PI}'.integer; \/\/ #03C0\n    Character pi = #03C0.character; \/\/ GREEK SMALL LETTER PI\n\nCharacters are [[Ordinal]], so character ranges may be\nproduced using the [[segment and span operators|Ordinal]].\n\n    value lowerLatinLetters = 'a'..'z';\n    value upperLatinLetters = 'A':26;\n\nCharacters have a [[natural order|Comparable]] determined\nby their Unicode code points. So, for example, `'a'<'b'`,\nsince `'a'.integer<'b'.integer`.\n\n[Unicode]: http:\/\/www.unicode.org\/"],"by":["Gavin"]},"$m":{"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Determines if the given object is a character with the\nsame code point as this character."],"actual":[]},"$nm":"equals"},"compare":{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$pk":".","$nm":"Character"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Compare this character with the given string character, \naccording to the Unicode code points of the characters."],"actual":[]},"$nm":"compare"}},"$at":{"control":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determine if this character is an ISO control \ncharacter."]},"$nm":"control"},"successor":{"$t":{"$pk":".","$nm":"Character"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The character with the unicode code point that is one\nless than this character."],"actual":[]},"$nm":"successor"},"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The code point of the character."],"actual":[]},"$nm":"hash"},"integer":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The code point of the character."]},"$nm":"integer"},"lowercased":{"$t":{"$pk":".","$nm":"Character"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The lowercase representation of this character, in the\n[[system]] default locale."]},"$nm":"lowercased"},"letter":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determine if this character is a letter. That is, if \nits Unicode general category is *Lu*, *Ll*, *Lt*, *Lm*,\nor *Lo*."]},"$nm":"letter"},"uppercased":{"$t":{"$pk":".","$nm":"Character"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The uppercase representation of this character, in the\n[[system]] default locale."]},"$nm":"uppercased"},"whitespace":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determine if this character is a whitespace character. \nThe following characters are whitespace characters:\n\n- *LINE FEED*, `\\n` or `\\{#000A}`,\n- *FORM FEED*, `\\f` or `\\{#000C}`,\n- *CARRIAGE RETURN*, `\\r` or `\\{#000D}`,\n- *HORIZONTAL TABULATION*, `\\t` or `\\{#0009}`,\n- *VERTICAL TABULATION*, `\\{#000B}`,\n- *FILE SEPARATOR*, `\\{#001C}`,\n- *GROUP SEPARATOR*, `\\{#001D}`,\n- *RECORD SEPARATOR*, `\\{#001E}`,\n- *UNIT SEPARATOR*, `\\{#001F}`, and\n- any Unicode character in the general category *Zs*, \n  *Zl*, or *Zp* that is not a non-breaking space."]},"$nm":"whitespace"},"titlecased":{"$t":{"$pk":".","$nm":"Character"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The title case representation of this character."]},"$nm":"titlecased"},"predecessor":{"$t":{"$pk":".","$nm":"Character"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The character with the unicode code point that is one\ngreater than this character."],"actual":[]},"$nm":"predecessor"},"uppercase":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determine if this is an uppercase representation of the\ncharacter. That is, if its Unicode general category is \n*Lu*."]},"$nm":"uppercase"},"digit":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determine if this character is a numeric digit. That \nis, if its Unicode general category is *Nd*."]},"$nm":"digit"},"character$4cvjbx":{"$t":{"$pk":".","$nm":"Character"},"$mt":"a","$nm":"character"},"lowercase":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determine if this is a lowercase representation of the\ncharacter. That is, if its Unicode general category is \n*Ll*."]},"$nm":"lowercase"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["A string containing just this character."],"actual":[]},"$nm":"string"},"integerValue":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The code point of the character."],"actual":[]},"$nm":"integerValue"},"titlecase":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Determine if this is a title case representation of the\ncharacter. That is, if its Unicode general category is \n*Lt*."]},"$nm":"titlecase"}},"$nm":"Character"},"curry":{"$t":{"$tp":[{"$mt":"tp","$nm":"Return"},{"$mt":"tp","$nm":"Rest"}],"$pk":".","$nm":"Callable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Return"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Argument"},{"$mt":"tp","$nm":"First"},{"$mt":"tp","$nm":"Rest"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"f"}],[{"$t":{"$nm":"First"},"$mt":"prm","$nm":"first"}]],"$mt":"m","$tp":[{"$nm":"Return"},{"$nm":"Argument"},{"$sts":[{"$nm":"Argument"}],"$nm":"First"},{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Argument"}],"$pk":".","$nm":"Sequential"}],"$nm":"Rest"}],"$an":{"shared":[],"see":["uncurry","compose"],"doc":["Curries a function, returning a function with two \nparameter lists, given a function with at least\none parameter. The first parameter list of the \nreturned function has just the first parameter\nof the original function, and the second parameter\nlist has the remaining parameters.\n\nThat is, if `fun` has type `W(X,Y,Z)` then \n`curry(fun)` has type `W(Y,Z)(X)`."]},"$nm":"curry"},"forKey":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Key"},"$mt":"prm","$nm":"key"}]],"$mt":"prm","$pt":"f","$nm":"resulting"}],[{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$pk":".","$nm":"Object"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"entry"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Key"},{"$nm":"Result"}],"$an":{"shared":[],"see":["forItem"],"doc":["A function that returns the result of the given `resulting()` function \non the key of a given `Entry`."]},"$nm":"forKey"},"product":{"$t":{"$nm":"Value"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"values"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"}],"$pk":".","$nm":"Numeric"}],"$nm":"Value"}],"$an":{"shared":[],"see":["sum"],"doc":["Given a nonempty stream of [[Numeric]] values, return the \nproduct of the values."]},"$nm":"product"},"process":{"super":{"$pk":".","$nm":"Basic"},"$mt":"o","$an":{"shared":[],"native":[],"doc":["Represents the current process (instance of the virtual\nmachine)."],"by":["Gavin","Tako"]},"$m":{"flushError":{"$t":{"$pk":".","$nm":"Anything"},"$mt":"m","$an":{"shared":[],"native":[],"doc":["Flush the standard error of the \nvirtual machine process."]},"$nm":"flushError"},"flush":{"$t":{"$pk":".","$nm":"Anything"},"$mt":"m","$an":{"shared":[],"native":[],"doc":["Flush the standard output of the \nvirtual machine process."]},"$nm":"flush"},"readLine":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"String"}]},"$mt":"m","$an":{"shared":[],"native":[],"doc":["Read a line of input text from the standard input \nof the virtual machine process. Returns a line of\ntext after removal of line-termination characters,\nor `null` to indicate the EOT character."]},"$nm":"readLine"},"writeErrorLine":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$def":1,"$nm":"line"}]],"$mt":"m","$an":{"shared":[],"doc":["Print a line to the standard error of the \nvirtual machine process."]},"$nm":"writeErrorLine"},"writeError":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"string"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Print a string to the standard error of the \nvirtual machine process."]},"$nm":"writeError"},"propertyValue":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"String"}]},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["The value of the given system property of the virtual\nmachine, if any."]},"$nm":"propertyValue"},"namedArgumentValue":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"String"}]},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["The value of the first argument of form `-name=value`, \n`--name=value`, or `-name value` specified among the \ncommand line arguments to the virtual machine, if\nany."]},"$nm":"namedArgumentValue"},"write":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"string"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Print a string to the standard output of the \nvirtual machine process."]},"$nm":"write"},"namedArgumentPresent":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"name"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Determine if an argument of form `-name` or `--name` \nwas specified among the command line arguments to \nthe virtual machine."]},"$nm":"namedArgumentPresent"},"writeLine":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$def":1,"$nm":"line"}]],"$mt":"m","$an":{"shared":[],"see":["print"],"doc":["Print a line to the standard output of the \nvirtual machine process."]},"$nm":"writeLine"},"exit":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"code"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Force the virtual machine to terminate with \nthe given exit code."]},"$nm":"exit"}},"$at":{"arguments":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"}],"$pk":".","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The command line arguments to the virtual machine."]},"$nm":"arguments"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"process"},"forItem":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Item"},"$mt":"prm","$nm":"item"}]],"$mt":"prm","$pt":"f","$nm":"resulting"}],[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"},{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"entry"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Item"},{"$nm":"Result"}],"$an":{"shared":[],"see":["forKey"],"doc":["A function that returns the result of the given `resulting()` function \non the item of a given `Entry`."]},"$nm":"forItem"},"shuffle":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Result"},{"$mt":"tp","$nm":"FirstArgs"}],"$pk":".","$nm":"Callable"},{"$mt":"tp","$nm":"SecondArgs"}],"$pk":".","$nm":"Callable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Result"},{"$mt":"tp","$nm":"SecondArgs"}],"$pk":".","$nm":"Callable"},{"$mt":"tp","$nm":"FirstArgs"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"f"}]],"$mt":"m","$tp":[{"$nm":"Result"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"Sequential"}],"$nm":"FirstArgs"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"Sequential"}],"$nm":"SecondArgs"}],"$an":{"shared":[],"see":["curry"],"doc":["Given a function with two parameter lists, return\na function with the order of the argument lists \nreversed. The parameter lists may have any number\nof parameters.\n\nThat is, if `fun` has type `W(A,B)(X,Y,Z)` then \n`shuffle(fun)` has type `W(X,Y,Z)(A,B)`.\n\nThis function is often used in conjunction with\n`curry()`."]},"$nm":"shuffle"},"Annotation":{"of":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Annotation"},{"$mt":"tp","$pk":".","$nm":"Anything"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"ConstrainedAnnotation"}],"$mt":"i","$an":{"shared":[],"see":["OptionalAnnotation","SequencedAnnotation","annotations","optionalAnnotation","sequencedAnnotations"],"doc":["The supertype of all *annotation classes*. \n\n### Annotation classes\n\nAn *annotation class* must satisfy `Annotation`,\n[[OptionalAnnotation]],  or [[SequencedAnnotation]] and must be \nannotated `final annotation`. For example:\n\n    \"An annotation class.\"\n    final annotation class Example(shared String description) \n          satisfies Annotation {}\n\nAnnotation classes which satisfy `Annotation` directly may be applied \nto any program element that supports annotations (see [[Annotated]]). \nIn practice, annotation classes often satisfy [[OptionalAnnotation]] \nor [[SequencedAnnotation]] in order to prevent annotations being \napplied to inappropriate program elements.\n\nEach initializer parameter of an annotation class must have one of the \nfollowing types:\n\n* `Integer`, `Float`, `Character`, or `String`,\n* an enumerated type whose cases are all anonymous classes, \n  such as `Boolean`,\n* a subtype of [[ceylon.language.meta.declaration::Declaration]]\n* an annotation class,\n* `{T*}` or `[T*]` where `T` is a legal annotation parameter type, or\n* any tuple type whose element types are legal annotation parameter types.\n\nAn initializer parameter of an annotation class may be variadic \nor defaulted.\n\n### Annotation constructors\n\nAn *annotation constructor* is simply a top level function, annotated with \n`annotation` whose return type is an annotation class type. For example:\n\n    \"An annotation constructor.\"\n    annotation Example example(String description=\"\") \n        => Example(description);\n\nEach parameter of an annotation constructor must have one of the \nfollowing types:\n\n* `Integer`, `Float`, `Character`, or `String`,\n* an enumerated type whose cases are all anonymous classes, \n  such as `Boolean`,\n* a subtype of [[ceylon.language.meta.declaration::Declaration]],\n* an annotation type,\n* `{T*}` or `[T*]` where `T` is a legal annotation constructor parameter \n  type, or\n* any tuple type whose element types are legal annotation constructor \n  parameter types.\n\nA parameter of an annotation constructor may be variadic or defaulted.\n\nThe constructor must simply instantiate and return the annotation class, \nand there are strict rules about the arguments to the instantiation.\n\nAn annotation class can have multiple annotation constructors.\n"]},"$nm":"Annotation"},"ConstrainedAnnotation":{"of":[{"$nm":"Value"}],"$sts":[{"$pk":".","$nm":"Annotation"}],"$mt":"i","$tp":[{"$sts":[{"$pk":".","$nm":"Annotation"}],"$def":{"$pk":".","$nm":"Annotation"},"variance":"out","$nm":"Value"},{"$def":{"$pk":".","$nm":"Anything"},"variance":"out","$nm":"Values"},{"$sts":[{"$pk":".","$nm":"Annotated"}],"$def":{"$pk":".","$nm":"Nothing"},"variance":"in","$nm":"ProgramElement"}],"$an":{"shared":[],"see":["Annotation"],"doc":["An annotation constrained to appear only on certain \nprogram elements, and only with certain values. \n\nThis interface should not be satisfied directly. \nInstead either [[OptionalAnnotation]] or [[SequencedAnnotation]] \nshould be satisfied."]},"$m":{"occurs":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Annotated"},"$mt":"prm","$nm":"programElement"}]],"$mt":"m","$an":{"shared":[],"doc":["Can this annotation occur on the given program \nelement?"]},"$nm":"occurs"}},"$nm":"ConstrainedAnnotation","$st":"Value"},"nothing":{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"g","$an":{"shared":[],"throws":["AssertionError","when evaluated"],"doc":["A value getter of type `Nothing`. The expression `nothing`\nis formally assignable to any type, but produces an \nexception when evaluated.\n\n(This is most useful for tool-generated implementations of\n`formal` members.)"]},"$nm":"nothing"},"doc":{"$t":{"$pk":".","$nm":"DocAnnotation"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$an":{"doc":["Documentation, in Markdown syntax, about the annotated element"]},"$nm":"description"}]],"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to specify API documentation of a program\nelement."]},"$annot":1,"$nm":"doc"},"emptyMap":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Map"}],"$mt":"o","$an":{"shared":[],"doc":["An immutable [[Map]] with no entries."]},"$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Map"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"clone"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator"},"containsAny":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"containsAny"},"get":{"$t":{"$pk":".","$nm":"Null"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"key"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"get"},"count":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"count"},"select":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"select"},"by":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"step"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"by"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"contains"},"every":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"every"},"mapItems":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Map"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"key"},{"$t":{"$pk":".","$nm":"Nothing"},"$mt":"prm","$nm":"item"}]],"$mt":"prm","$pt":"f","$nm":"mapping"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"mapItems"},"fold":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"initial"},{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"partial"},{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"accumulating"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"fold"},"taking":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"take"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"taking"},"defines":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"defines"},"any":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"any"},"map":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"map"},"skipping":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"skip"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"skipping"},"find":{"$t":{"$pk":".","$nm":"Null"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"find"},"filter":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Map"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"filter"},"collect":{"$t":{"$pk":".","$nm":"Empty"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"actual":[]},"$nm":"collect"},"containsEvery":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"containsEvery"}},"$at":{"values":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Collection"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"values"},"keys":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Collection"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"keys"},"empty":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"empty"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"size"}},"$nm":"emptyMap"},"Scalar":{"of":[{"$nm":"Other"}],"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Numeric"},{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Comparable"},{"$pk":".","$nm":"Number"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Scalar"}],"$nm":"Other"}],"$an":{"shared":[],"see":["Integer","Float"],"doc":["Abstraction of [[numeric|Numeric]] types representing \nscalar values with a natural [[total order|Comparable]], \nincluding the built-in numeric types [[Integer]] and \n[[Float]].\n\n`Scalar`s have a well-defined [[magnitude]], which should\nsatisfy:\n\n- `x.magnitude >= 0`\n- `x.magnitude == 0` iff `x==0`\n\nwhere `0` is the additive identity of the numeric type."],"by":["Gavin"]},"$m":{"plusInteger":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"integer"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["The result of adding this number to the given \n[[Integer]]."]},"$nm":"plusInteger"},"timesInteger":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"integer"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["The result of multiplying this number by the given \n[[Integer]]."]},"$nm":"timesInteger"}},"$at":{"magnitude":{"$t":{"$nm":"Other"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The magnitude of this number. Must satisfy: \n\n- `magnitude>=0` \n- `magnitude==0` iff `this==0`\n\nwhere `0` is the additive identity."],"actual":[]},"$nm":"magnitude"},"wholePart":{"$t":{"$nm":"Other"},"$mt":"a","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"wholePart"},"negative":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["Determine if the number is strictly negative, that is, \nif `this<0`, where `0` is the additive identity."],"actual":[]},"$nm":"negative"},"positive":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["Determine if the number is strictly positive, that is, \nif `this>0`, where `0` is the additive identity."],"actual":[]},"$nm":"positive"},"fractionalPart":{"$t":{"$nm":"Other"},"$mt":"a","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"fractionalPart"}},"$nm":"Scalar","$st":"Other"},"AuthorsAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"AuthorsAnnotation"},{"$mt":"tp","$pk":".","$nm":"Annotated"}],"$pk":".","$nm":"OptionalAnnotation"}],"$ps":[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"}],"$pk":".","$nm":"Sequential"},"$mt":"prm","seq":1,"$an":{"shared":[],"doc":["The authors, in Markdown syntax, of the annotated element"]},"$nm":"authors"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[by]]."]},"$annot":1,"$at":{"authors":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"}],"$pk":".","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"doc":["The authors, in Markdown syntax, of the annotated element"]},"$nm":"authors"}},"$nm":"AuthorsAnnotation"},"SequenceBuilder":{"super":{"$pk":".","$nm":"Basic"},"$mt":"c","$tp":[{"$nm":"Element"}],"$an":{"shared":[],"native":[],"see":["SequenceAppender","concatenate","Singleton"],"doc":["Builder utility for constructing immutable \n[[sequences|Sequential]] by incrementally appending \nelements. A newly-instantiated `SequenceBuilder` produces\nthe [[empty sequence|empty]] `[]`."]},"$m":{"append":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"SequenceBuilder"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"default":[],"native":[],"doc":["Append an [[element]] to the sequence and return this \nbuilder"]},"$nm":"append"},"appendAll":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"SequenceBuilder"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$an":{"shared":[],"default":[],"native":[],"doc":["Append multiple [[elements]] to the sequence and return \nthis builder"]},"$nm":"appendAll"}},"$at":{"sequence":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"default":[],"native":[],"doc":["The resulting sequence. If no elements have been \nappended, the [[empty sequence|empty]] `[]`."]},"$nm":"sequence"},"empty":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"doc":["Determine if the resulting [[sequence]] is empty."]},"$nm":"empty"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"doc":["The size of the resulting [[sequence]]."]},"$nm":"size"}},"$nm":"SequenceBuilder"},"printAll":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"values"},{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$def":1,"$an":{"doc":["A character sequence to use to separate the values"]},"$nm":"separator"}]],"$mt":"m","$an":{"shared":[],"see":["write"],"doc":["Print multiple values to the standard output of the virtual \nmachine process as a single line of text, separated by a\ngiven character sequence."],"by":["Gavin"]},"$nm":"printAll"},"ifExists":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"val"}]],"$mt":"prm","$pt":"f","$nm":"predicate"}],[{"$t":{"$pk":".","$nm":"Anything"},"$mt":"prm","$nm":"val"}]],"$mt":"m","$m":{"predicate$iqwk2g":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"val"}]],"$mt":"m","$nm":"predicate"}},"$nm":"ifExists"},"tagged":{"$t":{"$pk":".","$nm":"TagsAnnotation"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"}],"$pk":".","$nm":"Sequential"},"$mt":"prm","seq":1,"$an":{"doc":["The tags, in plain text."]},"$nm":"tags"}]],"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to categorize the API by tag."]},"$annot":1,"$nm":"tagged"},"variable":{"$t":{"$pk":".","$nm":"VariableAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to mark an value as variable. A `variable` value \nmay be assigned multiple times."]},"$annot":1,"$nm":"variable"},"Correspondence":{"$mt":"i","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"variance":"in","$nm":"Key"},{"variance":"out","$nm":"Item"}],"$an":{"shared":[],"see":["Map","List","Category"],"doc":["Abstract supertype of objects which associate values with \nkeys.\n\n`Correspondence` does not satisfy [[Category]], since in \nsome cases&mdash;`List`, for example&mdash;it is convenient \nto consider the subtype a `Category` of its values, and in \nother cases&mdash;`Map`, for example&mdash;it is convenient \nto treat the subtype as a `Category` of its \n[[entries|Entry]].\n\nThe item corresponding to a given key may be obtained from \na `Correspondence` using the item operator:\n\n    value bg = settings[\"backgroundColor\"] else white;\n\nThe `get()` operation and item operator result in an\noptional type, to reflect the possibility that there may be\nno item for the given key."],"by":["Gavin"]},"$m":{"definesAny":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"keys"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["Correspondence.defines"],"doc":["Determines if this `Correspondence` defines a value\nfor any one of the given keys."]},"$nm":"definesAny"},"defines":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Key"},"$mt":"prm","$nm":"key"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["Correspondence.definesAny","Correspondence.definesEvery","Correspondence.keys"],"doc":["Determines if there is a value defined for the \ngiven key."]},"$nm":"defines"},"get":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Item"}]},"$ps":[[{"$t":{"$nm":"Key"},"$mt":"prm","$nm":"key"}]],"$mt":"m","$an":{"shared":[],"formal":[],"see":["Correspondence.items"],"doc":["Returns the value defined for the given key, or \n`null` if there is no value defined for the given \nkey."]},"$nm":"get"},"items":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Item"}]}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"keys"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["Correspondence.get"],"doc":["Returns the items defined for the given keys, in\nthe same order as the corresponding keys."]},"$nm":"items"},"definesEvery":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"keys"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["Correspondence.defines"],"doc":["Determines if this `Correspondence` defines a value\nfor every one of the given keys."]},"$nm":"definesEvery"}},"$at":{"keys":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"}],"$pk":".","$nm":"Category"},"$mt":"g","$an":{"shared":[],"default":[],"see":["Correspondence.defines"],"doc":["The `Category` of all keys for which a value is \ndefined by this `Correspondence`."]},"$nm":"keys"}},"$nm":"Correspondence"},"apply":{"$t":{"$nm":"Return"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Return"},{"$mt":"tp","$nm":"Args"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"f"},{"$t":{"$nm":"Args"},"$mt":"prm","$nm":"args"}]],"$mt":"m","$tp":[{"$nm":"Return"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"Sequential"}],"$nm":"Args"}],"$an":{"shared":[],"see":["unflatten"],"doc":["Applies an arbitrary `Callable` to the specified arguments. The arguments\nare taken packaged in a tuple whose type is compatible with the `Callable`\narguments tuple.\n\nIn practice, this behaves as if the `Callable` were called with the elements\nof the tuple used as its arguments."]},"$nm":"apply"},"count":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"values"}]],"$mt":"m","$an":{"shared":[],"doc":["A count of the number of `true` items in the given values."]},"$nm":"count"},"byItem":{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$nm":"Item"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Item"},"$mt":"prm","$nm":"y"}]],"$mt":"prm","$pt":"f","$nm":"comparing"}],[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"},{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"x"},{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"},{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Entry"},"$mt":"prm","$nm":"y"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Item"}],"$an":{"shared":[],"see":["byKey"],"doc":["A comparator for `Entry`s which compares their items \naccording to the given `comparing()` function."]},"$nm":"byItem"},"FinalAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"FinalAnnotation"},{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"ClassDeclaration"}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[final]]."]},"$annot":1,"$nm":"FinalAnnotation"},"by":{"$t":{"$pk":".","$nm":"AuthorsAnnotation"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"}],"$pk":".","$nm":"Sequential"},"$mt":"prm","seq":1,"$an":{"doc":["The authors, in Markdown syntax, of the annotated element"]},"$nm":"authors"}]],"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to specify API authors."]},"$annot":1,"$nm":"by"},"every":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"values"}]],"$mt":"m","$an":{"shared":[],"see":["any"],"doc":["Determines if every one of the given boolean values \n(usually a comprehension) is `true`."]},"$nm":"every"},"concatenate":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"}],"$pk":".","$nm":"Sequential"},"$mt":"prm","seq":1,"$an":{"doc":["The iterable objects to concatenate."]},"$nm":"iterables"}]],"$mt":"m","$tp":[{"$nm":"Element"}],"$an":{"shared":[],"see":["SequenceBuilder","expand"],"doc":["Given a list of iterable objects, return a new sequence \nof all elements of the all given objects. If there are\nno arguments, or if none of the arguments contains any\nelements, return the empty sequence."]},"$nm":"concatenate"},"$pkg-shared":1,"Tuple":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"}],"$ps":[{"$t":{"$nm":"First"},"$hdn":1,"$mt":"prm","$an":{"shared":[],"doc":["The first element of this tuple."],"actual":[]},"$nm":"first"},{"$t":{"$nm":"Rest"},"$hdn":1,"$mt":"prm","$an":{"shared":[],"doc":["A tuple with the elements of this tuple, except\nfor the first element."],"actual":[]},"$nm":"rest"}],"$mt":"c","$tp":[{"variance":"out","$nm":"Element"},{"$sts":[{"$nm":"Element"}],"variance":"out","$nm":"First"},{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"}],"$def":{"$pk":".","$nm":"Empty"},"variance":"out","$nm":"Rest"}],"$an":{"shared":[],"final":[],"doc":["A _tuple_ is a typed linked list. Each instance of \n`Tuple` represents the value and type of a single link.\nThe attributes `first` and `rest` allow us to retrieve\na value form the list without losing its static type \ninformation.\n\n    value point = Tuple(0.0, Tuple(0.0, Tuple(\"origin\")));\n    Float x = point.first;\n    Float y = point.rest.first;\n    String label = point.rest.rest.first;\n\nUsually, we abbreviate code involving tuples.\n\n    [Float,Float,String] point = [0.0, 0.0, \"origin\"];\n    Float x = point[0];\n    Float y = point[1];\n    String label = point[2];\n\nA list of types enclosed in brackets is an abbreviated \ntuple type. An instance of `Tuple` may be constructed \nby surrounding a value list in brackets:\n\n    [String,String] words = [\"hello\", \"world\"];\n\nThe index operator with a literal integer argument is a \nshortcut for a chain of evaluations of `rest` and \n`first`. For example, `point[1]` means `point.rest.first`.\n\nA _terminated_ tuple type is a tuple where the type of\nthe last link in the chain is `Empty`. An _unterminated_ \ntuple type is a tuple where the type of the last link\nin the chain is `Sequence` or `Sequential`. Thus, a \nterminated tuple type has a length that is known\nstatically. For an unterminated tuple type only a lower\nbound on its length is known statically.\n\nHere, `point` is an unterminated tuple:\n\n    String[] labels = ... ;\n    [Float,Float,String*] point = [0.0, 0.0, *labels];\n    Float x = point[0];\n    Float y = point[1];\n    String? firstLabel = point[2];\n    String[] allLabels = point[2...];"],"by":["Gavin"]},"$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"First"},{"$mt":"tp","$nm":"Rest"}],"$pk":".","$nm":"Tuple"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"clone"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$wey6kq":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"current$5dvxla":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"var":1,"$mt":"a","$an":{"shared":[],"actual":[],"variable":[]},"$nm":"current"}},"$nm":"iterator"}}},"get":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"get"},"spanTo":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"spanTo"},"segment":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"segment"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"contains"},"withLeading":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]},{"$mt":"tp","$nm":"Other"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"First"},{"$mt":"tp","$nm":"Rest"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Tuple"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$an":{"doc":["The first element of the resulting tuple."]},"$nm":"element"}]],"$mt":"m","$tp":[{"$nm":"Other"}],"$an":{"shared":[],"doc":["Returns a new tuple that starts with the specified\nelement, followed by the elements of this tuple."],"actual":[]},"$nm":"withLeading"},"spanFrom":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"spanFrom"},"span":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"end"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"span"}},"$at":{"lastIndex":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"lastIndex"},"last":{"$t":{"$nm":"Element"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"last"},"reversed":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"reversed"},"rest":{"$t":{"$nm":"Rest"},"$mt":"a","$an":{"shared":[],"doc":["A tuple with the elements of this tuple, except\nfor the first element."],"actual":[]},"$nm":"rest"},"first":{"$t":{"$nm":"First"},"$mt":"a","$an":{"shared":[],"doc":["The first element of this tuple."],"actual":[]},"$nm":"first"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"size"}},"$nm":"Tuple"},"lessThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"val"}],[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Comparable"}],"$nm":"Element"}],"$an":{"shared":[],"deprecated":["use [[Comparable.largerThan]]"],"doc":["Returns a partial function that will compare an element\nto any other element and returns true if the compared\nelement is less than its element.\nThis is useful in conjunction with methods that receive\na predicate function."]},"$nm":"lessThan"},"maxRadix":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$nm":"maxRadix"},"identityHash":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Identifiable"},"$mt":"prm","$nm":"x"}]],"$mt":"m","$an":{"shared":[],"native":[],"see":["identical"],"doc":["Return the system-defined identity hash value of the \ngiven value. This hash value is consistent with \nidentity equality."]},"$nm":"identityHash"},"uncurry":{"$t":{"$tp":[{"$mt":"tp","$nm":"Return"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Argument"},{"$mt":"tp","$nm":"First"},{"$mt":"tp","$nm":"Rest"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Callable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Return"},{"$mt":"tp","$nm":"Rest"}],"$pk":".","$nm":"Callable"},"$ps":[[{"$t":{"$nm":"First"},"$mt":"prm","$nm":"first"}]],"$mt":"prm","$pt":"f","$nm":"f"}]],"$mt":"m","$tp":[{"$nm":"Return"},{"$nm":"Argument"},{"$sts":[{"$nm":"Argument"}],"$nm":"First"},{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Argument"}],"$pk":".","$nm":"Sequential"}],"$nm":"Rest"}],"$an":{"shared":[],"see":["curry","compose"],"doc":["Uncurries a function, returning a function with \none parameter list, given a function with two\nparameter lists, where the first parameter list\nhas exactly one parameter. The parameter list\nof the returned function has the parameter of\nthe first parameter list of the original\nfunction, followed by all parameters of the\nsecond parameter list.\n\nThat is, if `fun` has type `W(Y,Z)(X)` then \n`uncurry(fun)` has type `W(X,Y,Z)`."]},"$nm":"uncurry"},"any":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"values"}]],"$mt":"m","$an":{"shared":[],"see":["every"],"doc":["Determines if any one of the given boolean values \n(usually a comprehension) is `true`."]},"$nm":"any"},"optional":{"$t":{"$pk":".","$nm":"OptionalImportAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to specify that a module can be executed even if \nthe annotated dependency is not available."]},"$annot":1,"$nm":"optional"},"Summable":{"of":[{"$nm":"Other"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Summable"}],"$nm":"Other"}],"$an":{"shared":[],"see":["String","Numeric"],"doc":["Abstraction of types which support a binary addition\noperator `x + y`. For [[numeric types|Numeric]], this is\njust familiar numeric addition. For [[String]], it is\nstring concatenation.\n    \n    Integer next = current + 1;\n    String helloWorld = \"hello\" + \" \" + \"world\";\n\nA concrete class that implements this interface should be \na mathematical _semigroup_. That is, the addition \noperation should be associative, satisfying:\n\n- `(x+y)+z == x+(y+z)`\n\nA `Summable` type might be a _monoid_, that is, a \nsemigroup with an additive identity element, usually \ndenoted `0`, but this is not required. For example:\n\n- `String` is a monoid with identity element `\"\"`, \n- `Float` is a monoid with identity element `0.0`, and \n- `Integer` is a monoid with identity element `0`.\n\nFor any monoid, the addition operation must satisfy:\n\n- `x + 0 == x`"],"by":["Gavin"]},"$m":{"plus":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["The result of adding the given value to this value. \nThis operation should never perform any kind of \nmutation upon either the receiving value or the \nargument value."]},"$nm":"plus"}},"$nm":"Summable","$st":"Other"},"expand":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"comp":"u","$mt":"tp","$ts":[{"$nm":"OuterAbsent"},{"$nm":"InnerAbsent"}]}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"InnerAbsent"}],"$pk":".","$nm":"Iterable"},{"$mt":"tp","$nm":"OuterAbsent"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"iterables"}]],"$mt":"m","$tp":[{"$nm":"Element"},{"$sts":[{"$pk":".","$nm":"Null"}],"$nm":"OuterAbsent"},{"$sts":[{"$pk":".","$nm":"Null"}],"$nm":"InnerAbsent"}],"$an":{"shared":[],"see":["concatenate"],"doc":["Given an iterable object whose elements are also iterable,\nreturn a new stream with all the elements of the nested\niterables. If there are no arguments, or if none of the \narguments contains any elements, return an empty iterable."]},"$nm":"expand"},"Set":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Collection"}],"$mt":"i","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"variance":"out","$nm":"Element"}],"$an":{"shared":[],"doc":["A collection of unique elements.\n\nA `Set` is a [[Collection]] of its elements.\n\nSets may be the subject of the binary union, intersection, \nand complement operators `|`, `&`, and `~`.\n\n    value kids = girls|boys; \n\nElements are compared for equality using [[Object.equals]] \nor [[Comparable.compare]]. An element may occur at most \nonce in a set."]},"$m":{"complement":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Set"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Other"}],"$an":{"shared":[],"formal":[],"doc":["Returns a new `Set` containing all the elements in this \nset that are not contained in the given `Set`."]},"$nm":"complement"},"subset":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if this set is a subset of the given `Set`, \nthat is, if the given set contains all of the elements \nin this set."]},"$nm":"subset"},"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Set"},"$mt":"m","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"clone"},"intersection":{"$t":{"$tp":[{"comp":"i","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]}],"$pk":".","$nm":"Set"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Other"}],"$an":{"shared":[],"formal":[],"doc":["Returns a new `Set` containing only the elements that \nare present in both this set and the given `Set`."]},"$nm":"intersection"},"exclusiveUnion":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]}],"$pk":".","$nm":"Set"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Other"}],"$an":{"shared":[],"formal":[],"doc":["Returns a new `Set` containing only the elements \ncontained in either this set or the given `Set`, but no \nelement contained in both sets."]},"$nm":"exclusiveUnion"},"superset":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if this set is a superset of the given \n`Set`, that is, if this set contains all of the \nelements in the given set."]},"$nm":"superset"},"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Two `Set`s are considered equal if they have the same \nsize and if every element of the first set is also an \nelement of the second set, as determined by \n[[contains]]. Equivalently, a set is equal to a second \nset if it is both a subset and a superset of the second\nset."],"actual":[]},"$nm":"equals"},"union":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]}],"$pk":".","$nm":"Set"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Set"},"$mt":"prm","$nm":"set"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Other"}],"$an":{"shared":[],"formal":[],"doc":["Returns a new `Set` containing all the elements of this \nset and all the elements of the given `Set`."]},"$nm":"union"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The fundamental operation for `Set`s. Determines if the\ngiven value belongs to this set."],"actual":[]},"$nm":"contains"}},"$at":{"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"default":[],"actual":[]},"$nm":"hash"}},"$nm":"Set"},"Sequence":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"}],"$mt":"i","$tp":[{"variance":"out","$nm":"Element"}],"$an":{"shared":[],"see":["Empty"],"doc":["A nonempty, immutable sequence of values. The type \n`Sequence<Element>` may be abbreviated `[Element+]`.\n\nGiven a possibly-empty sequence of type `[Element*]`, the \n`if (nonempty ...)` construct, or, alternatively, \n`assert (nonempty ...)`, may be used to narrow to a \nsequence type to a nonempty sequence type:\n\n    [Integer*] nums = ... ;\n    if (nonempty nums) {\n        Integer first = nums.first;\n        Integer max = max(nums);\n        [Integer+] squares = nums.collect((Integer i) => i**2));\n        [Integer+] sorted = nums.sort(byIncreasing((Integer i) => i));\n    }\n\nOperations like `first`, `max()`, `collect()`, and `sort()`, \nwhich polymorphically produce a nonempty or non-null output \nwhen given a nonempty input are called \n_emptiness-preserving_."],"by":["Gavin"]},"$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"},"$mt":"m","$an":{"shared":[],"default":[],"doc":["This nonempty sequence."],"actual":[]},"$nm":"clone"},"following":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Other"},{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Nothing"}]}]},{"$mt":"tp","$nm":"Other"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"}],"$pk":".","$nm":"Tuple"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"head"}]],"$mt":"m","$tp":[{"$nm":"Other"}],"$an":{"shared":[],"default":[],"actual":[]},"$nm":"following"},"sort":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"},"$ps":[[{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"y"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The function comparing pairs of elements."]},"$nm":"comparing"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["A nonempty sequence containing the elements of this\ncontainer, sorted according to a function imposing a \npartial order upon the elements."],"actual":[]},"$m":{"comparing$wkrt64":{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"y"}]],"$mt":"m","$an":{"doc":["The function comparing pairs of elements."]},"$nm":"comparing"}},"$nm":"sort"},"shorterThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$nm":"shorterThan"},"longerThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$nm":"longerThan"},"repeat":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"times"}]],"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$nm":"repeat"},"findLast":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$nm":"findLast"},"collect":{"$t":{"$tp":[{"$mt":"tp","$nm":"Result"}],"$pk":".","$nm":"Sequence"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The transformation applied to the elements."]},"$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"default":[],"doc":["A nonempty sequence containing the results of applying \nthe given mapping to the elements of this sequence."],"actual":[]},"$m":{"collecting$5qczya":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"doc":["The transformation applied to the elements."]},"$nm":"collecting"}},"$nm":"collect"}},"$at":{"lastIndex":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"formal":[],"see":["Sequence.size"],"doc":["The index of the last element of the sequence."],"actual":[]},"$nm":"lastIndex"},"last":{"$t":{"$nm":"Element"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The last element of the sequence, that is, the element\nwith index `sequence.lastIndex`."],"actual":[]},"$nm":"last"},"sequence":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["This nonempty sequence."],"actual":[]},"$nm":"sequence"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"default":[],"actual":[]},"$nm":"string"},"empty":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"doc":["Returns `false`, since every `Sequence` contains at\nleast one element."],"actual":[]},"$nm":"empty"},"rest":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The rest of the sequence, without the first element."],"actual":[]},"$nm":"rest"},"reversed":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequence"},"$mt":"g","$an":{"shared":[],"formal":[],"doc":["Reverse this sequence, returning a new nonempty\nsequence."],"actual":[]},"$nm":"reversed"},"first":{"$t":{"$nm":"Element"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The first element of the sequence, that is, the element\nwith index `0`."],"actual":[]},"$nm":"first"}},"$nm":"Sequence"},"Scalable":{"of":[{"$nm":"Value"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Scale"}],"$pk":".","$nm":"Numeric"}],"variance":"in","$nm":"Scale"},{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Scale"},{"$mt":"tp","$nm":"Value"}],"$pk":".","$nm":"Scalable"}],"variance":"out","$nm":"Value"}],"$an":{"shared":[],"doc":["Abstract supertype of types that support scaling by a \nnumeric factor. Examples of such types include vectors and \nmatrices. The _scale_ operator `**` accepts a scale factor\nas its first operand, and an instance of `Scalable` as its\nsecond operand.\n\n    Vector scaled = 2.0 ** Vector(x,y,z);\n\nConcrete classes which implement this interface should\nsatisfy:\n\n- `x == 1**x`\n- `a ** (b ** x) == a*b ** x`\n\nwhere `1` denotes the multiplicative identity of the \nnumeric scaling type.\n\nConcrete classes which implement this interface are\nencouraged to also satisfy [[Invertable]], in which case, \nthe following identity should be satisfied:\n\n- `-x == -1**x`\n\nConcrete classes which implement this interface and which\nalso satisfy [[Summable]] should satisfy:\n\n- `x+x == 2**x`\n- `a ** (x+y) == a**x + a**y`\n\nThe [[scaling type|Scale]] must be a [[numeric|Numeric]]\ntype, but is not required to be [[Scalar]], since a complex\nnumber scaling type should be allowed."],"by":["Gavin"]},"$m":{"scale":{"$t":{"$nm":"Value"},"$ps":[[{"$t":{"$nm":"Scale"},"$mt":"prm","$nm":"scalar"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Scale this value by the given scale factor."]},"$nm":"scale"}},"$nm":"Scalable","$st":"Value"},"Annotated":{"$mt":"i","$an":{"shared":[],"see":["Annotation"],"doc":["A program element that can\nbe annotated."]},"$nm":"Annotated"},"StringBuilder":{"super":{"$pk":".","$nm":"Basic"},"$mt":"c","$an":{"shared":[],"native":[],"doc":["Builder utility for constructing [[strings|String]] by \nincrementally appending strings or characters"]},"$m":{"append":{"$t":{"$pk":".","$nm":"StringBuilder"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"string"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Append the characters in the given [[string]]."]},"$nm":"append"},"appendSpace":{"$t":{"$pk":".","$nm":"StringBuilder"},"$mt":"m","$an":{"shared":[],"doc":["Append a space character."]},"$nm":"appendSpace"},"deleteInitial":{"$t":{"$pk":".","$nm":"StringBuilder"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"doc":["Deletes the specified [[number of characters|length]] \nfrom the start of the string. If `length` is \nnonpositive, nothing is deleted."]},"$nm":"deleteInitial"},"delete":{"$t":{"$pk":".","$nm":"StringBuilder"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$def":1,"$nm":"length"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Deletes the specified [[number of characters|length]] \nfrom the current content, starting at the specified \n[[index]]. If the `index` is beyond the end of the \ncurrent content, nothing is deleted. If the number of \ncharacters to delete is greater than the available \ncharacters from the given `index`, the content is \ntruncated at the given `index`. If `length` is \nnonpositive, nothing is deleted."]},"$nm":"delete"},"reset":{"$t":{"$pk":".","$nm":"StringBuilder"},"$mt":"m","$an":{"shared":[],"native":[],"doc":["Remove all content and return to initial state."]},"$nm":"reset"},"insertCharacter":{"$t":{"$pk":".","$nm":"StringBuilder"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"},{"$t":{"$pk":".","$nm":"Character"},"$mt":"prm","$nm":"character"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Insert a [[character]] at the specified [[index]]. If \nthe `index` is beyond the end of the current string, \nthe new content is simply appended to the current \ncontent. If the `index` is a negative number, the new \ncontent is inserted at index 0."]},"$nm":"insertCharacter"},"appendAll":{"$t":{"$pk":".","$nm":"StringBuilder"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"strings"}]],"$mt":"m","$an":{"shared":[],"doc":["Append the characters in the given [[strings]]."]},"$nm":"appendAll"},"insert":{"$t":{"$pk":".","$nm":"StringBuilder"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"},{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"string"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Insert a [[string]] at the specified [[index]]. If the \n`index` is beyond the end of the current string, the \nnew content is simply appended to the current content. \nIf the `index` is a negative number, the new content is\ninserted at index 0."]},"$nm":"insert"},"appendNewline":{"$t":{"$pk":".","$nm":"StringBuilder"},"$mt":"m","$an":{"shared":[],"doc":["Append a newline character."]},"$nm":"appendNewline"},"deleteTerminal":{"$t":{"$pk":".","$nm":"StringBuilder"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"doc":["Deletes the specified [[number of characters|length]] \nfrom the end of the string. If `length` is nonpositive, \nnothing is deleted."]},"$nm":"deleteTerminal"},"appendCharacter":{"$t":{"$pk":".","$nm":"StringBuilder"},"$ps":[[{"$t":{"$pk":".","$nm":"Character"},"$mt":"prm","$nm":"character"}]],"$mt":"m","$an":{"shared":[],"doc":["Append the given [[character]]."]},"$nm":"appendCharacter"}},"$at":{"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The resulting string. If no characters have been\nappended, the empty string."],"actual":[]},"$nm":"string"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Returns the length of the current content, that is,\nthe [[size|String.size]] of the produced [[string]]."]},"$nm":"size"}},"$nm":"StringBuilder"},"emptyOrSingleton":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Empty"},{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}]},"$ps":[[{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$mt":"prm","$nm":"element"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Element"}],"$an":{"shared":[],"see":["Tuple","Empty"],"doc":["A singleton `Tuple` with the given element if the \ngiven element is non-null, or `Empty` otherwise ."]},"$nm":"emptyOrSingleton"},"shared":{"$t":{"$pk":".","$nm":"SharedAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to mark a type or member as shared. A `shared` \nmember is visible outside the block of code in which it is \ndeclared."]},"$annot":1,"$nm":"shared"},"TagsAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"TagsAnnotation"},{"$mt":"tp","$pk":".","$nm":"Annotated"}],"$pk":".","$nm":"OptionalAnnotation"}],"$ps":[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"}],"$pk":".","$nm":"Sequential"},"$mt":"prm","seq":1,"$an":{"shared":[],"doc":["The tags, in plain text."]},"$nm":"tags"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[tagged]]."]},"$annot":1,"$at":{"tags":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"}],"$pk":".","$nm":"Sequential"},"$mt":"a","$an":{"shared":[],"doc":["The tags, in plain text."]},"$nm":"tags"}},"$nm":"TagsAnnotation"},"Binary":{"of":[{"$nm":"Other"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Binary"}],"$nm":"Other"}],"$an":{"shared":[],"see":["Integer"],"doc":["Abstraction of types that are conceptually a sequence of bits, \nand may be the subject of bitwise operations. \nA bit is a [[Boolean]] value."],"by":["Stef"]},"$m":{"clear":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Returns an instance with the given bit set to 0\nif `0 <= index < size`, otherwise returns an instance \nwith the same bits set as this instance.\nBits are indexed from right to left."]},"$nm":"clear"},"xor":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Performs a logical exclusive OR operation."]},"$nm":"xor"},"get":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Retrieves a given bit from this bit sequence \nif `0 <= index < size`, otherwise returns false. \nBits are indexed from right to left."]},"$nm":"get"},"leftLogicalShift":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"shift"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Performs a left logical shift. Sign is not preserved. \nPadded with zeros."]},"$nm":"leftLogicalShift"},"set":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"},{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"prm","$def":1,"$nm":"bit"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Returns an instance with the given bit set to the given \nvalue if `0 <= index < size`, otherwise returns an instance\nwith the same bits set as this instance. \nBits are indexed from right to left."]},"$nm":"set"},"or":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Performs a logical inclusive OR operation."]},"$nm":"or"},"rightArithmeticShift":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"shift"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Performs a right arithmetic shift. Sign is preserved. \nPadded with zeros."]},"$nm":"rightArithmeticShift"},"rightLogicalShift":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"shift"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Performs a right logical shift. Sign is not preserved. \nPadded with zeros."]},"$nm":"rightLogicalShift"},"flip":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Returns an instance with the given bit flipped to its \nopposite value if `0 <= index < size`, otherwise returns an instance \nwith the same bits set as this instance. \nBits are indexed from right to left."]},"$nm":"flip"},"and":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Performs a logical AND operation."]},"$nm":"and"}},"$at":{"not":{"$t":{"$nm":"Other"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The binary complement of this sequence of bits."]},"$nm":"not"}},"$nm":"Binary","$st":"Other"},"commaList":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$nm":"commaList"},"Number":{"$mt":"i","$an":{"shared":[],"see":["Numeric","Scalar"],"doc":["Abstraction of numeric types representing scalar values. \nThis type defines operations which can be expressed without \nreference to the invariant self types `Other` of \n[[Numeric]], [[Scalar]], and [[Comparable]].\n\n`Number` allows certain operations to be applied to streams\nof heterogeneous numeric types.\n\n    value magnitudes = { -1.0, 1, 0.0, 2, 4.0 }.map(Number.magnitude); \n\nThis would not be well-typed for `Scalar.magnitude`, since \n`Scalar` is an invariant type.\n\nEvery concrete class which implements `Number` should \nalso implement `Scalar`. (Unfortunately, this constraint\ncannot be expressed within the type system of the language\nwithout loss of the covariance of this type.)"],"by":["Gavin"]},"$at":{"sign":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The sign of this number: \n\n- `1` if the number is positive, \n- `-1` if it is negative, or \n- `0` if it is zero."]},"$nm":"sign"},"integer":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"formal":[],"throws":["OverflowException","if the number is too large to be represented \nas an `Integer`"],"doc":["The number, represented as an [[Integer]], after \ntruncation of any fractional part if such a \nrepresentation is possible."]},"$nm":"integer"},"magnitude":{"$t":{"$pk":".","$nm":"Number"},"$mt":"a","$an":{"shared":[],"formal":[],"see":["Scalar.magnitude"],"doc":["The magnitude of this number."]},"$nm":"magnitude"},"wholePart":{"$t":{"$pk":".","$nm":"Number"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The integral value of the number after truncation of \nthe fractional part. For [[Integral]] numeric types, \nthe integral value of a number is the number itself."]},"$nm":"wholePart"},"negative":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"see":["Scalar.negative"],"doc":["Determine if the number is strictly negative."]},"$nm":"negative"},"positive":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"formal":[],"see":["Scalar.positive"],"doc":["Determine if the number is strictly positive."]},"$nm":"positive"},"float":{"$t":{"$pk":".","$nm":"Float"},"$mt":"a","$an":{"shared":[],"formal":[],"throws":["OverflowException","if the number is too large to be represented \nas a `Float`"],"doc":["The number, represented as a [[Float]], if such a \nrepresentation is possible."]},"$nm":"float"},"fractionalPart":{"$t":{"$pk":".","$nm":"Number"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The fractional part of this number, after truncation of \nthe integral part. For [[Integral]] numeric types, the \nfractional part is always zero."]},"$nm":"fractionalPart"}},"$nm":"Number"},"Map":{"$sts":[{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Entry"}],"$pk":".","$nm":"Collection"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"},{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Correspondence"}],"$mt":"i","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"variance":"out","$nm":"Key"},{"$sts":[{"$pk":".","$nm":"Object"}],"variance":"out","$nm":"Item"}],"$an":{"shared":[],"see":["Entry","forKey","forItem","byItem","byKey"],"doc":["Represents a collection which maps _keys_ to _items_,\nwhere a key can map to at most one item. Each such \nmapping may be represented by an [[Entry]].\n\nA `Map` is a [[Collection]] of its `Entry`s, and a \n[[Correspondence]] from keys to items.\n\nThe presence of an entry in a map may be tested using the \n`in` operator:\n\n    if (\"lang\"->\"en_AU\" in settings) { ... }\n\nThe entries of the map may be iterated using `for`:\n\n    for (key->item in settings) { ... }\n\nThe item for a key may be obtained using the item\noperator:\n\n    String lang = settings[\"lang\"] else \"en_US\";\n\nKeys are compared for equality using [[Object.equals]] or\n[[Comparable.compare]]. There may be at most one entry \nper key."]},"$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Map"},"$mt":"m","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"clone"},"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Two `Map`s are considered equal iff they have the same \n_entry sets_. The entry set of a `Map` is the set of \n`Entry`s belonging to the map. Therefore, the maps are \nequal iff they have same set of `keys`, and for every \nkey in the key set, the maps have equal items."],"actual":[]},"$nm":"equals"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"entry"}]],"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$nm":"contains"},"mapItems":{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$nm":"Result"}],"$pk":".","$nm":"Map"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Key"},"$mt":"prm","$nm":"key"},{"$t":{"$nm":"Item"},"$mt":"prm","$nm":"item"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The function that transforms a key\/item pair, \nproducing the item of the resulting map."]},"$nm":"mapping"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Result"}],"$an":{"shared":[],"default":[],"doc":["Returns a `Map` with the same keys as this map. For\nevery key, the item is the result of applying the given \ntransformation function. This is a lazy operation."]},"$m":{"mapping$4maorz":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Key"},"$mt":"prm","$nm":"key"},{"$t":{"$nm":"Item"},"$mt":"prm","$nm":"item"}]],"$mt":"m","$an":{"doc":["The function that transforms a key\/item pair, \nproducing the item of the resulting map."]},"$nm":"mapping"}},"$nm":"mapItems","$o":{"map$5vl2m":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$nm":"Result"}],"$pk":".","$nm":"Map"}],"$mt":"o","$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$nm":"Result"}],"$pk":".","$nm":"Map"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"clone"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$nm":"Result"}],"$pk":".","$nm":"Entry"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator"},"defines":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"key"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"defines"},"get":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Result"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"key"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"get"},"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"equals"}},"$at":{"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"hash"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"size"}},"$nm":"map"}}}},"$at":{"values":{"$t":{"$tp":[{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Collection"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["A [[Collection]] containing the items stored in this \nmap. An element can be stored under more than one key \nin the map, and so it can occur more than once in the \nresulting collection."]},"$nm":"values","$o":{"values$42snvy":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Collection"}],"$mt":"o","$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Collection"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"clone"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"item"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"contains"}},"$at":{"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"size"}},"$nm":"values"}}},"keys":{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"}],"$pk":".","$nm":"Collection"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["A [[Collection]] containing the keys of this map."],"actual":[]},"$nm":"keys","$o":{"keys$2rvhme":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Key"}],"$pk":".","$nm":"Collection"}],"$mt":"o","$m":{"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"}],"$pk":".","$nm":"Collection"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"clone"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"key"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"contains"}},"$at":{"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"size"}},"$nm":"keys"}}},"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"default":[],"actual":[]},"$nm":"hash"}},"$nm":"Map"},"Numeric":{"of":[{"$nm":"Other"}],"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Invertable"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Other"}],"$pk":".","$nm":"Numeric"}],"$nm":"Other"}],"$an":{"shared":[],"see":["Scalar"],"doc":["Abstraction of numeric types with the usual binary \noperations:\n\n- addition, `x + y`, \n- subtraction, `x - y`, \n- multiplication, `x * y`, and \n- division, `x \/ y`, along with \n- additive inverse `-x`.\n\nA concrete class which implements this interface should be\na mathematical _ring_. That is:\n\n- both addition, `+`, and multiplication, `*`, should be\n  associative and commutative,\n- there should be additive and multiplicative identities,\n  denoted `0` and `1` respectively, satisfying `x+0 == x`\n  and `x*1 == x`,\n- every instance `x` should have an additive inverse `-x`, \n  satisfying `x + -x == 0`, and\n- multiplication should distribute over addition, \n  satisfying `x*(y+z) == x*y + x*z`.\n\nIt is preferred, but not required, that the class be a\nmathematical _field_. That is, in addition to the above:\n\n- every instance `x` such that `x!=0` should have a \n  multiplicative inverse `1\/x`, satisfying `x * 1\/x == 1`. \n\nFor numeric types which are not fields, for example, \n[[Integer]], there is still a division operation, which is\nunderstood to produce a [[remainder|Integral.remainder]].\nThe division operation should satisfy:\n\n- `x*y \/ y == x`\n\nfor any instance `y` other than `0`.\n\nFor numeric types which _are_ fields, division never\nproduces a remainder, and division should additionally \nsatisfy:\n\n- `x\/y * y == x`\n\nfor any instance `y` other than `0`.\n\nSome numeric types, for example complex numbers, do not \nhave a [[total order|Comparable]]. Numeric types with a \ntotal order also satisfy [[Scalar]]."],"by":["Gavin"]},"$m":{"times":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["The product of this number and the given number."]},"$nm":"times"},"divided":{"$t":{"$nm":"Other"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"formal":[],"see":["Integral"],"doc":["The quotient obtained by dividing this number by the \ngiven number. For integral numeric types, this \noperation results in a \n[[remainder|Integral.remainder]].\n\nWhen the given number is `0`, the additive identity,\nthe behavior depends on the numeric type:\n\n- For some numeric types, including [[Integer]], \n  division by `0` results in an exception.\n- For others, including [[Float]], it results in a \n  special value of the type, for example, [[infinity]]."]},"$nm":"divided"}},"$nm":"Numeric","$st":"Other"},"throws":{"$t":{"$pk":".","$nm":"ThrownExceptionAnnotation"},"$ps":[[{"$t":{"$pk":"ceylon.language.meta.declaration","$nm":"Declaration"},"$mt":"prm","$an":{"doc":["The [[Exception]] type that this thrown."]},"$nm":"type"},{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$def":1,"$an":{"doc":["A description, in Markdown syntax, of the circumstances \nthat cause this exception to be thrown."]},"$nm":"when"}]],"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to mark a program element that throws an \nexception."]},"$annot":1,"$nm":"throws"},"and":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"T"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"T"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"p"},{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"T"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"T"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"q"}],[{"$t":{"$nm":"T"},"$mt":"prm","$nm":"t"}]],"$mt":"m","$tp":[{"$nm":"T"}],"$an":{"shared":[],"doc":["Returns a function which is the logical \nconjunction of the given predicate functions."]},"$nm":"and"},"parseDigit":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Integer"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Character"},"$mt":"prm","$nm":"digit"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"radix"}]],"$mt":"m","$nm":"parseDigit"},"formal":{"$t":{"$pk":".","$nm":"FormalAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to mark a member whose implementation must be \nprovided by subtypes."]},"$annot":1,"$nm":"formal"},"byDecreasing":{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$nm":"Value"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$nm":"comparable"}],[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"y"}]],"$mt":"m","$tp":[{"$nm":"Element"},{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"}],"$pk":".","$nm":"Comparable"}],"$nm":"Value"}],"$an":{"shared":[],"see":["byIncreasing"],"doc":["A comparator which orders elements in decreasing order \naccording to the `Comparable` returned by the given \n`comparable()` function."]},"$nm":"byDecreasing"},"unzipEntries":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Item"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$pk":".","$nm":"Nothing"}]}]},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$tp":[{"$mt":"tp","$nm":"Item"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Item"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Tuple"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Entry"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"entries"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Key"},{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Item"}],"$an":{"shared":[],"doc":["Given a stream of entries, return two streams. The\nfirst stream produces the keys of the given entries, \nand the second stream produces the items of the given \nentries.\n\nThus:\n\n    entries[i]==unzipEntries(entries)[0][i]->unzipEntries(entries)[1][i]"]},"$nm":"unzipEntries"},"default":{"$t":{"$pk":".","$nm":"DefaultAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to mark a member whose implementation may be \nrefined by subtypes. Non-`default` declarations may not be \nrefined."]},"$annot":1,"$nm":"default"},"SequencedAnnotation":{"of":[{"$nm":"Value"}],"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Value"}],"$pk":".","$nm":"Sequential"},{"$mt":"tp","$nm":"ProgramElement"}],"$pk":".","$nm":"ConstrainedAnnotation"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"ProgramElement"}],"$pk":".","$nm":"SequencedAnnotation"}],"variance":"out","$nm":"Value"},{"$sts":[{"$pk":".","$nm":"Annotated"}],"$def":{"$pk":".","$nm":"Annotated"},"variance":"in","$nm":"ProgramElement"}],"$an":{"shared":[],"see":["Annotation"],"doc":["An annotation that may occur multiple times at a single program element, \nand only on certain program elemenets.\n\nA sequenced annotation is declared simply by having the annotation class\nsatisfy SequencedAnnotation instead of [[Annotation]]. For example \nthe following would only be allowed on `class` declarations, \nfunctions or methods:\n\n    alias ExecutableDeclaration \n           => ClassOrInterfaceDeclaration|FunctionDeclaration\n    \"Documents a pattern that the annotated element is particpating in\"\n    final annotation class Pattern(String name) \n            satisfies SequencedAnnotation<Pattern, ExecutableDeclaration> {\n    }\n\nAt runtime a [[ceylon.language.meta.declaration::Declaration]] instance \ncan be queried for its `SequencedAnnotation`s of a certain type using \n[[ceylon.language.meta::annotations]] or [[ceylon.language.meta::sequencedAnnotations]].\n"]},"$nm":"SequencedAnnotation","$st":"Value"},"AnnotationAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"AnnotationAnnotation"},{"comp":"u","$mt":"tp","$ts":[{"$pk":"ceylon.language.meta.declaration","$nm":"ClassDeclaration"},{"$pk":"ceylon.language.meta.declaration","$nm":"FunctionDeclaration"}]}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[annotation]]."]},"$annot":1,"$nm":"AnnotationAnnotation"},"minRadix":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$nm":"minRadix"},"String":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Character"}],"$pk":".","$nm":"List"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"}],"$pk":".","$nm":"Comparable"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"}],"$pk":".","$nm":"Summable"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$pk":".","$nm":"String"}],"$pk":".","$nm":"Ranged"}],"$ps":[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Character"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$hdn":1,"$mt":"prm","$an":{"shared":[],"doc":["The characters that form this string."]},"$nm":"characters"}],"$mt":"c","$an":{"shared":[],"final":[],"native":[],"doc":["A string of characters. Each character in the string is a \n[[32-bit Unicode character|Character]]. The internal \nUTF-16 encoding is hidden from clients.\n\nA string is a [[Category]] of its [[characters]], and of \nits substrings:\n\n    'w' in greeting \n    \"hello\" in greeting\n\nStrings are [[summable|Summable]]:\n\n    String greeting = \"hello\" + \" \" + \"world\";\n\nThey are efficiently [[iterable|Iterable]]:\n\n    for (char in \"hello world\") { ... }\n\nThey are [[lists|List]] of [[characters|Character]]:\n\n    value char = \"hello world\"[5];\n\nThey are [[ranged||Ranged]]:\n\n    String who = \"hello world\"[6...];\n\nNote that since `string[index]` evaluates to the optional \ntype `Character?`, it is often more convenient to write \n`string[index..index]`, which evaluates to a `String` \ncontaining a single character, or to the empty string \n`\"\"` if `index` refers to a position outside the string.\n\nIt is easy to use comprehensions to transform strings:\n\n    String { for (s in \"hello world\") if (s.letter) s.uppercased }\n\nSince a `String` has an underlying UTF-16 encoding, \ncertain operations are expensive, requiring iteration of \nthe characters of the string. In particular, [[size]]\nrequires iteration of the whole string, and `get()`,\n`span()`, and `segment()` require iteration from the \nbeginning of the string to the given index."],"by":["Gavin"]},"$m":{"clone":{"$t":{"$pk":".","$nm":"String"},"$mt":"m","$an":{"shared":[],"doc":["This string."],"actual":[]},"$nm":"clone"},"plus":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Returns the concatenation of this string with the\ngiven string."],"actual":[]},"$nm":"plus"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Character"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"native":[],"doc":["An iterator for the characters of the string."],"actual":[]},"$nm":"iterator"},"get":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Character"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Returns the character at the given index in the string, \nor `null` if the index is past the end of string. The \nfirst character in the string occurs at index zero. The \nlast character in the string occurs at index \n`string.size-1`."],"actual":[]},"$nm":"get"},"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Determines if the given object is a string, and if so, \nif this string has the same length, and the same \ncharacters, in the same order, as the given string."],"actual":[]},"$nm":"equals"},"segment":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Select the characters of this string beginning at the \ngiven index, returning a string no longer than the \ngiven length. If the portion of this string starting at \nthe given index is shorter than the given length, \nreturn the portion of this string from the given index \nuntil the end of this string. Otherwise, return a \nstring of the given length. If the start index is \nlarger than the last index of the string, return the \nempty string."],"actual":[]},"$nm":"segment"},"compare":{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Compare this string with the given string \nlexicographically, according to the Unicode code points\nof the characters."],"actual":[]},"$nm":"compare"},"longerThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"native":[],"see":["size"],"doc":["Determines if this string is longer than the given\nlength. This is a more efficient operation than\n`string.size>length`."],"actual":[]},"$nm":"longerThan"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Determines if the given object is a `String` and, if \nso, if it occurs as a substring of this string, or if \nthe object is a `Character` that occurs in this string. \nThat is to say, a string is considered a [[Category]] \nof its substrings and of its characters."],"actual":[]},"$nm":"contains"},"trimLeading":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Character"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate function that determines whether\na character should be trimmed"]},"$nm":"trimming"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["This string, after discarding the characters matching\nthe given predicate function from the beginning of the \nstring."],"actual":[]},"$nm":"trimLeading"},"repeat":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"times"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Returns a string formed by repeating this string the \ngiven number of times, or the empty string if\n`times<=0`."],"actual":[]},"$nm":"repeat"},"join":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"strings"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Join the given strings, using this string as a \nseparator."]},"$nm":"join"},"replace":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"substring"},{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"replacement"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Returns a string formed by replacing every occurrence \nin this string of the given substring with the given \nreplacement string, working from the start of this \nstring to the end."]},"$nm":"replace"},"terminal":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Select the last characters of the string, returning a \nstring no longer than the given length. If this string \nis shorter than the given length, return this string. \nOtherwise, return a string of the given length."],"actual":[]},"$nm":"terminal"},"shorterThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"native":[],"see":["size"],"doc":["Determines if this string is shorter than the given\nlength. This is a more efficient operation than\n`string.size>length`."],"actual":[]},"$nm":"shorterThan"},"spanTo":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"spanTo"},"trimTrailing":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Character"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate function that determines whether\na character should be trimmed"]},"$nm":"trimming"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["This string, after discarding the characters matching\nthe given predicate function from the end of the \nstring."],"actual":[]},"$nm":"trimTrailing"},"initial":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Select the first characters of this string, returning a \nstring no longer than the given length. If this string \nis shorter than the given length, return this string. \nOtherwise, return a string of the given length."],"actual":[]},"$nm":"initial"},"replaceFirst":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"substring"},{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"replacement"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Returns a string formed by replacing the first \noccurrence in this string of the given substring, if\nany, with the given replacement string."]},"$nm":"replaceFirst"},"split":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Character"},"$mt":"prm","$nm":"ch"}]],"$mt":"prm","$pt":"f","$def":1,"$an":{"doc":["A predicate that determines if a character is a\nseparator characters at which to split. Default \nto split at any \n[[whitespace|Character.whitespace]] character."]},"$nm":"splitting"},{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"prm","$def":1,"$an":{"doc":["Specifies that the separator characters\noccurring in the string should be discarded. If \n`false`, they will be included in the resulting \niterator."]},"$nm":"discardSeparators"},{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"prm","$def":1,"$an":{"doc":["Specifies that the separator tokens should be \ngrouped eagerly and not be treated as \nsingle-character tokens. If `false` each \nseparator token will be of size `1`."]},"$nm":"groupSeparators"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Split the string into tokens, using the given predicate\nto determine which characters are separator characters.\n\n    value pathElements = path.split('\/'.equals);"]},"$nm":"split"},"slice":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$pk":".","$nm":"String"},{"comp":"u","$ts":[{"$pk":".","$nm":"String"},{"$pk":".","$nm":"Nothing"}]}]},{"$mt":"tp","$pk":".","$nm":"String"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$pk":".","$nm":"String"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$pk":".","$nm":"String"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Tuple"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Return two strings, the first containing the characters\nthat occur before the given [[index]], the second with\nthe characters that occur after the given `index`. If \nthe given `index` is outside the range of indices of \nthis string, one of the returned strings will be empty."]},"$nm":"slice"},"trim":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Character"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate function that determines whether\na character should be trimmed"]},"$nm":"trimming"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["This string, after discarding the characters matching\nthe given predicate function from the beginning and end \nof the string.\n\n    value trimmed = name.trim('_'.equals);"],"actual":[]},"$nm":"trim"},"spanFrom":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"spanFrom"},"span":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"from"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"to"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Select the characters between the given indexes. If the \nstart index is the same as the end index, return a \nstring with a single character. If the start index is \nlarger than the end index, return the characters in the \nreverse order from the order in which they appear in \nthis string. If both the start index and the end index \nare larger than the last index in the string, return \nthe empty string. Otherwise, if the last index is \nlarger than the last index in the sequence, return all \ncharacters from the start index to last character of \nthe string."],"actual":[]},"$nm":"span"}},"$at":{"normalized":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["This string, after collapsing strings of \n[[whitespace|Character.whitespace]] into single space \ncharacters and discarding whitespace from the beginning \nand end of the string."]},"$nm":"normalized"},"lowercased":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["This string, with all characters in lowercase."]},"$nm":"lowercased"},"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"hash"},"uppercased":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["This string, with all characters in uppercase."]},"$nm":"uppercased"},"coalesced":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"doc":["This string."],"actual":[]},"$nm":"coalesced"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"see":["longerThan","shorterThan"],"doc":["The length of the string (the number of characters it \ncontains). In the case of the empty string, the string \nhas length zero. Note that this operation is \npotentially costly for long strings, since the\nunderlying representation of the characters uses a\nUTF-16 encoding. Use of [[longerThan]] or \n[[shorterThan]] is highly recommended."],"actual":[]},"$nm":"size"},"lastIndex":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Integer"}]},"$mt":"g","$an":{"shared":[],"doc":["The index of the last character in the string, or \n`null` if the string has no characters. Note that this \noperation is potentially costly for long strings, since \nthe underlying representation of the characters uses a \nUTF-16 encoding."],"actual":[]},"$nm":"lastIndex"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"doc":["This string."],"actual":[]},"$nm":"string"},"empty":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"see":["size"],"doc":["Determines if this string has no characters, that is, \nif it has zero `size`. This is a _much_ more efficient \noperation than `string.size==0`."],"actual":[]},"$nm":"empty"},"lines":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"String"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"g","$an":{"shared":[],"native":[],"doc":["Split the string into lines of text."]},"$nm":"lines"},"rest":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The rest of the string, without the first element."],"actual":[]},"$nm":"rest"},"trimmed":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"native":[],"doc":["This string, after discarding \n[[whitespace|Character.whitespace]] from the beginning \nand end of the string."]},"$nm":"trimmed"},"reversed":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["This string, with the characters in reverse order."],"actual":[]},"$nm":"reversed"},"characters":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Character"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"a","$an":{"shared":[],"doc":["The characters that form this string."]},"$nm":"characters"}},"$nm":"String"},"Obtainable":{"$mt":"i","$an":{"shared":[],"doc":["Abstract supertype of instances which are used as resources\nin a `try` statement and [[released|release]]\nwhether or not an exception propagates out of the `try` block.\nUnlike [[Destroyable]] a single `Obtainable` instance can be \nreused between `try` statements.\n\nAlthough it is possible to use `Obtainable` instances outside of a `try` \nstatement this is not recommended.\n\nClasses which satisfy `Obtainable` may impose specific constraints on \nthe ordering and nesting of invocations of `obtain()` and `release()`. \nFor example it may be not be allowed to invoke `obtain()` on a \nresource that has already been `obtain()`ed. \nThose methods should throw an [[AssertionError]] when such \nconstraints are broken.\n"]},"$m":{"obtain":{"$t":{"$pk":".","$nm":"Anything"},"$mt":"m","$an":{"shared":[],"formal":[],"throws":["AssertionError","If an illegal state is detected"],"doc":["Prepares the instance for use.\nIf an exception propagates from `obtain()` then `release()` \nwill not be called."]},"$nm":"obtain"},"release":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Throwable"}]},"$mt":"prm","$an":{"doc":["The error propagating out of the `try` block, or null"]},"$nm":"error"}]],"$mt":"m","$an":{"shared":[],"formal":[],"throws":["AssertionError","If an illegal state is detected"],"doc":["Releases the instance after use."]},"$nm":"release"}},"$nm":"Obtainable"},"parseBoolean":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Boolean"}]},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"string"}]],"$mt":"m","$an":{"shared":[],"doc":["The `Boolean` value of the given string representation of a boolean value,\nor `null` if the string does not represent a boolean value.\n\nRecognized values are \"true\", \"false\"."]},"$nm":"parseBoolean"},"identical":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Identifiable"},"$mt":"prm","$an":{"doc":["An object with well-defined identity."]},"$nm":"x"},{"$t":{"$pk":".","$nm":"Identifiable"},"$mt":"prm","$an":{"doc":["A second object with well-defined identity."]},"$nm":"y"}]],"$mt":"m","$an":{"shared":[],"see":["identityHash"],"doc":["Determine if the arguments are identical. Equivalent to\n`x===y`. Only instances of `Identifiable` have \nwell-defined identity."]},"$nm":"identical"},"late":{"$t":{"$pk":".","$nm":"LateAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to disable definite initialization analysis for \na reference."]},"$annot":1,"$nm":"late"},"InitializationError":{"super":{"$pk":".","$nm":"AssertionError"},"$ps":[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"description"}],"$mt":"c","$an":{"shared":[],"see":["late"],"doc":["[[Assertion failure|AssertionError]] that occurs when a \nvalue reference could not be initialized, including when:\n\n- a toplevel value could not be initialized due to \n  recursive dependencies upon other toplevel values, \n- an uninitialized [[late]] value is evaluated, \n- an initialized `late` but non-`variable` value is\n  reassigned."]},"$at":{"description$b1z8en":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$nm":"description"}},"$nm":"InitializationError"},"emptyIterator":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$an":{"shared":[],"doc":["An iterator that returns no elements."]},"$m":{"next":{"$t":{"$pk":".","$nm":"Finished"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$nm":"emptyIterator"},"printStackTrace":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$pk":".","$nm":"Throwable"},"$mt":"prm","$nm":"exception"},{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"string"}]],"$mt":"prm","$pt":"f","$def":1,"$an":{"doc":["A function that prints the given string.\nDefaults to [[process.writeError]]."]},"$nm":"write"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Print the stack trace of the given [[Exception]] using the \ngiven [[function|write]], or to \n[[standard error|process.writeError]] if no function is \nspecified."]},"$nm":"printStackTrace"},"parseFloat":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Float"}]},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"string"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["The `Float` value of the given string representation of \na decimal number or `null` if the string does not \nrepresent a decimal number.\n\nThe syntax accepted by this method is the same as the \nsyntax for a `Float` literal in the Ceylon language \nexcept that it may optionally begin with a sign \ncharacter (`+` or `-`)."]},"$nm":"parseFloat"},"Anything":{"abstract":1,"of":[{"$pk":".","$nm":"Object"},{"$pk":".","$nm":"Null"}],"$mt":"c","$an":{"abstract":[],"shared":[],"doc":["The abstract supertype of all types. A value of type \n`Anything` may be a definite value of type `Object`, or it \nmay be the [[null]] value. A method declared `void` is \nconsidered to have the return type `Anything`.\n\nNote that the type `Nothing`, representing the intersection \nof all types, is a subtype of all types."],"by":["Gavin"]},"$nm":"Anything"},"VariableAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"VariableAnnotation"},{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"ValueDeclaration"}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[variable]]."]},"$annot":1,"$nm":"VariableAnnotation"},"Exception":{"super":{"$pk":".","$nm":"Throwable"},"$ps":[{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"String"}]},"$mt":"prm","$def":1,"$nm":"description"},{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Throwable"}]},"$mt":"prm","$def":1,"$nm":"cause"}],"$mt":"c","$an":{"shared":[],"native":[],"doc":["The supertype of all unexpected transient failures. \n\nA subclass of `Exception`\nrepresents a more specific kind of problem, and may define \nadditional attributes which propagate information about \nproblems of that kind. Exceptions are usually \nusually unrecoverable from the point of view of the \nimmediate caller of an operation. (For example, \ntransaction rollback, or loss of connectivity.)"],"by":["Gavin","Tom"]},"$at":{"description$pjrn76":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"String"}]},"$mt":"a","$nm":"description"},"cause$unfagj":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Throwable"}]},"$mt":"a","$nm":"cause"}},"$nm":"Exception"},"operatingSystem":{"super":{"$pk":".","$nm":"Basic"},"$mt":"o","$an":{"shared":[],"native":[],"doc":["Operating System on which the current process is running."]},"$at":{"newline":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The line ending character sequence on this platform."]},"$nm":"newline"},"fileSeparator":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The character used on this platform to separate the folder\/file elements of a path."]},"$nm":"fileSeparator"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"},"name":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Returns the name of the operating system this process is running on."]},"$nm":"name"},"pathSeparator":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The character used on this platform to use as a separator between several paths in a list of paths."]},"$nm":"pathSeparator"},"version":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["Returns the version of the operating system this process is running on."]},"$nm":"version"}},"$nm":"operatingSystem"},"internalSort":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"y"}]],"$mt":"prm","$pt":"f","$nm":"comparing"},{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$tp":[{"$nm":"Element"}],"$an":{"native":[]},"$nm":"internalSort"},"OverflowException":{"super":{"$pk":".","$nm":"Exception"},"$mt":"c","$an":{"shared":[],"doc":["Thrown when a mathematical operation caused a number to \noverflow from its bounds, or when a numeric narrowing\nconversion fails because the number cannot be represented\nwithin the bounds of the narrower type.\n\nNote that:\n\n- arithmetic operations on [[Integer]]s result in _silent_ \n  overflow or loss of precision, and thus never \n  produce an `OverflowException`, and, \n- likewise, arithmetic operations on [[Float]] produce the \n  value [[infinity]] instead of overflowing."]},"$nm":"OverflowException"},"unzip":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$tp":[{"$mt":"tp","$nm":"Head"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Tail"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$pk":".","$nm":"Nothing"}]}]},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Head"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$tp":[{"$mt":"tp","$nm":"Tail"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Tail"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Tuple"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Head"}]},{"$mt":"tp","$nm":"Head"},{"$mt":"tp","$nm":"Tail"}],"$pk":".","$nm":"Tuple"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"tuples"}]],"$mt":"m","$tp":[{"$nm":"Element"},{"$nm":"Head"},{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"}],"$nm":"Tail"}],"$an":{"shared":[],"doc":["Given a stream of tuples, return two streams. The\nfirst stream produces the first elements of the\ngiven tuples, and the second stream produces the\nremaining elements of the given tuples.\n\nThus:\n\n    tuples[i]==[unzip(tuples)[0][i],*unzip(tuples)[1][i]]"]},"$nm":"unzip"},"parseInteger":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Integer"}]},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"string"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$def":1,"$nm":"radix"}]],"$mt":"m","$an":{"shared":[],"throws":["AssertionError","if `radix` is not between `minRadix` and `maxRadix`"],"doc":["The `Integer` value of the given string representation \nof an integer, or `null` if the string does not represent \nan integer or if the mathematical integer it represents \nis too large in magnitude to be represented by an \n`Integer`.\n\nThe syntax accepted by this function is the same as the \nsyntax for an `Integer` literal in the Ceylon language \nexcept that it may optionally begin with a sign \ncharacter (`+` or `-`).\n\nA radix can be given in input to specify what is the base\nto take in consideration for the parsing. radix has to be\nbetween `minRadix` and `maxRadix` included.\nThe list of available digits starts from `0` to `9` followed\nby `a` to `z`.\nWhen parsing in a specific base, the first `radix` digits\nfrom the available digits list can be used.\nThis function is not case sensitive; `a` and `A` both\ncorrespond to the `a` digit which decimal value is `10`.\n \n`_` character can be used to separate groups of digits\nfor bases 2, 10 and 16 as for `Integer` literal in the\nCeylon language. For any other bases, no grouping is\nsupported."]},"$nm":"parseInteger"},"sum":{"$t":{"$nm":"Value"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"values"}]],"$mt":"m","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"}],"$pk":".","$nm":"Summable"}],"$nm":"Value"}],"$an":{"shared":[],"see":["product"],"doc":["Given a nonempty stream of [[Summable]] values, return the \nsum of the values."]},"$nm":"sum"},"runtime":{"super":{"$pk":".","$nm":"Basic"},"$mt":"o","$an":{"shared":[],"native":[],"doc":["Machine (Virtual or not) on which the current process is running.\n\nHolds information about runtime name, version and about inherent limitations\nlike minimum\/maximum values that can be represented by the runtime."]},"$at":{"maxArraySize":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"see":["Array"],"doc":["The maximum size of an [[Array]] that is possible for this runtime.\nNote that this is a theoretical limit only. In practice it is usually\nimpossible to allocate an array of this size, due to memory constraints."]},"$nm":"maxArraySize"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"string"},"name":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The name of the runtime \/ virtual machine this process is running on."]},"$nm":"name"},"integerSize":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"see":["Integer"],"doc":["The number of bits used to represent the value of an [[Integer]]."]},"$nm":"integerSize"},"maxIntegerValue":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"see":["Integer"],"doc":["The maximum [[Integer]] value that can be represented by the runtime.\n\nIt is the maximum `Integer` that can be distinguished from its predecessor\nusing below formula:\n\n`Integer(n+1) = Integer(n) + 1` with `Integer(0) = 0`"]},"$nm":"maxIntegerValue"},"integerAddressableSize":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The number of bits of [[Integer]] instances \nwhich may be manipulated via the methods inherited from [[Binary]]."]},"$nm":"integerAddressableSize"},"minIntegerValue":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"see":["Integer"],"doc":["The minimum [[Integer]] value that can be represented by the runtime.\n\nIt is the minimum `Integer` that can be distinguished from its successor\nusing below formula:\n\n`Integer(n-1) = Integer(n) - 1` with `Integer(0) = 0`"]},"$nm":"minIntegerValue"},"version":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"doc":["The version of the runtime \/ virtual machine this process is running on."]},"$nm":"version"}},"$nm":"runtime"},"infinity":{"$t":{"$pk":".","$nm":"Float"},"$mt":"a","$an":{"shared":[],"doc":["An instance of [[Float]] representing positive infinity, \n∞, the result of dividing a positive number by zero. \nNegative infinity, -∞, the result of dividing a\nnegative number by zero, is the additive inverse `-infinity`.\n\nNote that any floating-point computation that results in a\npositive value too large to be represented as a `Float` is \n\"rounded up\" to `infinity`. Likewise, any floating-point \ncomputation that yields a negative value whose magnitude is\ntoo large to be represented as a `Float` is \"rounded down\" \nto `-infinity`."]},"$nm":"infinity"},"smaller":{"super":{"$pk":".","$nm":"Comparison"},"$mt":"o","$an":{"shared":[],"doc":["The value is smaller than the given value."]},"$nm":"smaller"},"computeDigitGroupingSize":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Integer"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"radix"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"digitIndex"},{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"string"},{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"ii"}]],"$mt":"m","$nm":"computeDigitGroupingSize"},"DefaultAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"DefaultAnnotation"},{"comp":"u","$mt":"tp","$ts":[{"$pk":"ceylon.language.meta.declaration","$nm":"FunctionOrValueDeclaration"},{"$pk":"ceylon.language.meta.declaration","$nm":"ClassOrInterfaceDeclaration"}]}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[default]]."]},"$annot":1,"$nm":"DefaultAnnotation"},"Iterable":{"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Object"}],"$pk":".","$nm":"Category"}],"$mt":"i","$tp":[{"variance":"out","$nm":"Element"},{"$sts":[{"$pk":".","$nm":"Null"}],"$def":{"$pk":".","$nm":"Null"},"variance":"out","$nm":"Absent"}],"$an":{"shared":[],"see":["Collection"],"doc":["Abstract supertype of [[categories|Category]] whose \nelements may be iterated. Iterable categories are often \ncalled _streams_. A stream need not be finite, but its \nelements must be countable. That is, for any given \nelement of the stream, every iterator of the stream must \neventually return the element, even if the iterator \nitself is not exhaustable. \n\nA given stream might not have a well-defined order, and \nso the order in which elements are produced by the \nstream's iterator may not be _stable_. That is, the order \nmay be different for two different iterators of the \nstream.\n\nThe type `Iterable<Element,Null>`, usually abbreviated\n`{Element*}` represents a possibly-empty iterable \ncontainer. The type `Iterable<Element,Nothing>`, usually \nabbreviated `{Element+}` represents a nonempty iterable \ncontainer.\n\nA value list in braces produces a new instance of \n`Iterable`:\n\n    {String+} words = { \"hello\", \"world\" };\n\nAn instance of `Iterable` may be iterated using a `for`\nloop:\n\n    for (c in \"hello world\") { ... }\n\nComprehensions provide a convenient syntax for \ntransforming streams:\n\n    {Integer+} lengths = { for (w in words) w.size };\n\n`Iterable` and its subtypes define various operations\nthat return other iterable objects. Such operations come \nin two flavors:\n\n- _Lazy_ operations return a *view* of the receiving\n  iterable object. If the underlying iterable object is\n  mutable, then changes to the underlying object will be \n  reflected in the resulting view. Lazy operations are \n  usually efficient, avoiding memory allocation or\n  iteration of the receiving iterable object.\n- _Eager_ operations return an immutable object. If the\n  receiving iterable object is mutable, changes to this\n  object will not be reflected in the resulting immutable\n  object. Eager operations are often expensive, involving\n  memory allocation and iteration of the receiving \n  iterable object.\n\nLazy operations are preferred, because they can be \nefficiently chained. For example:\n\n    string.filter((Character c) => c.letter)\n          .map((Character c) => c.uppercased)\n\nis much less expensive than:\n\n    string.select((Character c) => c.letter)\n          .collect((Character c) => c.uppercased)\n\nFurthermore, it is always easy to produce a new \nimmutable iterable object given the view produced by a\nlazy operation. For example:\n\n    [ *string.filter((Character c) => c.letter)\n          .map((Character c) => c.uppercased) ]\n\nLazy operations normally return an instance of `Iterable`, \nor even a [[List]], [[Map]], or [[Set]].\n\nHowever, there are certain scenarios where an eager \noperation is more useful, more convenient, or no more \nexpensive than a lazy operation, including:\n\n- sorting operations, which are eager by nature,\n- operations which preserve emptiness\/nonemptiness of\n  the receiving iterable object.\n\nEager operations normally return a \n[[sequence|Sequential]]."],"by":["Gavin"]},"$m":{"cycle":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"times"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["cycled","repeat"],"doc":["Produces a stream formed by repeating the elements of \nthis stream the [[given number of times|times]], or an \nempty stream if `times<=0`."]},"$nm":"cycle","$o":{"iterable$tqn758":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$15exbu":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"iter$4qon2b":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"var":1,"$mt":"a","$an":{"shared":[],"actual":[],"variable":[]},"$nm":"iter"},"count$9g6x3w":{"$t":{"$pk":".","$nm":"Integer"},"var":1,"$mt":"a","$an":{"variable":[]},"$nm":"count"}},"$nm":"iterator"}}}},"$at":{"orig$73fmk0":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$mt":"g","$nm":"orig"}},"$nm":"iterable"}}},"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"formal":[],"doc":["An iterator for the elements belonging to this stream."]},"$nm":"iterator"},"sort":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"x"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"y"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The function comparing pairs of elements."]},"$nm":"comparing"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["byIncreasing","byDecreasing"],"doc":["A sequence containing the elements of this stream, \nsorted according to a [[comparator function|comparing]] \nimposing a partial order upon the elements.\n\nFor convenience, the functions [[byIncreasing]] and \n[[byDecreasing]] produce suitable comparator functions:\n\n    \"Hello World!\".sort(byIncreasing(Character.lowercased))\n\nThis operation is eager by nature."]},"$nm":"sort"},"count":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate satisfied by the elements to\nbe counted."]},"$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Produces the number of elements in this stream that \nsatisfy the [[given predicate function|selecting]].\nFor an infinite stream, this operation never \nterminates."]},"$m":{"selecting$r2ylu6":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"doc":["The predicate satisfied by the elements to\nbe counted."]},"$nm":"selecting"}},"$nm":"count"},"takingWhile":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"take"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Produces a stream containing the leading elements of \nthis stream until the [[given predicate function|take]] \nreturns `false`."]},"$m":{"take$gcuo61":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"m","$nm":"take"}},"$nm":"takingWhile","$o":{"iterable$1denwr":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$lkmbyf":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"alive$la287b":{"$t":{"$pk":".","$nm":"Boolean"},"var":1,"$mt":"a","$an":{"shared":[],"actual":[],"variable":[]},"$nm":"alive"}},"$nm":"iterator"}}}},"$nm":"iterable"}}},"select":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate the elements must satisfy."]},"$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["filter"],"doc":["Produces a sequence containing all elements of this \nstream that satisfy the [[given predicate|selecting]].\nAn eager counterpart to [[filter]]."]},"$nm":"select"},"longerThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["size"],"doc":["Determines if this stream has more elements than the \ngiven [[length]]. This is an efficient operation for\nstreams with many elements."]},"$nm":"longerThan"},"by":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"step"}]],"$mt":"m","$an":{"shared":[],"default":[],"throws":["AssertionError","if the given step size is nonpositive, \ni.e. `step<1`"],"doc":["Produces a stream containing every [[step]]th element \nof this stream. If the step size is `1`, the resulting\nstream contains the same elements as this stream.\n\nFor example, the expression\n\n    (0..10).by(3)\n\nresults in the stream `{ 0, 3, 6, 9 }`.\n\nThe step size must be greater than zero."]},"$nm":"by","$o":{"iterable$apgy94":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$6967iy":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$nm":"iterator"}}}},"$nm":"iterable"}}},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$nm":"contains"},"repeat":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"times"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["cycle"],"doc":["Produces a list formed by repeating the elements of \nthis stream the [[given number of times|times]], or an \nempty list if `times<=0`. An eager counterpart to \n[[cycle]]."]},"$nm":"repeat"},"every":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate that all elements must \nsatisfy."]},"$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if all elements of this stream satisfy the \n[[given predicate function|selecting]]."]},"$m":{"selecting$sdgn1e":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"m","$an":{"doc":["The predicate that all elements must \nsatisfy."]},"$nm":"selecting"}},"$nm":"every"},"fold":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"initial"},{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"partial"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The accumulating function that accepts an\nintermediate result, and the next element."]},"$nm":"accumulating"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"default":[],"doc":["The result of applying the [[given accumulating \nfunction|accumulating]] to each element of this stream \nin turn.\n\nFor example, the expression\n\n    (1..100).fold(0, plus<Integer>)\n\nresults in the integer `5050`."]},"$m":{"accumulating$v516ij":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Result"},"$mt":"prm","$nm":"partial"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"m","$an":{"doc":["The accumulating function that accepts an\nintermediate result, and the next element."]},"$nm":"accumulating"}},"$nm":"fold"},"defaultNullElements":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"comp":"i","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Object"}]},{"$nm":"Default"}]},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$nm":"Default"},"$mt":"prm","$an":{"doc":["A default value that replaces `null` elements."]},"$nm":"defaultValue"}]],"$mt":"m","$tp":[{"$nm":"Default"}],"$an":{"shared":[],"default":[],"doc":["Produces a stream containing the elements of this \nstream, replacing every `null` element with the [[given \ndefault value|defaultValue]]. The resulting stream does \nnot have the value `null`."]},"$nm":"defaultNullElements"},"taking":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"take"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Produces a stream containing the first [[take]]\nelements of this stream.\n\nIf the specified number of elements to take is larger \nthan the number of elements of this stream, the \nresulting stream contains the same elements as this \nstream. If the specified number of elements to take is\nfewer than one, the resulting stream has no elements."]},"$nm":"taking","$o":{"iterable$5dvy9n":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$g1dzdj":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"i$m08yxx":{"$t":{"$pk":".","$nm":"Integer"},"var":1,"$mt":"a","$an":{"variable":[]},"$nm":"i"}},"$nm":"iterator"}}}},"$at":{"first":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"first"}},"$nm":"iterable"}}},"reduce":{"$t":{"comp":"u","$ts":[{"$nm":"Result"},{"$nm":"Element"},{"$nm":"Absent"}]},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"comp":"u","$ts":[{"$nm":"Result"},{"$nm":"Element"}]},"$mt":"prm","$nm":"partial"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The accumulating function that accepts an\nintermediate result, and the next element."]},"$nm":"accumulating"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"default":[],"doc":["The result of applying the [[given accumulating \nfunction|accumulating]] to each element of this stream \nin turn.\n\nFor example, the expression\n\n    (1..100).reduce(plus<Integer>)\n\nresults in the integer `5050`."]},"$m":{"accumulating$hmg54e":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"comp":"u","$ts":[{"$nm":"Result"},{"$nm":"Element"}]},"$mt":"prm","$nm":"partial"},{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"m","$an":{"doc":["The accumulating function that accepts an\nintermediate result, and the next element."]},"$nm":"accumulating"}},"$nm":"reduce"},"following":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$nm":"head"}]],"$mt":"m","$tp":[{"$nm":"Other"}],"$an":{"shared":[],"default":[],"doc":["Produces a stream with a [[given initial element|head]], \nfollowed by the elements of this stream."]},"$nm":"following","$o":{"cons$o5wpzq":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]},{"$mt":"tp","$pk":".","$nm":"Nothing"}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$hvjwys":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$nm":"Other"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"first$9x4vmp":{"$t":{"$pk":".","$nm":"Boolean"},"var":1,"$mt":"a","$an":{"shared":[],"actual":[],"variable":[]},"$nm":"first"}},"$nm":"iterator"}}}},"$nm":"cons"}}},"chain":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]},{"comp":"i","$mt":"tp","$ts":[{"$nm":"Absent"},{"$nm":"OtherAbsent"}]}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"},{"$mt":"tp","$nm":"OtherAbsent"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$tp":[{"$nm":"Other"},{"$sts":[{"$pk":".","$nm":"Null"}],"$nm":"OtherAbsent"}],"$an":{"shared":[],"default":[],"doc":["The elements of this stream, in the order in which they \noccur in this stream, followed by the elements of the \n[[given stream|other]] in the order in which they occur \nin the given stream."]},"$nm":"chain","$o":{"chained$xefe59":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]},{"comp":"i","$mt":"tp","$ts":[{"$nm":"Absent"},{"$nm":"OtherAbsent"}]}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator"}},"$nm":"chained"}}},"shorterThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["size"],"doc":["Determines if this stream has fewer elements than the \ngiven [[length]]. This is an efficient operation for \nstreams with many elements."]},"$nm":"shorterThan"},"skippingWhile":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"skip"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Produces a stream containing the elements of this \nstream, after skipping the leading elements until the \n[[given predicate function|skip]] returns `false`."]},"$m":{"skip$b2g5wk":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"m","$nm":"skip"}},"$nm":"skippingWhile","$o":{"iterable$pleiju":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$7zo1h2":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"first$38yxld":{"$t":{"$pk":".","$nm":"Boolean"},"var":1,"$mt":"a","$an":{"shared":[],"actual":[],"variable":[]},"$nm":"first"}},"$nm":"iterator"}}}},"$nm":"iterable"}}},"any":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate that at least one element \nmust satisfy."]},"$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if there is at least one element of this \nstream that satisfies the [[given predicate \nfunction|selecting]]."]},"$m":{"selecting$8r086v":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"e"}]],"$mt":"m","$an":{"doc":["The predicate that at least one element \nmust satisfy."]},"$nm":"selecting"}},"$nm":"any"},"map":{"$t":{"$tp":[{"$mt":"tp","$nm":"Result"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The mapping to apply to the elements."]},"$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"default":[],"see":["collect"],"doc":["Produces a stream containing the results of applying \nthe [[given mapping|collecting]] to the elements of to \nthis stream.\n\nFor example, the expression\n\n    (0..4).map(10.power)\n\nresults in the stream `{ 1, 10, 100, 1000, 10000 }`."]},"$nm":"map"},"findLast":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate the element must satisfy."]},"$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The last element of this stream which satisfies the \n[[given predicate function|selecting]], if any, or \n`null` otherwise."]},"$m":{"selecting$qzq7rm":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"m","$an":{"doc":["The predicate the element must satisfy."]},"$nm":"selecting"}},"$nm":"findLast"},"skipping":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"skip"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Produces a stream containing the elements of this \nstream, after skipping the first [[skip]] elements\nproduced by its iterator.\n\nIf this stream does not contain more elements than the \nspecified number of elements to skip, the resulting \nstream has no elements. If the specified number of \nelements to skip is zero or fewer, the resulting stream \ncontains the same elements as this stream."]},"$nm":"skipping","$o":{"iterable$i9dupy":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator"}},"$nm":"iterable"}}},"filter":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate the elements must satisfy."]},"$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["select"],"doc":["Produces a stream containing the elements of this \nstream that satisfy the [[given predicate \nfunction|selecting]].\n\nFor example, the expression\n\n    (1..100).filter(13.divides)\n\nresults in the stream `{ 13, 26, 39, 52, 65, 78, 91 }`."]},"$nm":"filter"},"find":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate the element must satisfy."]},"$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The first element of this stream which satisfies the \n[[given predicate function|selecting]], if any, or \n`null` otherwise."]},"$m":{"selecting$j6nqlo":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"m","$an":{"doc":["The predicate the element must satisfy."]},"$nm":"selecting"}},"$nm":"find"},"collect":{"$t":{"$tp":[{"$mt":"tp","$nm":"Result"}],"$pk":".","$nm":"Sequential"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The transformation applied to the elements."]},"$nm":"collecting"}]],"$mt":"m","$tp":[{"$nm":"Result"}],"$an":{"shared":[],"default":[],"see":["map"],"doc":["Produces a sequence containing the results of applying \nthe [[given mapping|collecting]] to the elements of \nthis stream. An eager counterpart to [[map]]."]},"$nm":"collect"}},"$at":{"cycled":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$mt":"g","$an":{"shared":[],"default":[],"see":["cycle"],"doc":["An infinite stream that produces the elements of this \nstream, repeatedly.\n\nFor example, the expression\n\n    {6, 9}.cycled.taking(5)\n\nevaluates to the stream `{ 6, 9, 6, 9, 6 }`."]},"$nm":"cycled","$o":{"iterable$wvnke4":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$cxriy6":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"iter$iqbxnv":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"var":1,"$mt":"a","$an":{"shared":[],"actual":[],"variable":[]},"$nm":"iter"}},"$nm":"iterator"}}}},"$at":{"orig$ki8ey0":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$mt":"g","$nm":"orig"}},"$nm":"iterable"}}},"last":{"$t":{"comp":"u","$ts":[{"$nm":"Absent"},{"$nm":"Element"}]},"$mt":"g","$an":{"shared":[],"default":[],"doc":["The last element returned by the iterator, if any, or \n`null` if this stream is empty. In the case of an \ninfinite stream, this operation never terminates;\nfurthermore, this default implementation iterates all \nelements, which might be very expensive."]},"$nm":"last"},"indexed":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"comp":"i","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Object"}]}],"$pk":".","$nm":"Entry"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["All entries of form `index->element` where `index` is \nthe position at which `element` occurs, for every\nnon-null element of this stream, ordered by increasing \n`index`. For a null element at a given position in this \nstream, there is no entry with the corresponding index \nin the resulting stream.\n\nFor example, the expression \n\n    { \"hello\", null, \"world\" }.indexed\n\nresults in the stream `{ 0->\"hello\", 2->\"world\" }`."]},"$nm":"indexed","$o":{"indexes$yhfzf7":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"comp":"i","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Object"}]}],"$pk":".","$nm":"Entry"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"comp":"i","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Object"}]}],"$pk":".","$nm":"Entry"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$79c00r":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"comp":"i","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Object"}]}],"$pk":".","$nm":"Entry"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"comp":"i","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Object"}]}],"$pk":".","$nm":"Entry"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"i$5tf4cp":{"$t":{"$pk":".","$nm":"Integer"},"var":1,"$mt":"a","$an":{"variable":[]},"$nm":"i"},"iter$3fjcvm":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"a","$nm":"iter"}},"$nm":"iterator"}}}},"$at":{"orig$i2xds1":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$mt":"g","$nm":"orig"}},"$nm":"indexes"}}},"sequence":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["A [[sequence|Sequential]] containing all the elements \nof this stream, in the same order they occur in this\nstream."]},"$nm":"sequence"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["A string of form `\"{ x, y, z }\"` where `x`, `y`, and \n`z` are the `string` representations of the elements of \nthis collection, as produced by the iterator of the \nstream, or the string `\"{}\"` if this stream is empty. \nIf the stream is very long, the list of elements might \nbe truncated, as indicated by an ellipse."],"actual":[]},"$nm":"string"},"coalesced":{"$t":{"$tp":[{"comp":"i","$mt":"tp","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Object"}]},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["The non-null elements of this stream, in the order in\nwhich they occur in this stream. For null elements of \nthe original stream, there is no entry in the resulting \nstream."]},"$nm":"coalesced"},"empty":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["Determines if the stream is empty, that is to say, if \nthe iterator returns no elements."]},"$nm":"empty"},"rest":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"g","$an":{"shared":[],"default":[],"see":["first"],"doc":["A stream containing all but the first element of this \nstream. For a stream with an unstable iteration order, \na different value might be produced each time `rest` is\nevaluated.\n\nTherefore, if the stream `i` has an unstable iteration\norder, the stream `{ i.first, *i.rest }` might not have\nthe same elements as `i`."]},"$nm":"rest"},"first":{"$t":{"comp":"u","$ts":[{"$nm":"Absent"},{"$nm":"Element"}]},"$mt":"g","$an":{"shared":[],"default":[],"doc":["The first element returned by the iterator, if any, or \n`null` if this stream is empty. For a stream with an\nunstable iteration order, a different value might be\nproduced each time `first` is evaluated."]},"$nm":"first"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["The number of elements returned by the iterator of this \nstream, if the iterator terminates. In the case of an \ninfinite stream, this operation never terminates."]},"$nm":"size"}},"$nm":"Iterable"},"flatten":{"$t":{"$tp":[{"$mt":"tp","$nm":"Return"},{"$mt":"tp","$nm":"Args"}],"$pk":".","$nm":"Callable"},"$ps":[[{"$t":{"$nm":"Return"},"$ps":[[{"$t":{"$nm":"Args"},"$mt":"prm","$nm":"tuple"}]],"$mt":"prm","$pt":"f","$nm":"tupleFunction"}]],"$mt":"m","$tp":[{"$nm":"Return"},{"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"Sequential"}],"$nm":"Args"}],"$an":{"shared":[],"native":[],"see":["unflatten"],"doc":["Given a function with a single parameter of tuple type \n`[P1, P2, ..., Pn]`, return a function with multiple \nparameters of type `P1`, `P2`, ..., `Pn`.\n\nThat is, if `fun` has type `W([X,Y,Z])` then `flatten(fun)` \nhas type `W(X,Y,Z)`."]},"$nm":"flatten"},"mapPairs":{"$t":{"$tp":[{"$mt":"tp","$nm":"Result"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"FirstArgument"},"$mt":"prm","$nm":"firstArg"},{"$t":{"$nm":"SecondArgument"},"$mt":"prm","$nm":"secondArg"}]],"$mt":"prm","$pt":"f","$nm":"collecting"},{"$t":{"$tp":[{"$mt":"tp","$nm":"FirstArgument"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"firstArguments"},{"$t":{"$tp":[{"$mt":"tp","$nm":"SecondArgument"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"secondArguments"}]],"$mt":"m","$tp":[{"$nm":"Result"},{"$nm":"FirstArgument"},{"$nm":"SecondArgument"}],"$an":{"shared":[],"doc":["Given two streams, form a new stream by applying a \nfunction to the arguments in the given streams. The \nlength of the resulting stream is the length of \nthe shorter of the two given streams.\n\nThus:\n\n    mapPairs(fun,xs,ys)[i]==fun(xs[i],ys[i])\n\nfor every `0<=i<min({xs.size,ys.size})`."]},"$m":{"collecting$uddhp1":{"$t":{"$nm":"Result"},"$ps":[[{"$t":{"$nm":"FirstArgument"},"$mt":"prm","$nm":"firstArg"},{"$t":{"$nm":"SecondArgument"},"$mt":"prm","$nm":"secondArg"}]],"$mt":"m","$nm":"collecting"}},"$nm":"mapPairs","$o":{"iterable$r9g8u6":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Result"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"}],"$mt":"o","$m":{"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Result"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"iterator","$o":{"iterator$b0lkj8":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Result"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Result"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$nm":"iterator"}}}},"$nm":"iterable"}}},"OptionalAnnotation":{"of":[{"$nm":"Value"}],"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"},{"comp":"u","$mt":"tp","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Value"}]},{"$mt":"tp","$nm":"ProgramElement"}],"$pk":".","$nm":"ConstrainedAnnotation"}],"$mt":"i","$tp":[{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"ProgramElement"}],"$pk":".","$nm":"OptionalAnnotation"}],"variance":"out","$nm":"Value"},{"$sts":[{"$pk":".","$nm":"Annotated"}],"$def":{"$pk":".","$nm":"Annotated"},"variance":"in","$nm":"ProgramElement"}],"$an":{"shared":[],"see":["Annotation"],"doc":["An annotation that may occur at most once at a single program element and \nonly on certain program elements.\n\nAn optional annotation is declared simply by having the annotation class\nsatisfy OptionalAnnotation instead of [[Annotation]]. For example \nthe following would only be allowed on `class` declarations:\n\n    final annotation class ExampleClass() \n            satisfies OptionalAnnotation<Example, ClassDeclaration> {}\n\nAt runtime a [[ceylon.language.meta.declaration::Declaration]] instance \ncan be queried for its `OptionalAnnotation`s of a certain type using \n[[ceylon.language.meta::annotations]] or [[ceylon.language.meta::optionalAnnotation]].\n"]},"$nm":"OptionalAnnotation","$st":"Value"},"className":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"obj"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["Return the name of the concrete class of the given \nobject, in a format native to the virtual machine."]},"$nm":"className"},"List":{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Collection"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Correspondence"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"}],"$pk":".","$nm":"Ranged"}],"$mt":"i","$tp":[{"variance":"out","$nm":"Element"}],"$an":{"shared":[],"see":["Sequence","Empty","Array"],"doc":["Represents a collection in which every element has a \nunique non-negative integer index.\n\nA `List` is a [[Collection]] of its elements, and a \n[[Correspondence]] from indices to elements.\n\nDirect access to a list element by index produces a value \nof optional type. The following idiom may be used instead \nof upfront bounds-checking, as long as the list element \ntype is a non-`null` type:\n\n    if (exists char = \"hello world\"[index]) { \n        \/\/do something with char\n    }\n    else {\n        \/\/out of bounds\n    }\n\nWhen an algorithm guarantees that a list contains a given \nindex, the following idiom may be used:\n\n    assert (exists char = \"hello world\"[index]);\n    \/\/do something with char\n\nTo iterate the indices of a `List`, use the following\nidiom:\n\n    for (i->char in \"hello world\".indexed) { ... }\n\n[[Strings|String]], [[sequences|Sequential]], \n[[tuples|Tuple]], and [[arrays|Array]] are all `List`s,\nand are all of fixed length. Variable-length mutable\n`List`s are also possible."]},"$m":{"longerThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$nm":"longerThan"},"trimLeading":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"trimming"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Trim the elements satisfying the given predicate\nfunction from the start of this list, returning a list \nno longer than this list."]},"$m":{"trimming$n7qg70":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"m","$nm":"trimming"}},"$nm":"trimLeading"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["occurs"],"doc":["Determines if this list contains the given value.\nReturns `true` for every element of this list."],"actual":[]},"$nm":"contains"},"includes":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"List"},"$mt":"prm","$nm":"sublist"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determine if the given list occurs at some index in \nthis list."]},"$nm":"includes"},"firstInclusion":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Integer"}]},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"List"},"$mt":"prm","$nm":"sublist"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The first index in this list at which the given list \noccurs."]},"$nm":"firstInclusion"},"occurs":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Anything"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if the given value occurs as an element of \nthis list."]},"$nm":"occurs"},"withTrailing":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]}],"$pk":".","$nm":"Sequence"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$an":{"doc":["The last element of the resulting sequence."]},"$nm":"element"}]],"$mt":"m","$tp":[{"$nm":"Other"}],"$an":{"shared":[],"default":[],"doc":["Returns a new `List` that contains the specified\nelement appended to the end of the elements of this \nlist."]},"$nm":"withTrailing"},"firstOccurrence":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Integer"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Anything"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The first index in this list at which the given element \noccurs."]},"$nm":"firstOccurrence"},"terminal":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["List.initial"],"doc":["Select the last elements of the list, returning a list \nno longer than the given length. If this list is \nshorter than the given length, return this list. \nOtherwise return a list of the given length."]},"$nm":"terminal"},"initial":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["List.terminal"],"doc":["Select the first elements of this list, returning a \nlist no longer than the given length. If this list is \nshorter than the given length, return this list. \nOtherwise return a list of the given length."]},"$nm":"initial"},"inclusions":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"List"},"$mt":"prm","$nm":"sublist"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The indexes in this list at which the given list \noccurs."]},"$nm":"inclusions"},"occurrences":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Anything"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The indexes in this list at which the given element \noccurs."]},"$nm":"occurrences"},"trim":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"trimming"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Trim the elements satisfying the given predicate\nfunction from the start and end of this list, returning \na list no longer than this list."]},"$m":{"trimming$hwdwuq":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"m","$nm":"trimming"}},"$nm":"trim"},"clone":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},"$mt":"m","$an":{"shared":[],"formal":[],"actual":[]},"$nm":"clone"},"startsWith":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"List"},"$mt":"prm","$nm":"sublist"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determine if the given list occurs at the start of this \nlist."]},"$nm":"startsWith"},"iterator":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"},"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$nm":"iterator","$o":{"listIterator$culmay":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Iterator"}],"$mt":"o","$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"index$db9i5l":{"$t":{"$pk":".","$nm":"Integer"},"var":1,"$mt":"a","$an":{"variable":[]},"$nm":"index"}},"$nm":"listIterator"}}},"get":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Returns the element of this sequence with the given\nindex if the index refers to an element of the list,\nthat is, if `0<=index<=list.lastIndex`, or `null` \notherwise. The first element of the list has index \n`0`."],"actual":[]},"$nm":"get"},"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Two `List`s are considered equal iff they have the \nsame `size` and _entry sets_. The entry set of a list \n`l` is the set of elements of `l.indexed`. This \ndefinition is equivalent to the more intuitive notion \nthat two lists are equal iff they have the same `size` \nand for every index either:\n\n- the lists both have the element `null`, or\n- the lists both have a non-null element, and the\n  two elements are equal."],"actual":[]},"$nm":"equals"},"indexes":{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"prm","$pt":"f","$an":{"doc":["The predicate the indexed elements must \nsatisfy"]},"$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The indexes in this list for which the element \nsatisfies the given predicate."]},"$nm":"indexes"},"occursAt":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"},{"$t":{"$pk":".","$nm":"Anything"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if the given value occurs at the given index \nin this list."]},"$nm":"occursAt"},"defines":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determines if the given index refers to an element of \nthis list, that is, if `0<=index<=list.lastIndex`."],"actual":[]},"$nm":"defines"},"shorterThan":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"length"}]],"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$nm":"shorterThan"},"lastInclusion":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Integer"}]},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"List"},"$mt":"prm","$nm":"sublist"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The last index in this list at which the given list \noccurs."]},"$nm":"lastInclusion"},"trimTrailing":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"trimming"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Trim the elements satisfying the given predicate\nfunction from the end of this list, returning a list no \nlonger than this list."]},"$m":{"trimming$imcxn6":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"m","$nm":"trimming"}},"$nm":"trimTrailing"},"includesAt":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$an":{"doc":["The index at which this list might occur"]},"$nm":"index"},{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"List"},"$mt":"prm","$nm":"sublist"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determine if the given list occurs at the given index \nof this list."]},"$nm":"includesAt"},"lastOccurrence":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Integer"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Anything"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["The last index in this list at which the given element \noccurs."]},"$nm":"lastOccurrence"},"endsWith":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Anything"}],"$pk":".","$nm":"List"},"$mt":"prm","$nm":"sublist"}]],"$mt":"m","$an":{"shared":[],"default":[],"doc":["Determine if the given list occurs at the end of this \nlist."]},"$nm":"endsWith"},"findLast":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"prm","$pt":"f","$nm":"selecting"}]],"$mt":"m","$an":{"shared":[],"default":[],"actual":[]},"$m":{"selecting$spteam":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"elem"}]],"$mt":"m","$nm":"selecting"}},"$nm":"findLast"},"withLeading":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Other"},{"$nm":"Element"}]}],"$pk":".","$nm":"Sequence"},"$ps":[[{"$t":{"$nm":"Other"},"$mt":"prm","$an":{"doc":["The first element of the resulting sequence."]},"$nm":"element"}]],"$mt":"m","$tp":[{"$nm":"Other"}],"$an":{"shared":[],"default":[],"see":["following"],"doc":["Returns a new `List` that starts with the specified\nelement, followed by the elements of this list."]},"$nm":"withLeading"}},"$at":{"lastIndex":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Integer"}]},"$mt":"a","$an":{"shared":[],"formal":[],"see":["List.size"],"doc":["The index of the last element of the list, or `null` if \nthe list is empty."]},"$nm":"lastIndex"},"last":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$mt":"g","$an":{"shared":[],"default":[],"doc":["Returns the last element of this `List`, if any."],"actual":[]},"$nm":"last"},"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"default":[],"actual":[]},"$nm":"hash"},"reversed":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["A `List` containing the elements of this list in \nreverse order."]},"$nm":"reversed"},"rest":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"List"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The rest of the list, without the first element."],"actual":[]},"$nm":"rest"},"first":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$nm":"Element"}]},"$mt":"g","$an":{"shared":[],"default":[],"doc":["Returns the first element of this `List`, if any."],"actual":[]},"$nm":"first"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"g","$an":{"shared":[],"default":[],"see":["List.lastIndex"],"doc":["The number of elements in this list, always\n`list.lastIndex+1`."],"actual":[]},"$nm":"size"}},"$nm":"List"},"abstract":{"$t":{"$pk":".","$nm":"AbstractAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to mark a class as abstract. An `abstract` class \nmay not be directly instantiated. An `abstract` class may \nhave enumerated cases."]},"$annot":1,"$nm":"abstract"},"zip":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Head"}]},{"$mt":"tp","$nm":"Head"},{"$mt":"tp","$nm":"Tail"}],"$pk":".","$nm":"Tuple"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Head"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"heads"},{"$t":{"$tp":[{"$mt":"tp","$nm":"Tail"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"tails"}]],"$mt":"m","$tp":[{"$nm":"Element"},{"$nm":"Head"},{"$sts":[{"$tp":[{"$mt":"tp","$nm":"Element"}],"$pk":".","$nm":"Sequential"}],"$nm":"Tail"}],"$an":{"shared":[],"doc":["Given a stream of values, and a stream of tuples, produce\na new stream of tuples formed by prepending the values in\nthe first stream to the tuples in the second stream. The \nlength of the resulting stream is the length of the shorter \nof the two given streams.\n\nThus:\n\n    zip(heads, tails)[i]==[heads[i],*tails[i]]\n\nfor every `0<=i<min({heads.size,tails.size})`."]},"$nm":"zip"},"xor":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"T"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"T"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"p"},{"$t":{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"T"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"T"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Callable"},"$mt":"prm","$nm":"q"}],[{"$t":{"$nm":"T"},"$mt":"prm","$nm":"t"}]],"$mt":"m","$tp":[{"$nm":"T"}],"$an":{"shared":[],"doc":["Returns a function which is the logical \nexclusive disjunction of the given \npredicate functions.\nUnlike [[and]] and [[or]] both predicate functions are always evaluated."]},"$nm":"xor"},"Resource":{"$mt":"i","$an":{"shared":[],"doc":["An abstraction for resources inside a module.\nA resource is a file contained within a module,\nwhich is accessible at runtime."],"by":["Enrique Zamudio"]},"$m":{"textContent":{"$t":{"$pk":".","$nm":"String"},"$ps":[[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$def":1,"$nm":"encoding"}]],"$mt":"m","$an":{"shared":[],"formal":[],"doc":["Retrieves the contents of the resource as a String,\nusing the specified encoding."]},"$nm":"textContent"}},"$at":{"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"string"},"name":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"default":[],"doc":["The name of the resource; usually the filename."]},"$nm":"name"},"uri":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The full path to the resource."]},"$nm":"uri"},"size":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"formal":[],"doc":["The size of the resource, in bytes."]},"$nm":"size"}},"$nm":"Resource"},"AssertionError":{"super":{"$pk":".","$nm":"Error"},"$ps":[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$nm":"message"}],"$mt":"c","$an":{"shared":[],"doc":["An error that occurs due to an incorrectly writen program. \nAn instance is thrown when an assertion fails, that\nis, when a condition in an `assert` statement evaluates\nto false at runtime."]},"$at":{"message$1aatzk":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$nm":"message"}},"$nm":"AssertionError"},"zipEntries":{"$t":{"$tp":[{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$nm":"Item"}],"$pk":".","$nm":"Entry"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Key"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"keys"},{"$t":{"$tp":[{"$mt":"tp","$nm":"Item"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"items"}]],"$mt":"m","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Key"},{"$sts":[{"$pk":".","$nm":"Object"}],"$nm":"Item"}],"$an":{"shared":[],"doc":["Given two streams, form a new stream consisting of\nall entries where, for any given index in the resulting\nstream, the key of the entry is the element occurring \nat the same index in the first stream, and the item is \nthe element occurring at the same index in the second \nstream. The length of the resulting stream is the \nlength of the shorter of the two given streams.\n\nThus:\n\n    zipEntries(keys,items)[i]==keys[i]->items[i]\n\nfor every `0<=i<min({keys.size,items.size})`."]},"$nm":"zipEntries"},"equal":{"super":{"$pk":".","$nm":"Comparison"},"$mt":"o","$an":{"shared":[],"doc":["The value is exactly equal to the given value."]},"$nm":"equal"},"finished":{"super":{"$pk":".","$nm":"Finished"},"$mt":"o","$an":{"shared":[],"see":["Iterator"],"doc":["A value that indicates that an [[Iterator]] is exhausted \nand has no more values to return."]},"$at":{"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"string"}},"$nm":"finished"},"Boolean":{"abstract":1,"super":{"$pk":".","$nm":"Basic"},"of":[{"$pk":".","$nm":"true"},{"$pk":".","$nm":"false"}],"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Boolean"}],"$pk":".","$nm":"Binary"}],"$mt":"c","$an":{"abstract":[],"shared":[],"doc":["A type capable of representing the values [[true]] and \n[[false]] of Boolean logic."],"by":["Gavin"]},"$m":{"clear":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"clear"},"xor":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"xor"},"get":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"get"},"leftLogicalShift":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"shift"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"leftLogicalShift"},"set":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"},{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"prm","$def":1,"$nm":"bit"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"set"},"or":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"or"},"rightArithmeticShift":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"shift"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"rightArithmeticShift"},"rightLogicalShift":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"shift"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"rightLogicalShift"},"flip":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"flip"},"and":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"and"}},"$at":{"not":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"g","$an":{"shared":[],"actual":[]},"$nm":"not"}},"$nm":"Boolean"},"print":{"$t":{"$pk":".","$nm":"Anything"},"$ps":[[{"$t":{"$pk":".","$nm":"Anything"},"$mt":"prm","$nm":"val"}]],"$mt":"m","$an":{"shared":[],"see":["writeLine"],"doc":["Print a line to the standard output of the virtual machine \nprocess, printing the given value's `string`, or `<null>` \nif the value is `null`.\n\nThis method is a shortcut for:\n\n    process.writeLine(line?.string else \"<null>\")\n\nand is intended mainly for debugging purposes."],"by":["Gavin"]},"$nm":"print"},"Error":{"super":{"$pk":".","$nm":"Throwable"},"$ps":[{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"String"}]},"$mt":"prm","$def":1,"$nm":"description"},{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Throwable"}]},"$mt":"prm","$def":1,"$nm":"cause"}],"$mt":"c","$an":{"shared":[],"native":[],"doc":["The supertype of all errors, which represent unexpected non-transient problems. \nThis includes such things assertion failures and problems with \nthe virtual machine.\n\nErrors cannot usually be recovered from, and therefore are not usually caught."],"by":["Gavin","Tom"]},"$at":{"description$h6bqj3":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"String"}]},"$mt":"a","$nm":"description"},"cause$2cem7o":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Throwable"}]},"$mt":"a","$nm":"cause"}},"$nm":"Error"},"unzipPairs":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$tp":[{"$mt":"tp","$nm":"First"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"comp":"u","$ts":[{"$tp":[{"$mt":"tp","$nm":"Second"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$pk":".","$nm":"Nothing"}]}]},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"First"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$tp":[{"$mt":"tp","$nm":"Second"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$tp":[{"$mt":"tp","$nm":"Second"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Tuple"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"First"},{"comp":"u","$ts":[{"$nm":"Second"},{"$pk":".","$nm":"Nothing"}]}]},{"$mt":"tp","$nm":"First"},{"$mt":"tp","$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Second"},{"$pk":".","$nm":"Nothing"}]},{"$mt":"tp","$nm":"Second"},{"$mt":"tp","$pk":".","$nm":"Empty"}],"$pk":".","$nm":"Tuple"}],"$pk":".","$nm":"Tuple"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"pairs"}]],"$mt":"m","$tp":[{"$nm":"First"},{"$nm":"Second"}],"$an":{"shared":[],"doc":["Given a stream of pairs, return two streams. The\nfirst stream produces the first elements of the\ngiven pairs, and the second stream produces the\nsecond elements of the given pairs.\n\nThus:\n\n    pairs[i]==[unzipPairs(pairs)[0][i],unzipPairs(pairs)[1][i]]"]},"$nm":"unzipPairs"},"ChainedIterator":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]}],"$pk":".","$nm":"Iterator"}],"$ps":[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"first"},{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"second"}],"$mt":"c","$tp":[{"variance":"out","$nm":"Element"},{"variance":"out","$nm":"Other"}],"$an":{"see":["Iterable.chain"],"doc":["An [[Iterator]] that returns the elements of two\n[[Iterable]]s, as if they were chained together."],"by":["Enrique Zamudio"]},"$m":{"next":{"$t":{"comp":"u","$ts":[{"$nm":"Element"},{"$nm":"Other"},{"$pk":".","$nm":"Finished"}]},"$mt":"m","$an":{"shared":[],"actual":[]},"$nm":"next"}},"$at":{"second$1cry77":{"$t":{"$tp":[{"$mt":"tp","$nm":"Other"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"a","$nm":"second"},"iter$81ctsv":{"$t":{"$tp":[{"comp":"u","$mt":"tp","$ts":[{"$nm":"Element"},{"$nm":"Other"}]}],"$pk":".","$nm":"Iterator"},"var":1,"$mt":"a","$an":{"shared":[],"actual":[],"variable":[]},"$nm":"iter"},"first$69b6kn":{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"a","$nm":"first"},"more$5fttbe":{"$t":{"$pk":".","$nm":"Boolean"},"var":1,"$mt":"a","$an":{"shared":[],"actual":[],"variable":[]},"$nm":"more"}},"$nm":"ChainedIterator"},"Basic":{"abstract":1,"super":{"$pk":".","$nm":"Object"},"$sts":[{"$pk":".","$nm":"Identifiable"}],"$mt":"c","$an":{"abstract":[],"shared":[],"doc":["The default superclass when no superclass is explicitly\nspecified using `extends`. For the sake of convenience, \nthis class inherits a default definition of value equality \nfrom [[Identifiable]]."],"by":["Gavin"]},"$nm":"Basic"},"DocAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"DocAnnotation"},{"$mt":"tp","$pk":".","$nm":"Annotated"}],"$pk":".","$nm":"OptionalAnnotation"}],"$ps":[{"$t":{"$pk":".","$nm":"String"},"$mt":"prm","$an":{"shared":[],"doc":["Documentation, in Markdown syntax, about the annotated element"]},"$nm":"description"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for the [[doc]] annotation."]},"$annot":1,"$at":{"description":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"doc":["Documentation, in Markdown syntax, about the annotated element"]},"$nm":"description"}},"$nm":"DocAnnotation"},"Category":{"$mt":"i","$tp":[{"$sts":[{"$pk":".","$nm":"Object"}],"$def":{"$pk":".","$nm":"Object"},"variance":"in","$nm":"Element"}],"$an":{"shared":[],"doc":["Abstract supertype of objects that contain other values, \ncalled *elements*, where it is possible to efficiently \ndetermine if a given value is an element.\n\n`Category` models a mathematical set, but is distinct \nfrom the [[Set]] collection type.\n\nThe `in` operator may be used to determine if a value\nbelongs to a `Category`:\n\n    if (69 in 0..100) { ... }\n    assert (key->item in { for (n in 0..100) n.string->n**2 });\n\nAn object may be a `Category` of two different disjoint\nelement types. For example, [[String]] is a `Category`\nof its `Character`s and of its substrings.\n\n    if (\"hello\" in \"hello world\") { ... }\n    assert ('.' in string);\n\nOrdinarily, `x==y` implies that `x in cat == y in cat`.\nBut this contract is not required since it is possible to \nform a meaningful `Category` using a different \nequivalence relation. For example, an `IdentitySet` is a \nmeaningful `Category`.\n\nNote that even though `Category<Element>` is declared\ncontravariant in its [[element type|Element]], most types\nthat inherit `Category` are covariant in their element\ntype, and therefore satisfy `Category<Object>`, resulting\nin some loss of typesafety. For such types, [[contains]] \nshould return `false` for any value that is not an \ninstance of the element type. For example, `String` is a \n`Category<Object>`, not a `Category<Character|String>`,\nand `x in string` evaluates to `false` for every `x` that\nis not a `String` or `Character`."],"by":["Gavin"]},"$m":{"containsAny":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["contains"],"doc":["Returns `true` if any one of the given values belongs \nto this `Category`, or `false` otherwise."]},"$nm":"containsAny"},"contains":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$nm":"Element"},"$mt":"prm","$nm":"element"}]],"$mt":"m","$an":{"shared":[],"formal":[],"see":["containsEvery","containsAny"],"doc":["Returns `true` if the given value belongs to this\n`Category`, that is, if it is an element of this\n`Category`, or `false` otherwise.\n\nFor most `Category`s the following relationship is \nsatisfied by every pair of elements `x` and `y`:\n\n- if `x==y`, then `x in category == y in category`\n\nHowever, it is possible to form a useful `Category` \nconsistent with some other equivalence relation, for \nexample `===`. Therefore implementations of `contains()` \nwhich do not satisfy this relationship are tolerated."]},"$nm":"contains"},"containsEvery":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Element"},{"$mt":"tp","$pk":".","$nm":"Null"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"elements"}]],"$mt":"m","$an":{"shared":[],"default":[],"see":["contains"],"doc":["Returns `true` if every one of the given values belongs \nto this `Category`, or `false` otherwise."]},"$nm":"containsEvery"}},"$nm":"Category"},"see":{"$t":{"$pk":".","$nm":"SeeAnnotation"},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$pk":"ceylon.language.meta.declaration","$nm":"Declaration"}],"$pk":".","$nm":"Sequential"},"$mt":"prm","seq":1,"$an":{"doc":["The program elements being referred to."]},"$nm":"programElements"}]],"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to specify API references to other related \nprogram elements."]},"$annot":1,"$nm":"see"},"computeMagnitude":{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Integer"}]},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"radix"},{"$t":{"comp":"u","$ts":[{"$pk":".","$nm":"Null"},{"$pk":".","$nm":"Character"}]},"$mt":"prm","$nm":"char"}]],"$mt":"m","$nm":"computeMagnitude"},"SharedAnnotation":{"super":{"$pk":".","$nm":"Basic"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"SharedAnnotation"},{"comp":"u","$mt":"tp","$ts":[{"$pk":"ceylon.language.meta.declaration","$nm":"FunctionOrValueDeclaration"},{"$pk":"ceylon.language.meta.declaration","$nm":"ClassOrInterfaceDeclaration"},{"$pk":"ceylon.language.meta.declaration","$nm":"Package"},{"$pk":"ceylon.language.meta.declaration","$nm":"Import"}]}],"$pk":".","$nm":"OptionalAnnotation"}],"$mt":"c","$an":{"annotation":[],"shared":[],"final":[],"doc":["The annotation class for [[shared]]."]},"$annot":1,"$nm":"SharedAnnotation"},"actual":{"$t":{"$pk":".","$nm":"ActualAnnotation"},"$mt":"m","$an":{"annotation":[],"shared":[],"doc":["Annotation to mark a member of a type as refining a member \nof a supertype."]},"$annot":1,"$nm":"actual"},"Integer":{"super":{"$pk":".","$nm":"Object"},"$sts":[{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"}],"$pk":".","$nm":"Integral"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"}],"$pk":".","$nm":"Binary"},{"$tp":[{"$mt":"tp","$pk":".","$nm":"Integer"},{"$mt":"tp","$pk":".","$nm":"Integer"}],"$pk":".","$nm":"Exponentiable"}],"$ps":[{"$t":{"$pk":".","$nm":"Integer"},"$hdn":1,"$mt":"prm","$an":{"shared":[],"actual":[]},"$nm":"integer"}],"$mt":"c","$an":{"shared":[],"final":[],"native":[],"see":["runtime"],"doc":["An exact representation of a positive whole number, \nnegative whole number, or zero. The largest and smallest \nrepresentable values are platform-dependent:\n\n- For the JVM runtime, integer values between\n  -2<sup>63<\/sup> and 2<sup>63<\/sup>-1 may be represented \n  without overflow.\n- For the JavaScript runtime, integer values with a\n  magnitude no greater than 2<sup>53<\/sup> may be\n  represented without loss of precision.\n\nOverflow or loss of precision occurs silently (with no \nexception raised).\n\nNot all of the bits in the representation may be addressed by the \nmethods inherited from [[Binary]]:\n\n- For the JVM runtime, the bits at all indices (0 to 63) are \n  addressable.\n\n- For the JavaScript runtime, the bits at indices 0 to 31 are \n  addressable.\n"]},"$m":{"plus":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"plus"},"xor":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"xor"},"minus":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"minus"},"get":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["If the `index` is for an addressable bit, the value of that bit.\nOtherwise false."],"actual":[]},"$nm":"get"},"equals":{"$t":{"$pk":".","$nm":"Boolean"},"$ps":[[{"$t":{"$pk":".","$nm":"Object"},"$mt":"prm","$nm":"that"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"equals"},"set":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"},{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"prm","$def":1,"$nm":"bit"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["If the `index` is for an addressable bit, an instance with the same \naddressable bits as this instance, but with that bit set to `bit`.\nOtherwise an instance with the same addressable bits as this instance."],"actual":[]},"$nm":"set"},"or":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"or"},"compare":{"$t":{"$pk":".","$nm":"Comparison"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"compare"},"and":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"and"},"clear":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["If the `index` is for an addressable bit, an instance with the same \naddressable bits as this instance, but with that bit cleared.\nOtherwise an instance with the same addressable bits as this instance."],"actual":[]},"$nm":"clear"},"remainder":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"remainder"},"plusInteger":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"integer"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"plusInteger"},"leftLogicalShift":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"shift"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["If shift is in the range of addressable bits \n(`0..runtime.integerAddressableSize-1`), shift the addressable bits to \nthe left by `shift` positions.\nOtherwise shift the addressable bits to the left by \n`(bits + (shift % bits)) % bits` \nwhere `bits=runtime.integerAddressableSize`"],"actual":[]},"$nm":"leftLogicalShift"},"times":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"times"},"timesInteger":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"integer"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"timesInteger"},"rightArithmeticShift":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"shift"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["If shift is in the range of addressable bits \n(`0..runtime.integerAddressableSize-1`), shift the addressable bits to \nthe right by `shift` positions, with sign extension.\nOtherwise shift the addressable bits to the right by \n`(bits + (shift % bits)) % bits` \nwhere `bits=runtime.integerAddressableSize`"],"actual":[]},"$nm":"rightArithmeticShift"},"rightLogicalShift":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"shift"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["If shift is in the range of addressable bits \n(`0..runtime.integerAddressableSize-1`), shift the addressable bits to \nthe right by `shift` positions, with zero extension.\nOtherwise shift the addressable bits to the right by \n`(bits + (shift % bits)) % bits` \nwhere `bits=runtime.integerAddressableSize`"],"actual":[]},"$nm":"rightLogicalShift"},"power":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"power"},"divided":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"other"}]],"$mt":"m","$an":{"shared":[],"native":[],"actual":[]},"$nm":"divided"},"flip":{"$t":{"$pk":".","$nm":"Integer"},"$ps":[[{"$t":{"$pk":".","$nm":"Integer"},"$mt":"prm","$nm":"index"}]],"$mt":"m","$an":{"shared":[],"native":[],"doc":["If the `index` is for an addressable bit, an instance with the same \naddressable bits as this instance, but with that bit flipped.\nOtherwise an instance with the same addressable bits as this instance."],"actual":[]},"$nm":"flip"}},"$at":{"successor":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"successor"},"hash":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"hash"},"integer":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"actual":[]},"$nm":"integer"},"magnitude":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"magnitude"},"zero":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"zero"},"fractionalPart":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"fractionalPart"},"float":{"$t":{"$pk":".","$nm":"Float"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"float"},"character":{"$t":{"$pk":".","$nm":"Character"},"$mt":"a","$an":{"shared":[],"native":[],"throws":["OverflowException","if there is no such character"],"doc":["The UTF-32 character with this UCS code point."]},"$nm":"character"},"not":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"not"},"predecessor":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"predecessor"},"sign":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"sign"},"unit":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"unit"},"string":{"$t":{"$pk":".","$nm":"String"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"string"},"integerValue":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"integerValue"},"wholePart":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"wholePart"},"negative":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"negative"},"positive":{"$t":{"$pk":".","$nm":"Boolean"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"positive"},"negated":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$an":{"shared":[],"native":[],"actual":[]},"$nm":"negated"}},"$nm":"Integer"},"first":{"$t":{"comp":"u","$ts":[{"$nm":"Absent"},{"$nm":"Value"}]},"$ps":[[{"$t":{"$tp":[{"$mt":"tp","$nm":"Value"},{"$mt":"tp","$nm":"Absent"}],"$pk":".","$nm":"Iterable"},"$mt":"prm","$nm":"values"}]],"$mt":"m","$tp":[{"$nm":"Value"},{"$sts":[{"$pk":".","$nm":"Null"}],"$nm":"Absent"}],"$an":{"shared":[],"doc":["The first of the given values (usually a comprehension),\nif any."]},"$nm":"first"},"zeroInt":{"$t":{"$pk":".","$nm":"Integer"},"$mt":"a","$nm":"zeroInt"}},"$mod-bin":"7.0"};
exports.$CCMM$=function(){return $CCMM$;};
function getT$name() {return this.constructor.T$name;}
function getT$all() {return this.constructor.T$all;}
function initType(type, typeName) {
var cons = function() {}
type.$$ = cons;
cons.T$name = typeName;
cons.T$all = {}
cons.T$all[typeName] = type;
for (var i=2; i<arguments.length; ++i) {
var superTypes = arguments[i].$$.T$all;
for (var $ in superTypes) {cons.T$all[$] = superTypes[$]}
}
cons.prototype.getT$name = getT$name;
cons.prototype.getT$all = getT$all;
}
function initTypeProto(type, typeName) {
initType.apply(this, arguments);
var args = [].slice.call(arguments, 2);
args.unshift(type);
inheritProto.apply(this, args);
}
function initTypeProtoI(type, typeName) {
initType.apply(this, arguments);
var args = [].slice.call(arguments, 2);
if (type.$$.T$all['ceylon.language::Object']===undefined) {
type.$$.T$all['ceylon.language::Object']=Object$;
//args.unshift(Object$);
}
args.unshift(type);
inheritProto.apply(this, args);
}
function initExistingType(type, cons, typeName) {
type.$$ = cons;
cons.T$name = typeName;
cons.T$all = {}
cons.T$all[typeName] = type;
for (var i=3; i<arguments.length; ++i) {
var superTypes = arguments[i].$$.T$all;
for (var $ in superTypes) {cons.T$all[$] = superTypes[$]}
}
var proto = cons.prototype;
if (proto !== undefined) {
try {
proto.getT$name = getT$name;
proto.getT$all = getT$all;
} catch (exc) {
// browser probably prevented access to the prototype
}
}
}
function initExistingTypeProto(type, cons, typeName) {
var args = [].slice.call(arguments, 0);
args.push($init$Basic());
initExistingType.apply(this, args);
var proto = cons.prototype;
if ((proto !== undefined) && (proto.getHash === undefined)) {
var origToString = proto.toString;
try {
inheritProto(type, Basic);
proto.toString = origToString;
} catch (exc) {
// browser probably prevented access to the prototype
}
}
}
function inheritProto(type) {
var proto = type.$$.prototype;
for (var i=1; i<arguments.length; ++i) {
var superProto = arguments[i].$$.prototype;
var names = Object.getOwnPropertyNames(superProto);
for (var j=0; j<names.length; ++j) {
var name = names[j];
var desc = Object.getOwnPropertyDescriptor(superProto, name);
// only copy own, enumerable properties
if (desc && desc.enumerable) {
if (desc.get) {
// defined through getter/setter, so copy the definition
Object.defineProperty(proto, name, desc);
} else if (proto[name]===undefined || desc.value.$fml===undefined) {
proto[name] = desc.value;
}
}
}
}
}
// Define a property on the given object (which may be a prototype).
// "get" and "set" are getter/setter functions, and the latter is optional.
function $defat(obj, name, get, set, metamodel,settermm) {
Object.defineProperty(obj, name, {get: get, set: set, configurable: true, enumerable: true});
//if (name[0]==='$')name=name.substring(1);//names matching reserved words are prefixed with $
obj['$prop$get'+name[0].toUpperCase()+name.substring(1)] = {get:get, set:set, $crtmm$:metamodel};
if (settermm)set.$crtmm$=settermm;
}
// Create a copy of the given property. The name of the copied property is name+suffix.
// This is used in closure mode to provide access to inherited attribute implementations.
function copySuperAttr(obj, name, suffix) {
var desc;
var o = obj;
// It may be an inherited property, so check the prototype chain.
do {
if ((desc = Object.getOwnPropertyDescriptor(o, name))) {break;}
o = o.__proto__;
} while (o);
if (desc) {
Object.defineProperty(obj, name+suffix, desc);
}
}
// read/writeAttrib return the getter/setter for the given property as defined in the
// given type. This is used in prototype mode to access inherited attribute implementations.
function attrGetter(type, name) {
return Object.getOwnPropertyDescriptor(type.$$.prototype, name).get;
}
function attrSetter(type, name, value) {
return Object.getOwnPropertyDescriptor(type.$$.prototype, name).set;
}
exports.initType=initType;
exports.initTypeProto=initTypeProto;
exports.initTypeProtoI=initTypeProtoI;
exports.initExistingType=initExistingType;
exports.initExistingTypeProto=initExistingTypeProto;
exports.inheritProto=inheritProto;
exports.$defat=$defat;
exports.copySuperAttr=copySuperAttr;
exports.attrGetter=attrGetter;
exports.attrSetter=attrSetter;
function Anything(wat) {
return wat;
}
initType(Anything, 'ceylon.language::Anything');
Anything.$crtmm$=function(){return{$an:function(){return[shared(),abstract()]},mod:$CCMM$,d:['ceylon.language','Anything']};}
function Null(wat) {
return null;
}
initType(Null, 'ceylon.language::Null', Anything);
Null.$crtmm$=function(){return{'super':{t:Anything},$an:function(){return[shared(),abstract()]},mod:$CCMM$,d:['ceylon.language','Null']};}
function Nothing(wat) {
throw "Nothing";
}
initType(Nothing, 'ceylon.language::Nothing');
//This is quite a special case, since Nothing is not in the model, we need to insert it there
$CCMM$['ceylon.language']["Nothing"]={"$mt":"c","$an":{"shared":[]},"$nm":"Nothing"};
Nothing.$crtmm$=function(){return{$ps:[],$an:function(){return[shared()]},mod:$CCMM$,d:['ceylon.language','Nothing']};}
function Object$(wat) {
return wat;
}
initTypeProto(Object$, 'ceylon.language::Object', Anything);
Object$.$crtmm$=function(){return{'super':{t:Anything},$an:function(){return[shared(),abstract()]},mod:$CCMM$,d:['ceylon.language','Object']};}
var Object$proto = Object$.$$.prototype;
$defat(Object$proto, 'string', function(){
return String$(className(this) + "@" + this.hash);
},undefined,{$an:function(){return[shared(),$default()]},$t:{t:String$},mod:$CCMM$,$cont:Object$,d:['ceylon.language','Object','$at','string']});
Object$proto.$prop$getHash={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$cont:Object$,d:['ceylon.language','Object','$at','hash'],$t:{t:Integer},$an:function(){return[shared(),formal()]}};}};
Object$proto.toString=function() { return this.string.valueOf(); }
Object$proto.equals={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$cont:Object$,d:['ceylon.language','Object','$m','equals'],$t:{t:Boolean$},
$ps:[{$nm:'other',$mt:'prm',$t:{t:Object$}}],$an:function(){return[shared(),formal()];}};}};
function $init$Object$() { return Object$; }
function $init$Object() { return Object$; }
function $init$$Object() { return Object$; }
var $Object=Object$;
var BasicID=1;
function $identityHash(x) {
var hash = x.BasicID;
return (hash !== undefined)
? hash : (x.BasicID = BasicID++);
}
$identityHash.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'x',$t:{t:Identifiable},$mt:'prm'}],d:['ceylon.language','identityHash']};}
function Identifiable(obj) {}
initType(Identifiable, "ceylon.language::Identifiable", Object$);
Identifiable.$crtmm$=function(){return{$an:function(){return[shared()]},mod:$CCMM$,d:['ceylon.language','Identifiable']};}
function $init$Identifiable() { return Identifiable; }
var Identifiable$proto = Identifiable.$$.prototype;
Identifiable$proto.equals = function(that) {
return $is(that, {t:Identifiable}) && (that===this);
}
$defat(Identifiable$proto, 'hash', function(){ return $identityHash(this); },
undefined,function(){return{$an:function(){return[shared(),$default()]},$cont:Identifiable,mod:$CCMM$,d:['ceylon.language','Identifiable','$at','hash']};});
//INTERFACES
//Compiled from Ceylon sources
function Callable(wat) {
return wat;
}
Callable.$crtmm$={mod:$CCMM$,$an:function(){return[shared()];},$tp:{Arguments$Callable:{'var':'out'},Return$Callable:{'var':'out'}},d:['ceylon.language','Callable']};
exports.Callable=Callable;
function $init$Callable() {
if (Callable.$$===undefined) {
initType(Callable, 'ceylon.language::Callable');
}
return Callable;
}
exports.$init$Callable=$init$Callable;
$init$Callable();
function $JsCallable(callable,parms,targs) {
if (callable.getT$all === undefined) {
callable.getT$all=Callable.getT$all;
}
var set_meta = callable.$crtmm$ === undefined;
if (set_meta) {
callable.$crtmm$={$ps:[],mod:$CCMM$,d:['ceylon.language','Callable']};
if (parms !== undefined) {
callable.$crtmm$['$ps']=parms;
}
}
if (targs !== undefined && callable.$$targs$$ === undefined) {
callable.$$targs$$=targs;
if (set_meta) {
callable.$crtmm$['$t']=targs['Return'];
}
}
return callable;
}
initExistingTypeProto($JsCallable, Function, 'ceylon.language::JsCallable', Callable);
function noop() { return null; }
function JsCallable(o,f) {
if (o === null) return noop;
var f2 = function() { return f.apply(o, arguments); };
f2.$crtmm$=f.$crtmm$===undefined?Callable.$crtmm$:f.$crtmm$;
return f2;
}
JsCallable.$crtmm$=function(){return{ 'satisfies':[{t:Callable,a:{Return$Callable:'Return$Callable',Arguments$Callable:'Arguments$Callable'}}],
$tp:{Return$Callable:{'var':'out'}, Arguments$Callable:{'var':'in'}},$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language','Callable']};}
function JsCallableList(value) {
return function() {
var rval = Array(value.length);
for (var i = 0; i < value.length; i++) {
var c = value[i];
rval[i] = c.f.apply(c.o, arguments);
}
return ArraySequence(rval,{Element$Iterable:{t:Callable}});
};
}
JsCallableList.$crtmm$={$tp:{Return$Callable:{'var':'out'}, Arguments$Callable:{'var':'in'}},$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language','Callable']};
exports.JsCallableList=JsCallableList;
exports.JsCallable=JsCallable;
exports.$JsCallable=$JsCallable;
function Comprehension(makeNextFunc, $$targs$$, compr) {
$init$Comprehension();
if (compr===undefined) {compr = new Comprehension.$$;}
Basic(compr);
compr.makeNextFunc = makeNextFunc;
compr.$$targs$$=$$targs$$;
return compr;
}
Comprehension.$crtmm$={$nm:'Comprehension',$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language','Iterable']};
function $init$Comprehension() {
if (Comprehension.$$===undefined) {
initTypeProto(Comprehension, 'ceylon.language::Comprehension', $init$Basic(), $init$Iterable());
}
return Comprehension;
}
$init$Comprehension();
var Comprehension$proto = Comprehension.$$.prototype;
Comprehension$proto.iterator = function() {
return ComprehensionIterator(this.makeNextFunc(), this.$$targs$$);
}
$defat(Comprehension$proto, 'sequence', function() {
var sb = SequenceBuilder({Element$SequenceBuilder:this.$$targs$$.Element$Iterable});
sb.appendAll(this);
return sb.sequence;
},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['ceylon.language','Iterable','$at','sequence']});
exports.Comprehension=Comprehension;
function ComprehensionIterator(nextFunc, $$targs$$, it) {
$init$ComprehensionIterator();
if (it===undefined) {it = new ComprehensionIterator.$$;}
it.$$targs$$=$$targs$$;
Basic(it);
it.next = nextFunc;
return it;
}
ComprehensionIterator.$crtmm$={$nm:'ComprehensionIterator',$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language','Iterator']};
function $init$ComprehensionIterator() {
if (ComprehensionIterator.$$===undefined) {
initTypeProto(ComprehensionIterator, 'ceylon.language::ComprehensionIterator',
$init$Basic(), $init$Iterator());
}
return ComprehensionIterator;
}
$init$ComprehensionIterator();
function Basic($basic){$init$Basic();if($basic===undefined)throwexc(InvocationException$meta$model("Cannot instantiate abstract class"),'?','?')
$Object($basic);Identifiable($basic);return $basic;}
Basic.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$Object},$ps:[],satisfies:[{t:Identifiable}],$an:function(){return[doc($CCMM$['ceylon.language'].Basic.$an.doc[0]),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared(),abstract()];},d:['$','Basic']};};
exports.Basic=Basic;function $init$Basic(){if(Basic.$$===undefined){initTypeProto(Basic,'ceylon.language::Basic',$init$$Object(),$init$Identifiable());
}
return Basic;}
exports.$init$Basic=$init$Basic;$init$Basic();
function Throwable($1,cause,$throwable){$init$Throwable();if($throwable===undefined)throwexc(InvocationException$meta$model("Cannot instantiate abstract class"),'?','?')
if($1===undefined){$1=null;}
$throwable.$1_=$1;if(cause===undefined){cause=null;}
$throwable.cause_=cause;if(typeof($init$native$Throwable$before)==='function')$init$native$Throwable$before($throwable);$throwable.$prop$getCause={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$cont:Throwable,$an:function(){return[doc("The underlying cause of this exception."),shared()];},d:['$','Throwable','$at','cause']};}};$throwable.$prop$getCause.get=function(){return cause};$throwable.$prop$get$1={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:String$}]},$cont:Throwable,$an:function(){return[doc("A description of the problem.")];},d:['$','Throwable','$at','description$ujuv']};}};$throwable.$prop$get$1.get=function(){return $1};$throwable.$prop$getMessage={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$at.message.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Throwable().$$.prototype.$prop$getCause)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Throwable','$at','message']};}};$throwable.$prop$getMessage.get=function(){return message};$throwable.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Throwable,$an:function(){return[shared(),actual(),$default()];},d:['$','Throwable','$at','string']};}};$throwable.$prop$getString.get=function(){return string};$throwable.$prop$getSuppressed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Throwable}}},$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$at.suppressed.$an.doc[0]),shared(),$native()];},d:['$','Throwable','$at','suppressed']};}};if(typeof($init$native$Throwable$after)==='function')$init$native$Throwable$after($throwable);return $throwable;}
Throwable.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'description',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:String$}]},$an:function(){return[doc("A description of the problem.")];}},{$nm:'cause',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[doc("The underlying cause of this exception."),shared()];}}],of:[{t:Exception},{t:$Error}],$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$an.doc[0]),by(["Gavin","Tom"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared(),$native(),abstract()];},d:['$','Throwable']};};
exports.Throwable=Throwable;function $init$Throwable(){if(Throwable.$$===undefined){initTypeProto(Throwable,'ceylon.language::Throwable',Basic);
(function($throwable){$defat($throwable,'cause',function(){return this.cause_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$cont:Throwable,$an:function(){return[doc("The underlying cause of this exception."),shared()];},d:['$','Throwable','$at','cause']};});$defat($throwable,'$1',function(){return this.$1_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:String$}]},$cont:Throwable,$an:function(){return[doc("A description of the problem.")];},d:['$','Throwable','$at','description$ujuv']};});$defat($throwable,'message',function(){var $throwable=this;return ($2=($3=$throwable.$1,$nn($3)?$3:($4=$throwable.cause,$nn($4)?$4.message:null)),$nn($2)?$2:"");},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$at.message.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Throwable().$$.prototype.$prop$getCause)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Throwable','$at','message']};});$defat($throwable,'string',function(){var $throwable=this;return className($throwable).plus(StringBuilder([" \"",$throwable.message.string,"\""]).string);},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Throwable,$an:function(){return[shared(),actual(),$default()];},d:['$','Throwable','$at','string']};});$throwable.printStackTrace=function (){var $throwable=this;return printStackTrace($throwable);};$throwable.printStackTrace.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[],$cont:Throwable,$an:function(){return[doc($CCMM$['ceylon.language'].Throwable.$m.printStackTrace.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),printStackTrace)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','Throwable','$m','printStackTrace']};};})(Throwable.$$.prototype);}
return Throwable;}
exports.$init$Throwable=$init$Throwable;$init$Throwable();var $2,$3,$4;function $init$native$Throwable$before(exc) {
var _caller=arguments.callee.caller.caller;
exc.stack_trace=[];
var ilc=0;
var ilf=null;
while(_caller) {
exc.stack_trace.push(_caller);
_caller = _caller.caller;
if (_caller===ilf) {
ilc++;
if (ilc>2) {
exc.stack_trace.push("CIRCULAR");
_caller = null;
}
} else if (ilc===0 && _caller && exc.stack_trace.contains(_caller)) {
ilc=1;
ilf=_caller;
}
}
}
function printStackTrace(exc, _write) {
if (_write===undefined)_write=getProcess().writeError;
var _c = className(exc);
if (exc.message.size > 0) {
_c += ' "' + exc.message + '"';
}
_write(_c);_write(getOperatingSystem().newline);
for (var i=0; i<exc.stack_trace.length; i++) {
var f = exc.stack_trace[i];
if (f == "CIRCULAR") {
_write("    (Infinite loop detected)");
_write(getOperatingSystem().newline);
return;
}
var mm = getrtmm$$(f);
if (mm) {
var _src = '';
if (i==0) {
if (exc.$loc && exc.$file) _src = ' (' + exc.$file + " " + exc.$loc + ')';
}
var pkn=mm.d[0];
if (pkn==='$')pkn='ceylon.language';
_write("    at " + pkn + "::" + mm.d[mm.d.length-1] + _src);_write(getOperatingSystem().newline);
}
}
}
printStackTrace.$crtmm$=function(){
return{mod:$CCMM$,d:['ceylon.language','printStackTrace'],$t:{t:Anything},$ps:[
{$nm:'exception',$t:{t:Throwable},$mt:'prm'},{$nm:'write',$t:{t:Callable,a:{Return:{t:Anything},Arguments:{t:'T',l:[{t:String$}]}}},$mt:'prm','$def':1}
]};};
exports.printStackTrace=printStackTrace;
$defat(Throwable.$$.prototype, 'suppressed', function(){
return this.$sups$||getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Throwable}}},$an:function(){return[shared(),$native()];},d:['$','Throwable','$at','suppressed']};});
function $Error($5,$6,$error){$init$$Error();if($error===undefined)$error=new $Error.$$;
if($5===undefined){$5=null;}
$error.$5_=$5;if($6===undefined){$6=null;}
$error.$6_=$6;Throwable($error.$5,$error.$6,$error);if(typeof($init$native$$Error$before)==='function')$init$native$$Error$before($error);if(typeof($init$native$$Error$after)==='function')$init$native$$Error$after($error);return $error;}
$Error.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Throwable},$ps:[{$nm:'description',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:String$}]},$an:function(){return[];}},{$nm:'cause',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].Error.$an.doc[0]),by(["Gavin","Tom"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared(),$native()];},d:['$','Error']};};
exports.$Error=$Error;function $init$$Error(){if($Error.$$===undefined){initTypeProto($Error,'ceylon.language::Error',$init$Throwable());
(function($error){$defat($error,'$5',function(){return this.$5_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:String$}]},$cont:$Error,d:['$','Error','$at','description$h6bqj3']};});$defat($error,'$6',function(){return this.$6_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$cont:$Error,d:['$','Error','$at','cause$2cem7o']};});})($Error.$$.prototype);}
return $Error;}
exports.$init$$Error=$init$$Error;$init$$Error();function Exception($7,$8,$exception){$init$Exception();if($exception===undefined)$exception=new Exception.$$;
if($7===undefined){$7=null;}
$exception.$7_=$7;if($8===undefined){$8=null;}
$exception.$8_=$8;Throwable($exception.$7,$exception.$8,$exception);if(typeof($init$native$Exception$before)==='function')$init$native$Exception$before($exception);if(typeof($init$native$Exception$after)==='function')$init$native$Exception$after($exception);return $exception;}
Exception.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Throwable},$ps:[{$nm:'description',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:String$}]},$an:function(){return[];}},{$nm:'cause',$mt:'prm',$def:1,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].Exception.$an.doc[0]),by(["Gavin","Tom"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared(),$native()];},d:['$','Exception']};};
exports.Exception=Exception;function $init$Exception(){if(Exception.$$===undefined){initTypeProto(Exception,'ceylon.language::Exception',$init$Throwable());
(function($exception){$defat($exception,'$7',function(){return this.$7_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:String$}]},$cont:Exception,d:['$','Exception','$at','description$pjrn76']};});$defat($exception,'$8',function(){return this.$8_;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Throwable}]},$cont:Exception,d:['$','Exception','$at','cause$unfagj']};});})(Exception.$$.prototype);}
return Exception;}
exports.$init$Exception=$init$Exception;$init$Exception();
function Iterable($$targs$$,$iterable){Category({Element$Category:{t:$Object}},$iterable);add_type_arg($iterable,'Element$Category',{t:$Object});set_type_args($iterable,$$targs$$);$iterable.$prop$getEmpty={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.empty.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','empty']};}};$iterable.$prop$getEmpty.get=function(){return empty};$iterable.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.size.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','size']};}};$iterable.$prop$getSize.get=function(){return size};$iterable.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$Iterable','Element$Iterable']},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.first.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','first']};}};$iterable.$prop$getFirst.get=function(){return first};$iterable.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.rest.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getFirst)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$at','rest']};}};$iterable.$prop$getRest.get=function(){return rest};$iterable.$prop$getSequence={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Iterable'}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.sequence.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','sequence']};}};$iterable.$prop$getSequence.get=function(){return sequence};$iterable.$prop$getCoalesced={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:'i',l:['Element$Iterable',{t:$Object}]},Absent$Iterable:{t:Null}}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.coalesced.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','coalesced']};}};$iterable.$prop$getCoalesced.get=function(){return coalesced};}
Iterable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Iterable:{'var':'out'},Absent$Iterable:{'var':'out','satisfies':[{t:Null}],'def':{t:Null}}},satisfies:[{t:Category,a:{Element$Category:{t:$Object}}}],$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Collection)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Iterable']};};
exports.Iterable=Iterable;function $init$Iterable(){if(Iterable.$$===undefined){initTypeProtoI(Iterable,'ceylon.language::Iterable',$init$Category());
(function($iterable){$iterable.iterator={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:Iterable,$an:function(){return[doc("An iterator for the elements belonging to this stream."),shared(),formal()];},d:['$','Iterable','$m','iterator']};}};$defat($iterable,'empty',function(){var $iterable=this;return $is($iterable.iterator().next(),{t:Finished});},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.empty.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','empty']};});$defat($iterable,'size',function(){var $iterable=this;return $iterable.count($JsCallable((function ($9){var $iterable=this;return true;}),[{$nm:'e',$mt:'prm',$t:'Element$Iterable',$an:function(){return[];}}],{Return$Callable:{t:$Boolean},Arguments$Callable:{t:'T',l:[$iterable.$$targs$$.Element$Iterable]}}));},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.size.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','size']};});$iterable.longerThan=function longerThan($a){var $iterable=this;if(($a<(0))){return true;}var $b=(0);function set$b($c){return $b=$c;};;var $e;for(var $d=$iterable.iterator();($e=$d.next())!==getFinished();){if((($f=$b,$b=$f.successor,$f)==$a)){return true;}var $f;}return false;};$iterable.longerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.longerThan.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getSize)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$m','longerThan']};};$iterable.shorterThan=function shorterThan($g){var $iterable=this;if(($g<=(0))){return false;}var $h=(0);function set$h($i){return $h=$i;};;var $k;for(var $j=$iterable.iterator();($k=$j.next())!==getFinished();){if((($h=$h.successor)==$g)){return false;}}return true;};$iterable.shorterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.shorterThan.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getSize)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$m','shorterThan']};};$iterable.contains=function ($l){var $iterable=this;return $iterable.any($JsCallable(ifExists($JsCallable(($m=$l,JsCallable($m,$m!==null?$m.equals:null)),[{$nm:'that',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],{Return$Callable:{t:$Boolean},Arguments$Callable:{t:'T',l:[{t:$Object}]}})),[{$nm:'p2',$mt:'prm',$t:{t:Anything}}],{Return$Callable:{t:$Boolean},Arguments$Callable:{t:'T',l:[{t:Anything}]}}));};$iterable.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[shared(),actual(),$default()];},d:['$','Iterable','$m','contains']};};$defat($iterable,'first',function(){var $iterable=this;return first($iterable,{Value$first:$iterable.$$targs$$.Element$Iterable,Absent$first:$iterable.$$targs$$.Absent$Iterable});},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$Iterable','Element$Iterable']},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.first.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','first']};});$defat($iterable,'last',function(){var $iterable=this;var $n=$iterable.first;function set$n($o){return $n=$o;};$prop$get$n={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$Iterable','Element$Iterable']},$cont:$iterable.$prop$getLast,$an:function(){return[variable()];},d:['$','Iterable','$at','last','$at','e$2w65yt']};}};$prop$get$n.get=function(){return $n};$prop$get$n.set=set$n;if(set$n.$crtmm$===undefined)set$n.$crtmm$=$prop$get$n.$crtmm$;;var $q;for(var $p=$iterable.iterator();($q=$p.next())!==getFinished();){$n=$q;}return $n;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$Iterable','Element$Iterable']},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.last.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','last']};});$defat($iterable,'rest',function(){var $iterable=this;return $iterable.skipping((1));},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.rest.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getFirst)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$at','rest']};});$defat($iterable,'sequence',function(){var $iterable=this;return SequenceBuilder({Element$SequenceBuilder:$iterable.$$targs$$.Element$Iterable}).appendAll($iterable).sequence;},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Iterable'}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.sequence.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','sequence']};});$iterable.$map=function ($r,$$$mptypes){var $iterable=this;return $sarg(function($s){switch($s){}return getFinished();},function(){return Comprehension(function(){var $t=$iterable.iterator();var $u=getFinished();var next$u=function(){return $u=$t.next();}
next$u();return function(){if($u!==getFinished()){var $v=$u;var $w=$r($v);next$u();return $w;}
return getFinished();}
},{Element$Iterable:$$$mptypes.Result$map,Absent$Iterable:{t:Null}});},{Element$Iterable:$$$mptypes.Result$map,Absent$Iterable:$iterable.$$targs$$.Absent$Iterable});};$iterable.$map.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Result$map',Absent$Iterable:'Absent$Iterable'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$map',$an:function(){return[doc("The mapping to apply to the elements.")];}}],$cont:Iterable,$tp:{Result$map:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.map.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.collect)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$m','map']};};$iterable.$filter=function ($x){var $iterable=this;return $sarg(function($y){switch($y){}return getFinished();},function(){return Comprehension(function(){var $z=$iterable.iterator();var $10=getFinished();var next$10=function(){while(($10=$z.next())!==getFinished()){if($x($10)){return $10;}
}
return getFinished();}
next$10();return function(){if($10!==getFinished()){var $11=$10;var $12=$11;next$10();return $12;}
return getFinished();}
},{Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}});},{Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}});};$iterable.$filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[doc("The predicate the elements must satisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.filter.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.select)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$m','filter']};};$iterable.fold=function fold($13,$14,$$$mptypes){var $iterable=this;var $15=$13;function set$15($16){return $15=$16;};;var $18;for(var $17=$iterable.iterator();($18=$17.next())!==getFinished();){$15=$14($15,$18);}return $15;};$iterable.fold.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$fold',$ps:[{$nm:'initial',$mt:'prm',$t:'Result$fold',$an:function(){return[];}},{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$fold',$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.fold.$m.accumulating$v516ij.$an.doc[0])];}}],$cont:Iterable,$tp:{Result$fold:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.fold.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','fold']};};$iterable.$reduce=function $reduce($19,$$$mptypes){var $iterable=this;var $1a=$iterable.iterator();var $1b;if(!$is(($1b=$1a.next()),{t:Finished})){var $1c=$1b;function set$1c($1d){return $1c=$1d;};var $1e;while(!$is(($1e=$1a.next()),{t:Finished})){$1c=$19($1c,$1e);}return $1c;}else {//assert at Iterable.ceylon (258:12-259:35)
var $1f;if(!($is(($1f=null),$iterable.$$targs$$.Absent$Iterable))) {throw wrapexc(AssertionError("iterable must be empty: \'is Absent null\' at Iterable.ceylon (259:19-259:34)"),'258:12-259:35','Iterable.ceylon'); }
return null;}};$iterable.$reduce.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Result$reduce','Element$Iterable','Absent$Iterable']},$ps:[{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$reduce',$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.reduce.$m.accumulating$hmg54e.$an.doc[0])];}}],$cont:Iterable,$tp:{Result$reduce:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.reduce.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','reduce']};};$iterable.find=function find($1g){var $iterable=this;;var $1i;for(var $1h=$iterable.iterator();($1i=$1h.next())!==getFinished();){if($1g($1i)){return $1i;}}return null;};$iterable.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Iterable']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[doc("The predicate the element must satisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.find.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','find']};};$iterable.findLast=function findLast($1j){var $iterable=this;var $1k=null;function set$1k($1l){return $1k=$1l;};;var $1n;for(var $1m=$iterable.iterator();($1n=$1m.next())!==getFinished();){if($1j($1n)){$1k=$1n;}}return $1k;};$iterable.findLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Iterable']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[doc("The predicate the element must satisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.findLast.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','findLast']};};$iterable.$sort=function ($1o){var $iterable=this;return internalSort($1o,$iterable,{Element$internalSort:$iterable.$$targs$$.Element$Iterable});};$iterable.$sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Iterable'}},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[doc("The function comparing pairs of elements.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.sort.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byIncreasing),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byDecreasing)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$m','sort']};};$iterable.collect=function ($1p,$$$mptypes){var $iterable=this;return $iterable.$map($1p,{Result$map:$$$mptypes.Result$collect}).sequence;};$iterable.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Result$collect'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[doc("The transformation applied to the elements.")];}}],$cont:Iterable,$tp:{Result$collect:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.collect.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$map)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$m','collect']};};$iterable.select=function ($1q){var $iterable=this;return $iterable.$filter($1q).sequence;};$iterable.select.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Iterable'}},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[doc("The predicate the elements must satisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.select.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$filter)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$m','select']};};$iterable.any=function any($1r){var $iterable=this;;var $1t;for(var $1s=$iterable.iterator();($1t=$1s.next())!==getFinished();){if($1r($1t)){return true;}}return false;};$iterable.any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[doc("The predicate that at least one element \nmust satisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.any.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','any']};};$iterable.$every=function $every($1u){var $iterable=this;;var $1w;for(var $1v=$iterable.iterator();($1w=$1v.next())!==getFinished();){if(!$1u($1w)){return false;}}return true;};$iterable.$every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[doc("The predicate that all elements must \nsatisfy.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.every.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','every']};};$iterable.skipping=function skipping($1x){var $iterable=this;if(($1x<=(0))){return $iterable;}else {var $1y=false;var $20=false;var $1z=(function(){function $21($$targs$$){var $$21=new $21.$$;
$$21.$$outer=$iterable;$$21.$$targs$$=$$targs$$;Iterable({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}},$$21);add_type_arg($$21,'Absent$Iterable',{t:Null});return $$21;
};$21.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:skipping,satisfies:[{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}}],d:['$','Iterable','$m','skipping','$o','iterable$i9dupy']};};function $init$$21(){if($21.$$===undefined){initTypeProto($21,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($$21){$$21.iterator=function iterator(){var $$21=this;var $22=$iterable.iterator();var $23=(0);function set$23($24){return $23=$24;};while(((($25=$23,$23=$25.successor,$25)<$1x)&&!$is($22.next(),{t:Finished}))){}var $25;return $22;};$$21.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$21,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','skipping','$o','iterable$i9dupy','$m','iterator']};};})($21.$$.prototype);}
return $21;}
$init$$21();var $26;function get$26(){if($26===undefined){$26=$init$$21()({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}});$26.$crtmm$=get$26.$crtmm$;}
return $26;}
get$26.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$21},$cont:skipping,d:['$','Iterable','$m','skipping','$o','iterable$i9dupz']};};$prop$get$26={get:get$26,$crtmm$:get$26.$crtmm$};get$21=get$26;$prop$get$21=get$26;return get$26();}());if($1z!==undefined){return $1z;}}
};$iterable.skipping.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}},$ps:[{$nm:'skip',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.skipping.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','skipping']};};$iterable.taking=function taking($27){var $iterable=this;if(($27<=(0))){return getEmpty();}else {var $28=false;var $2a=false;var $29=(function(){function $2b($$targs$$){var $$2b=new $2b.$$;
$$2b.$$outer=$iterable;$$2b.$$targs$$=$$targs$$;Iterable({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}},$$2b);add_type_arg($$2b,'Absent$Iterable',{t:Null});$$2b.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Iterable']},$cont:$2b,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','taking','$o','iterable$5dvy9n','$at','first']};}};$$2b.$prop$getFirst.get=function(){return first};return $$2b;
};$2b.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:taking,satisfies:[{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}}],d:['$','Iterable','$m','taking','$o','iterable$5dvy9n']};};function $init$$2b(){if($2b.$$===undefined){initTypeProto($2b,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($$2b){$$2b.iterator=function iterator(){var $$2b=this;var $2c=$iterable.iterator();function $2d($$targs$$){var $$2d=new $2d.$$;
$$2d.$$outer=$$2b;$$2d.$$targs$$=$$targs$$;Iterator({Element$Iterator:$iterable.$$targs$$.Element$Iterable},$$2d);$$2d.$2e_=(0);$$2d.$prop$get$2e={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$2d,$an:function(){return[variable()];},d:['$','Iterable','$m','taking','$o','iterable$5dvy9n','$m','iterator','$o','iterator$g1dzdj','$at','i$m08yxx']};}};$$2d.$prop$get$2e.get=function(){return $2e};return $$2d;
};$2d.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$m','taking','$o','iterable$5dvy9n','$m','iterator','$o','iterator$g1dzdj']};};function $init$$2d(){if($2d.$$===undefined){initTypeProto($2d,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($$2d){$defat($$2d,'$2e',function(){return this.$2e_;},function($2f){return this.$2e_=$2f;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$2d,$an:function(){return[variable()];},d:['$','Iterable','$m','taking','$o','iterable$5dvy9n','$m','iterator','$o','iterator$g1dzdj','$at','i$m08yxx']};});$$2d.next=function next(){var $$2d=this;return ($2g=((($$2d.$2e=$$2d.$2e.successor)>$27)?getFinished():null),$nn($2g)?$2g:$2c.next());var $2g;};$$2d.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$2d,$an:function(){return[actual(),shared()];},d:['$','Iterable','$m','taking','$o','iterable$5dvy9n','$m','iterator','$o','iterator$g1dzdj','$m','next']};};})($2d.$$.prototype);}
return $2d;}
$init$$2d();var $2h;function get$2h(){if($2h===undefined){$2h=$init$$2d()({Element$Iterator:$iterable.$$targs$$.Element$Iterable});$2h.$crtmm$=get$2h.$crtmm$;}
return $2h;}
get$2h.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$2d},$cont:iterator,d:['$','Iterable','$m','taking','$o','iterable$5dvy9n','$m','iterator','$o','iterator$g1dzdi']};};$prop$get$2h={get:get$2h,$crtmm$:get$2h.$crtmm$};get$2d=get$2h;$prop$get$2d=get$2h;return get$2h();};$$2b.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$2b,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','taking','$o','iterable$5dvy9n','$m','iterator']};};$defat($$2b,'first',function(){var $$2b=this;return $iterable.first;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Iterable']},$cont:$2b,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','taking','$o','iterable$5dvy9n','$at','first']};});})($2b.$$.prototype);}
return $2b;}
$init$$2b();var $2i;function get$2i(){if($2i===undefined){$2i=$init$$2b()({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}});$2i.$crtmm$=get$2i.$crtmm$;}
return $2i;}
get$2i.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$2b},$cont:taking,d:['$','Iterable','$m','taking','$o','iterable$5dvy9o']};};$prop$get$2i={get:get$2i,$crtmm$:get$2i.$crtmm$};get$2b=get$2i;$prop$get$2b=get$2i;return get$2i();}());if($29!==undefined){return $29;}}
};$iterable.taking.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}},$ps:[{$nm:'take',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.taking.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','taking']};};$iterable.skippingWhile=function skippingWhile($2j){var $iterable=this;function $2k($$targs$$){var $$2k=new $2k.$$;
$$2k.$$outer=$iterable;$$2k.$$targs$$=$$targs$$;Iterable({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}},$$2k);add_type_arg($$2k,'Absent$Iterable',{t:Null});return $$2k;
};$2k.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:skippingWhile,satisfies:[{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}}],d:['$','Iterable','$m','skippingWhile','$o','iterable$pleiju']};};function $init$$2k(){if($2k.$$===undefined){initTypeProto($2k,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($$2k){$$2k.iterator=function iterator(){var $$2k=this;var $2l=$iterable.iterator();var $2m;while(!$is(($2m=$2l.next()),{t:Finished})){if(!$2j($2m)){var $2n=false;var $2p=false;var $2o=(function(){function $2q($$targs$$){var $$2q=new $2q.$$;
$$2q.$$outer=$$2k;$$2q.$$targs$$=$$targs$$;Iterator({Element$Iterator:$iterable.$$targs$$.Element$Iterable},$$2q);$$2q.$2r_=true;$$2q.$prop$get$2r={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:$2q,$an:function(){return[variable()];},d:['$','Iterable','$m','skippingWhile','$o','iterable$pleiju','$m','iterator','$o','iterator$7zo1h2','$at','first$38yxld']};}};$$2q.$prop$get$2r.get=function(){return $2r};return $$2q;
};$2q.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$m','skippingWhile','$o','iterable$pleiju','$m','iterator','$o','iterator$7zo1h2']};};function $init$$2q(){if($2q.$$===undefined){initTypeProto($2q,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($$2q){$defat($$2q,'$2r',function(){return this.$2r_;},function($2s){return this.$2r_=$2s;},function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:$2q,$an:function(){return[variable()];},d:['$','Iterable','$m','skippingWhile','$o','iterable$pleiju','$m','iterator','$o','iterator$7zo1h2','$at','first$38yxld']};});$$2q.next=function next(){var $$2q=this;if($$2q.$2r){$$2q.$2r=false;return $2m;}else {return $2l.next();}};$$2q.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$2q,$an:function(){return[actual(),shared()];},d:['$','Iterable','$m','skippingWhile','$o','iterable$pleiju','$m','iterator','$o','iterator$7zo1h2','$m','next']};};})($2q.$$.prototype);}
return $2q;}
$init$$2q();var $2t;function get$2t(){if($2t===undefined){$2t=$init$$2q()({Element$Iterator:$iterable.$$targs$$.Element$Iterable});$2t.$crtmm$=get$2t.$crtmm$;}
return $2t;}
get$2t.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$2q},$cont:iterator,d:['$','Iterable','$m','skippingWhile','$o','iterable$pleiju','$m','iterator','$o','iterator$7zo1h3']};};$prop$get$2t={get:get$2t,$crtmm$:get$2t.$crtmm$};get$2q=get$2t;$prop$get$2q=get$2t;return get$2t();}());if($2o!==undefined){return $2o;}}
}return getEmptyIterator();};$$2k.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$2k,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','skippingWhile','$o','iterable$pleiju','$m','iterator']};};})($2k.$$.prototype);}
return $2k;}
$init$$2k();var $2u;function get$2u(){if($2u===undefined){$2u=$init$$2k()({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}});$2u.$crtmm$=get$2u.$crtmm$;}
return $2u;}
get$2u.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$2k},$cont:skippingWhile,d:['$','Iterable','$m','skippingWhile','$o','iterable$pleijt']};};$prop$get$2u={get:get$2u,$crtmm$:get$2u.$crtmm$};get$2k=get$2u;$prop$get$2k=get$2u;return get$2u();};$iterable.skippingWhile.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}},$ps:[{$nm:'skip',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.skippingWhile.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','skippingWhile']};};$iterable.takingWhile=function takingWhile($2v){var $iterable=this;function $2w($$targs$$){var $$2w=new $2w.$$;
$$2w.$$outer=$iterable;$$2w.$$targs$$=$$targs$$;Iterable({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}},$$2w);add_type_arg($$2w,'Absent$Iterable',{t:Null});return $$2w;
};$2w.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:takingWhile,satisfies:[{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}}],d:['$','Iterable','$m','takingWhile','$o','iterable$1denwr']};};function $init$$2w(){if($2w.$$===undefined){initTypeProto($2w,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($$2w){$$2w.iterator=function iterator(){var $$2w=this;var $2x=$iterable.iterator();function $2y($$targs$$){var $$2y=new $2y.$$;
$$2y.$$outer=$$2w;$$2y.$$targs$$=$$targs$$;Iterator({Element$Iterator:$iterable.$$targs$$.Element$Iterable},$$2y);$$2y.$2z_=true;$$2y.$prop$get$2z={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:$2y,$an:function(){return[variable()];},d:['$','Iterable','$m','takingWhile','$o','iterable$1denwr','$m','iterator','$o','iterator$lkmbyf','$at','alive$la287b']};}};$$2y.$prop$get$2z.get=function(){return $2z};return $$2y;
};$2y.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$m','takingWhile','$o','iterable$1denwr','$m','iterator','$o','iterator$lkmbyf']};};function $init$$2y(){if($2y.$$===undefined){initTypeProto($2y,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($$2y){$defat($$2y,'$2z',function(){return this.$2z_;},function($30){return this.$2z_=$30;},function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:$2y,$an:function(){return[variable()];},d:['$','Iterable','$m','takingWhile','$o','iterable$1denwr','$m','iterator','$o','iterator$lkmbyf','$at','alive$la287b']};});$$2y.next=function next(){var $$2y=this;var $31;if($$2y.$2z&&!$is(($31=$2x.next()),{t:Finished})){if($2v($31)){return $31;}else {$$2y.$2z=false;}}return getFinished();};$$2y.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$2y,$an:function(){return[actual(),shared()];},d:['$','Iterable','$m','takingWhile','$o','iterable$1denwr','$m','iterator','$o','iterator$lkmbyf','$m','next']};};})($2y.$$.prototype);}
return $2y;}
$init$$2y();var $32;function get$32(){if($32===undefined){$32=$init$$2y()({Element$Iterator:$iterable.$$targs$$.Element$Iterable});$32.$crtmm$=get$32.$crtmm$;}
return $32;}
get$32.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$2y},$cont:iterator,d:['$','Iterable','$m','takingWhile','$o','iterable$1denwr','$m','iterator','$o','iterator$lkmbye']};};$prop$get$32={get:get$32,$crtmm$:get$32.$crtmm$};get$2y=get$32;$prop$get$2y=get$32;return get$32();};$$2w.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$2w,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','takingWhile','$o','iterable$1denwr','$m','iterator']};};})($2w.$$.prototype);}
return $2w;}
$init$$2w();var $33;function get$33(){if($33===undefined){$33=$init$$2w()({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:{t:Null}});$33.$crtmm$=get$33.$crtmm$;}
return $33;}
get$33.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$2w},$cont:takingWhile,d:['$','Iterable','$m','takingWhile','$o','iterable$1denws']};};$prop$get$33={get:get$33,$crtmm$:get$33.$crtmm$};get$2w=get$33;$prop$get$2w=get$33;return get$33();};$iterable.takingWhile.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:{t:Null}}},$ps:[{$nm:'take',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.takingWhile.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','takingWhile']};};$iterable.by=function by($34){var $iterable=this;//assert at Iterable.ceylon (493:8-494:25)
if(!(($34>(0)))) {throw wrapexc(AssertionError("step size must be greater than zero: \'step > 0\' at Iterable.ceylon (494:15-494:24)"),'493:8-494:25','Iterable.ceylon'); }
if(($34==(1))){return $iterable;}else {var $35=false;var $37=false;var $36=(function(){function $38($$targs$$){var $$38=new $38.$$;
$$38.$$outer=$iterable;$$38.$$targs$$=$$targs$$;Iterable({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:$iterable.$$targs$$.Absent$Iterable},$$38);return $$38;
};$38.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:by,satisfies:[{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}}],d:['$','Iterable','$m','by','$o','iterable$apgy94']};};function $init$$38(){if($38.$$===undefined){initTypeProto($38,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($$38){$$38.iterator=function iterator(){var $$38=this;var $39=$iterable.iterator();function $3a($$targs$$){var $$3a=new $3a.$$;
$$3a.$$outer=$$38;$$3a.$$targs$$=$$targs$$;Iterator({Element$Iterator:$iterable.$$targs$$.Element$Iterable},$$3a);return $$3a;
};$3a.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$m','by','$o','iterable$apgy94','$m','iterator','$o','iterator$6967iy']};};function $init$$3a(){if($3a.$$===undefined){initTypeProto($3a,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($$3a){$$3a.next=function next(){var $$3a=this;var $3b=$39.next();var $3c=(0);function set$3c($3d){return $3c=$3d;};while(((($3c=$3c.successor)<$34)&&!$is($39.next(),{t:Finished}))){}return $3b;};$$3a.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$3a,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','by','$o','iterable$apgy94','$m','iterator','$o','iterator$6967iy','$m','next']};};})($3a.$$.prototype);}
return $3a;}
$init$$3a();var $3e;function get$3e(){if($3e===undefined){$3e=$init$$3a()({Element$Iterator:$iterable.$$targs$$.Element$Iterable});$3e.$crtmm$=get$3e.$crtmm$;}
return $3e;}
get$3e.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$3a},$cont:iterator,d:['$','Iterable','$m','by','$o','iterable$apgy94','$m','iterator','$o','iterator$6967ix']};};$prop$get$3e={get:get$3e,$crtmm$:get$3e.$crtmm$};get$3a=get$3e;$prop$get$3a=get$3e;return get$3e();};$$38.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$38,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','by','$o','iterable$apgy94','$m','iterator']};};})($38.$$.prototype);}
return $38;}
$init$$38();var $3f;function get$3f(){if($3f===undefined){$3f=$init$$38()({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:$iterable.$$targs$$.Absent$Iterable});$3f.$crtmm$=get$3f.$crtmm$;}
return $3f;}
get$3f.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$38},$cont:by,d:['$','Iterable','$m','by','$o','iterable$apgy93']};};$prop$get$3f={get:get$3f,$crtmm$:get$3f.$crtmm$};get$38=get$3f;$prop$get$38=get$3f;return get$3f();}());if($36!==undefined){return $36;}}
};$iterable.by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}},$ps:[{$nm:'step',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.by.$an.doc[0]),$throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),AssertionError),"if the given step size is nonpositive, \ni.e. `step<1`"),shared(),$default()];},d:['$','Iterable','$m','by']};};$iterable.count=function count($3g){var $iterable=this;var $3h=(0);function set$3h($3i){return $3h=$3i;};;var $3k;for(var $3j=$iterable.iterator();($3k=$3j.next())!==getFinished();){if($3g($3k)){($3l=$3h,$3h=$3l.successor,$3l);var $3l;}}return $3h;};$iterable.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[doc("The predicate satisfied by the elements to\nbe counted.")];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.count.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','count']};};$defat($iterable,'coalesced',function(){var $iterable=this;return $sarg(function($3m){switch($3m){}return getFinished();},function(){return Comprehension(function(){var $3p;var $3n=$iterable.iterator();var $3o=getFinished();var $3p;var next$3o=function(){while(($3o=$3n.next())!==getFinished()){if(($3p=$3o)!==null){return $3o;}
}
return getFinished();}
next$3o();return function(){if($3o!==getFinished()){var $3q=$3o;var $3r=$3p;next$3o();return $3r;}
return getFinished();}
},{Element$Iterable:{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]},Absent$Iterable:{t:Null}});},{Element$Iterable:{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]},Absent$Iterable:{t:Null}});},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:'i',l:['Element$Iterable',{t:$Object}]},Absent$Iterable:{t:Null}}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.coalesced.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','coalesced']};});$defat($iterable,'indexed',function(){var $iterable=this;function $3s($$targs$$){var $$3s=new $3s.$$;
$$3s.$$outer=$iterable;$$3s.$$targs$$=$$targs$$;Iterable({Element$Iterable:{t:Entry,a:{Item$Entry:{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]},Key$Entry:{t:Integer}}},Absent$Iterable:{t:Null}},$$3s);add_type_arg($$3s,'Element$Iterable',{t:Entry,a:{Item$Entry:{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]},Key$Entry:{t:Integer}}});add_type_arg($$3s,'Absent$Iterable',{t:Null});$$3s.$prop$get$3t={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}},$cont:$3s,d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7','$at','orig$i2xds1']};}};$$3s.$prop$get$3t.get=function(){return $3t};return $$3s;
};$3s.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:$$3s.$prop$getIndexed,satisfies:[{t:Iterable,a:{Element$Iterable:{t:Entry,a:{Item$Entry:{t:'i',l:['Element$Iterable',{t:$Object}]},Key$Entry:{t:Integer}}},Absent$Iterable:{t:Null}}}],d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7']};};function $init$$3s(){if($3s.$$===undefined){initTypeProto($3s,'ceylon.language::Iterable.indexes',Basic,$init$Iterable());
(function($$3s){$defat($$3s,'$3t',function(){var $$3s=this;return $iterable;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}},$cont:$3s,d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7','$at','orig$i2xds1']};});$$3s.iterator=function iterator(){var $$3s=this;function $3u($$targs$$){var $$3u=new $3u.$$;
$$3u.$$outer=$$3s;$$3u.$$targs$$=$$targs$$;Iterator({Element$Iterator:{t:Entry,a:{Item$Entry:{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]},Key$Entry:{t:Integer}}}},$$3u);add_type_arg($$3u,'Element$Iterator',{t:Entry,a:{Item$Entry:{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]},Key$Entry:{t:Integer}}});$$3u.$3v_=$$3s.$3t.iterator();$$3u.$prop$get$3v={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:$3u,d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7','$m','iterator','$o','iterator$79c00r','$at','iter$3fjcvm']};}};$$3u.$prop$get$3v.get=function(){return $3v};$$3u.$3w_=(0);$$3u.$prop$get$3w={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$3u,$an:function(){return[variable()];},d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7','$m','iterator','$o','iterator$79c00r','$at','i$5tf4cp']};}};$$3u.$prop$get$3w.get=function(){return $3w};return $$3u;
};$3u.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:{t:Entry,a:{Item$Entry:{t:'i',l:['Element$Iterable',{t:$Object}]},Key$Entry:{t:Integer}}}}}],d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7','$m','iterator','$o','iterator$79c00r']};};function $init$$3u(){if($3u.$$===undefined){initTypeProto($3u,'ceylon.language::Iterable.indexes.iterator',Basic,$init$Iterator());
(function($$3u){$defat($$3u,'$3v',function(){return this.$3v_;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:$3u,d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7','$m','iterator','$o','iterator$79c00r','$at','iter$3fjcvm']};});$defat($$3u,'$3w',function(){return this.$3w_;},function($3x){return this.$3w_=$3x;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$3u,$an:function(){return[variable()];},d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7','$m','iterator','$o','iterator$79c00r','$at','i$5tf4cp']};});$$3u.next=function next(){var $$3u=this;var $3y=$$3u.$3v.next();function set$3y($3z){return $3y=$3z;};while(!exists($3y)){($40=$$3u.$3w,$$3u.$3w=$40.successor,$40);var $40;$3y=$$3u.$3v.next();}//assert at Iterable.ceylon (570:24-570:48)
var $41;if(!(($41=$3y)!==null)) {throw wrapexc(AssertionError("Assertion failed: \'exists n = next\' at Iterable.ceylon (570:31-570:47)"),'570:24-570:48','Iterable.ceylon'); }
var $42;if(!$is(($42=$41),{t:Finished})){return Entry(($43=$$3u.$3w,$$3u.$3w=$43.successor,$43),$42,{Item$Entry:{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]},Key$Entry:{t:Integer}});var $43;}else {return getFinished();}};$$3u.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Entry,a:{Item$Entry:{t:'i',l:['Element$Iterable',{t:$Object}]},Key$Entry:{t:Integer}}},{t:Finished}]},$ps:[],$cont:$3u,$an:function(){return[shared(),actual()];},d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7','$m','iterator','$o','iterator$79c00r','$m','next']};};})($3u.$$.prototype);}
return $3u;}
$init$$3u();var $44;function get$44(){if($44===undefined){$44=$init$$3u()({Element$Iterator:{t:Entry,a:{Item$Entry:{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]},Key$Entry:{t:Integer}}}});$44.$crtmm$=get$44.$crtmm$;}
return $44;}
get$44.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$3u},$cont:iterator,d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7','$m','iterator','$o','iterator$79c00s']};};$prop$get$44={get:get$44,$crtmm$:get$44.$crtmm$};get$3u=get$44;$prop$get$3u=get$44;return get$44();};$$3s.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:Entry,a:{Item$Entry:{t:'i',l:['Element$Iterable',{t:$Object}]},Key$Entry:{t:Integer}}}}},$ps:[],$cont:$3s,$an:function(){return[shared(),actual()];},d:['$','Iterable','$at','indexed','$o','indexes$yhfzf7','$m','iterator']};};})($3s.$$.prototype);}
return $3s;}
$init$$3s();var $45;function get$45(){if($45===undefined){$45=$init$$3s()({Element$Iterable:{t:Entry,a:{Item$Entry:{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]},Key$Entry:{t:Integer}}},Absent$Iterable:{t:Null}});$45.$crtmm$=get$45.$crtmm$;}
return $45;}
get$45.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$3s},$cont:$$3s.$prop$getIndexed,d:['$','Iterable','$at','indexed','$o','indexes$yhfzf6']};};$prop$get$45={get:get$45,$crtmm$:get$45.$crtmm$};get$3s=get$45;$prop$get$3s=get$45;return get$45();},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:Entry,a:{Item$Entry:{t:'i',l:['Element$Iterable',{t:$Object}]},Key$Entry:{t:Integer}}},Absent$Iterable:{t:Null}}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.indexed.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$at','indexed']};});$iterable.following=function following($46,$$$mptypes){var $iterable=this;function $47($$targs$$){var $$47=new $47.$$;
$$47.$$outer=$iterable;$$47.$$targs$$=$$targs$$;Iterable({Element$Iterable:{t:'u',l:[$iterable.$$targs$$.Element$Iterable,$$$mptypes.Other$following]},Absent$Iterable:{t:Nothing}},$$47);return $$47;
};$47.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:following,satisfies:[{t:Iterable,a:{Element$Iterable:{t:'u',l:['Element$Iterable','Other$following']},Absent$Iterable:{t:Nothing}}}],d:['$','Iterable','$m','following','$o','cons$o5wpzq']};};function $init$$47(){if($47.$$===undefined){initTypeProto($47,'ceylon.language::Iterable.cons',Basic,$init$Iterable());
(function($$47){$$47.iterator=function iterator(){var $$47=this;var $48=$iterable.iterator();function $49($$targs$$){var $$49=new $49.$$;
$$49.$$outer=$$47;$$49.$$targs$$=$$targs$$;Iterator({Element$Iterator:{t:'u',l:[$iterable.$$targs$$.Element$Iterable,$$$mptypes.Other$following]}},$$49);$$49.$4a_=true;$$49.$prop$get$4a={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:$49,$an:function(){return[variable()];},d:['$','Iterable','$m','following','$o','cons$o5wpzq','$m','iterator','$o','iterator$hvjwys','$at','first$9x4vmp']};}};$$49.$prop$get$4a.get=function(){return $4a};return $$49;
};$49.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$Iterable','Other$following']}}}],d:['$','Iterable','$m','following','$o','cons$o5wpzq','$m','iterator','$o','iterator$hvjwys']};};function $init$$49(){if($49.$$===undefined){initTypeProto($49,'ceylon.language::Iterable.cons.iterator',Basic,$init$Iterator());
(function($$49){$defat($$49,'$4a',function(){return this.$4a_;},function($4b){return this.$4a_=$4b;},function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:$49,$an:function(){return[variable()];},d:['$','Iterable','$m','following','$o','cons$o5wpzq','$m','iterator','$o','iterator$hvjwys','$at','first$9x4vmp']};});$$49.next=function next(){var $$49=this;if($$49.$4a){$$49.$4a=false;return $46;}else {return $48.next();}};$$49.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable','Other$following',{t:Finished}]},$ps:[],$cont:$49,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','following','$o','cons$o5wpzq','$m','iterator','$o','iterator$hvjwys','$m','next']};};})($49.$$.prototype);}
return $49;}
$init$$49();var $4c;function get$4c(){if($4c===undefined){$4c=$init$$49()({Element$Iterator:{t:'u',l:[$iterable.$$targs$$.Element$Iterable,$$$mptypes.Other$following]}});$4c.$crtmm$=get$4c.$crtmm$;}
return $4c;}
get$4c.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$49},$cont:iterator,d:['$','Iterable','$m','following','$o','cons$o5wpzq','$m','iterator','$o','iterator$hvjwyt']};};$prop$get$4c={get:get$4c,$crtmm$:get$4c.$crtmm$};get$49=get$4c;$prop$get$49=get$4c;return get$4c();};$$47.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$Iterable','Other$following']}}},$ps:[],$cont:$47,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','following','$o','cons$o5wpzq','$m','iterator']};};})($47.$$.prototype);}
return $47;}
$init$$47();var $4d;function get$4d(){if($4d===undefined){$4d=$init$$47()({Element$Iterable:{t:'u',l:[$iterable.$$targs$$.Element$Iterable,$$$mptypes.Other$following]},Absent$Iterable:{t:Nothing}});$4d.$crtmm$=get$4d.$crtmm$;}
return $4d;}
get$4d.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$47},$cont:following,d:['$','Iterable','$m','following','$o','cons$o5wpzr']};};$prop$get$4d={get:get$4d,$crtmm$:get$4d.$crtmm$};get$47=get$4d;$prop$get$47=get$4d;return get$4d();};$iterable.following.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:'u',l:['Element$Iterable','Other$following']},Absent$Iterable:{t:Nothing}}},$ps:[{$nm:'head',$mt:'prm',$t:'Other$following',$an:function(){return[];}}],$cont:Iterable,$tp:{Other$following:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.following.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','following']};};$iterable.chain=function chain($4e,$$$mptypes){var $iterable=this;function $4f($$targs$$){var $$4f=new $4f.$$;
$$4f.$$outer=$iterable;$$4f.$$targs$$=$$targs$$;Iterable({Element$Iterable:{t:'u',l:[$iterable.$$targs$$.Element$Iterable,$$$mptypes.Other$chain]},Absent$Iterable:{t:'i',l:[$iterable.$$targs$$.Absent$Iterable,$$$mptypes.OtherAbsent$chain]}},$$4f);return $$4f;
};$4f.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:chain,satisfies:[{t:Iterable,a:{Element$Iterable:{t:'u',l:['Element$Iterable','Other$chain']},Absent$Iterable:{t:'i',l:['Absent$Iterable','OtherAbsent$chain']}}}],d:['$','Iterable','$m','chain','$o','chained$xefe59']};};function $init$$4f(){if($4f.$$===undefined){initTypeProto($4f,'ceylon.language::Iterable.chained',Basic,$init$Iterable());
(function($$4f){$$4f.iterator=function (){var $$4f=this;return ChainedIterator($iterable,$4e,{Other$ChainedIterator:$$$mptypes.Other$chain,Element$ChainedIterator:$iterable.$$targs$$.Element$Iterable});};$$4f.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$Iterable','Other$chain']}}},$ps:[],$cont:$4f,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','chain','$o','chained$xefe59','$m','iterator']};};})($4f.$$.prototype);}
return $4f;}
$init$$4f();var $4g;function get$4g(){if($4g===undefined){$4g=$init$$4f()({Element$Iterable:{t:'u',l:[$iterable.$$targs$$.Element$Iterable,$$$mptypes.Other$chain]},Absent$Iterable:{t:'i',l:[$iterable.$$targs$$.Absent$Iterable,$$$mptypes.OtherAbsent$chain]}});$4g.$crtmm$=get$4g.$crtmm$;}
return $4g;}
get$4g.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$4f},$cont:chain,d:['$','Iterable','$m','chain','$o','chained$xefe5a']};};$prop$get$4g={get:get$4g,$crtmm$:get$4g.$crtmm$};get$4f=get$4g;$prop$get$4f=get$4g;return get$4g();};$iterable.chain.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:'u',l:['Element$Iterable','Other$chain']},Absent$Iterable:{t:'i',l:['Absent$Iterable','OtherAbsent$chain']}}},$ps:[{$nm:'other',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Other$chain',Absent$Iterable:'OtherAbsent$chain'}},$an:function(){return[];}}],$cont:Iterable,$tp:{Other$chain:{},OtherAbsent$chain:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.chain.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','chain']};};$iterable.defaultNullElements=function ($4h,$$$mptypes){var $iterable=this;return $sarg(function($4i){switch($4i){}return getFinished();},function(){return Comprehension(function(){var $4j=$iterable.iterator();var $4k=getFinished();var next$4k=function(){return $4k=$4j.next();}
next$4k();return function(){if($4k!==getFinished()){var $4l=$4k;var $4m=($4n=$4l,$nn($4n)?$4n:$4h);next$4k();return $4m;}
return getFinished();}
},{Element$Iterable:{t:'u',l:[$$$mptypes.Default$defaultNullElements,{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]}]},Absent$Iterable:{t:Null}});},{Element$Iterable:{t:'u',l:[$$$mptypes.Default$defaultNullElements,{t:'i',l:[$iterable.$$targs$$.Element$Iterable,{t:$Object}]}]},Absent$Iterable:$iterable.$$targs$$.Absent$Iterable});};$iterable.defaultNullElements.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:'u',l:[{t:'i',l:['Element$Iterable',{t:$Object}]},'Default$defaultNullElements']},Absent$Iterable:'Absent$Iterable'}},$ps:[{$nm:'defaultValue',$mt:'prm',$t:'Default$defaultNullElements',$an:function(){return[doc("A default value that replaces `null` elements.")];}}],$cont:Iterable,$tp:{Default$defaultNullElements:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.defaultNullElements.$an.doc[0]),shared(),$default()];},d:['$','Iterable','$m','defaultNullElements']};};$defat($iterable,'string',function(){var $iterable=this;if($iterable.empty){return "{}";}else {var $4o=commaList($iterable.taking((30)));$prop$get$4o={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:$iterable.$prop$getString,d:['$','Iterable','$at','string','$at','list$4ffe1m']};}};$prop$get$4o.get=function(){return $4o};return StringBuilder(["{ ",($4p=($iterable.longerThan((30))?$4o.plus(", ..."):null),$nn($4p)?$4p:$4o).string," }"]).string;var $4p;}},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.string.$an.doc[0]),shared(),actual(),$default()];},d:['$','Iterable','$at','string']};});$defat($iterable,'cycled',function(){var $iterable=this;function $4q($$targs$$){var $$4q=new $4q.$$;
$$4q.$$outer=$iterable;$$4q.$$targs$$=$$targs$$;Iterable({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:$iterable.$$targs$$.Absent$Iterable},$$4q);$$4q.$prop$get$4r={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}},$cont:$4q,d:['$','Iterable','$at','cycled','$o','iterable$wvnke4','$at','orig$ki8ey0']};}};$$4q.$prop$get$4r.get=function(){return $4r};return $$4q;
};$4q.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:$$4q.$prop$getCycled,satisfies:[{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}}],d:['$','Iterable','$at','cycled','$o','iterable$wvnke4']};};function $init$$4q(){if($4q.$$===undefined){initTypeProto($4q,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($$4q){$defat($$4q,'$4r',function(){var $$4q=this;return $iterable;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}},$cont:$4q,d:['$','Iterable','$at','cycled','$o','iterable$wvnke4','$at','orig$ki8ey0']};});$$4q.iterator=function iterator(){var $$4q=this;function $4s($$targs$$){var $$4s=new $4s.$$;
$$4s.$$outer=$$4q;$$4s.$$targs$$=$$targs$$;Iterator({Element$Iterator:$iterable.$$targs$$.Element$Iterable},$$4s);$$4s.$4t_=getEmptyIterator();$$4s.$prop$get$4t={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:$4s,$an:function(){return[variable()];},d:['$','Iterable','$at','cycled','$o','iterable$wvnke4','$m','iterator','$o','iterator$cxriy6','$at','iter$iqbxnv']};}};$$4s.$prop$get$4t.get=function(){return $4t};return $$4s;
};$4s.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$at','cycled','$o','iterable$wvnke4','$m','iterator','$o','iterator$cxriy6']};};function $init$$4s(){if($4s.$$===undefined){initTypeProto($4s,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($$4s){$defat($$4s,'$4t',function(){return this.$4t_;},function($4u){return this.$4t_=$4u;},function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:$4s,$an:function(){return[variable()];},d:['$','Iterable','$at','cycled','$o','iterable$wvnke4','$m','iterator','$o','iterator$cxriy6','$at','iter$iqbxnv']};});$$4s.next=function next(){var $$4s=this;var $4v;if(!$is(($4v=$$4s.$4t.next()),{t:Finished})){return $4v;}else {$$4s.$4t=$$4q.$4r.iterator();return $$4s.$4t.next();}};$$4s.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$4s,$an:function(){return[shared(),actual()];},d:['$','Iterable','$at','cycled','$o','iterable$wvnke4','$m','iterator','$o','iterator$cxriy6','$m','next']};};})($4s.$$.prototype);}
return $4s;}
$init$$4s();var $4w;function get$4w(){if($4w===undefined){$4w=$init$$4s()({Element$Iterator:$iterable.$$targs$$.Element$Iterable});$4w.$crtmm$=get$4w.$crtmm$;}
return $4w;}
get$4w.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$4s},$cont:iterator,d:['$','Iterable','$at','cycled','$o','iterable$wvnke4','$m','iterator','$o','iterator$cxriy5']};};$prop$get$4w={get:get$4w,$crtmm$:get$4w.$crtmm$};get$4s=get$4w;$prop$get$4s=get$4w;return get$4w();};$$4q.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$4q,$an:function(){return[shared(),actual()];},d:['$','Iterable','$at','cycled','$o','iterable$wvnke4','$m','iterator']};};})($4q.$$.prototype);}
return $4q;}
$init$$4q();var $4x;function get$4x(){if($4x===undefined){$4x=$init$$4q()({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:$iterable.$$targs$$.Absent$Iterable});$4x.$crtmm$=get$4x.$crtmm$;}
return $4x;}
get$4x.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$4q},$cont:$$4q.$prop$getCycled,d:['$','Iterable','$at','cycled','$o','iterable$wvnke3']};};$prop$get$4x={get:get$4x,$crtmm$:get$4x.$crtmm$};get$4q=get$4x;$prop$get$4q=get$4x;return get$4x();},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}},$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$at.cycled.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.cycle)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$at','cycled']};});$iterable.cycle=function cycle($4y){var $iterable=this;function $4z($$targs$$){var $$4z=new $4z.$$;
$$4z.$$outer=$iterable;$$4z.$$targs$$=$$targs$$;Iterable({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:$iterable.$$targs$$.Absent$Iterable},$$4z);$$4z.$prop$get$50={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}},$cont:$4z,d:['$','Iterable','$m','cycle','$o','iterable$tqn758','$at','orig$73fmk0']};}};$$4z.$prop$get$50.get=function(){return $50};return $$4z;
};$4z.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:cycle,satisfies:[{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}}],d:['$','Iterable','$m','cycle','$o','iterable$tqn758']};};function $init$$4z(){if($4z.$$===undefined){initTypeProto($4z,'ceylon.language::Iterable.iterable',Basic,$init$Iterable());
(function($$4z){$defat($$4z,'$50',function(){var $$4z=this;return $iterable;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}},$cont:$4z,d:['$','Iterable','$m','cycle','$o','iterable$tqn758','$at','orig$73fmk0']};});$$4z.iterator=function iterator(){var $$4z=this;function $51($$targs$$){var $$51=new $51.$$;
$$51.$$outer=$$4z;$$51.$$targs$$=$$targs$$;Iterator({Element$Iterator:$iterable.$$targs$$.Element$Iterable},$$51);$$51.$52_=getEmptyIterator();$$51.$prop$get$52={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:$51,$an:function(){return[variable()];},d:['$','Iterable','$m','cycle','$o','iterable$tqn758','$m','iterator','$o','iterator$15exbu','$at','iter$4qon2b']};}};$$51.$prop$get$52.get=function(){return $52};$$51.$53_=(0);$$51.$prop$get$53={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$51,$an:function(){return[variable()];},d:['$','Iterable','$m','cycle','$o','iterable$tqn758','$m','iterator','$o','iterator$15exbu','$at','count$9g6x3w']};}};$$51.$prop$get$53.get=function(){return $53};return $$51;
};$51.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Iterable'}}],d:['$','Iterable','$m','cycle','$o','iterable$tqn758','$m','iterator','$o','iterator$15exbu']};};function $init$$51(){if($51.$$===undefined){initTypeProto($51,'ceylon.language::Iterable.iterable.iterator',Basic,$init$Iterator());
(function($$51){$defat($$51,'$52',function(){return this.$52_;},function($54){return this.$52_=$54;},function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$cont:$51,$an:function(){return[variable()];},d:['$','Iterable','$m','cycle','$o','iterable$tqn758','$m','iterator','$o','iterator$15exbu','$at','iter$4qon2b']};});$defat($$51,'$53',function(){return this.$53_;},function($55){return this.$53_=$55;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$51,$an:function(){return[variable()];},d:['$','Iterable','$m','cycle','$o','iterable$tqn758','$m','iterator','$o','iterator$15exbu','$at','count$9g6x3w']};});$$51.next=function next(){var $$51=this;var $56;if(!$is(($56=$$51.$52.next()),{t:Finished})){return $56;}else {if(($$51.$53<$4y)){($57=$$51.$53,$$51.$53=$57.successor,$57);var $57;$$51.$52=$$4z.$50.iterator();}else {$$51.$52=getEmptyIterator();}return $$51.$52.next();}};$$51.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterable',{t:Finished}]},$ps:[],$cont:$51,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','cycle','$o','iterable$tqn758','$m','iterator','$o','iterator$15exbu','$m','next']};};})($51.$$.prototype);}
return $51;}
$init$$51();var $58;function get$58(){if($58===undefined){$58=$init$$51()({Element$Iterator:$iterable.$$targs$$.Element$Iterable});$58.$crtmm$=get$58.$crtmm$;}
return $58;}
get$58.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$51},$cont:iterator,d:['$','Iterable','$m','cycle','$o','iterable$tqn758','$m','iterator','$o','iterator$15exbv']};};$prop$get$58={get:get$58,$crtmm$:get$58.$crtmm$};get$51=get$58;$prop$get$51=get$58;return get$58();};$$4z.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Iterable'}},$ps:[],$cont:$4z,$an:function(){return[shared(),actual()];},d:['$','Iterable','$m','cycle','$o','iterable$tqn758','$m','iterator']};};})($4z.$$.prototype);}
return $4z;}
$init$$4z();var $59;function get$59(){if($59===undefined){$59=$init$$4z()({Element$Iterable:$iterable.$$targs$$.Element$Iterable,Absent$Iterable:$iterable.$$targs$$.Absent$Iterable});$59.$crtmm$=get$59.$crtmm$;}
return $59;}
get$59.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$4z},$cont:cycle,d:['$','Iterable','$m','cycle','$o','iterable$tqn759']};};$prop$get$59={get:get$59,$crtmm$:get$59.$crtmm$};get$4z=get$59;$prop$get$4z=get$59;return get$59();};$iterable.cycle.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Iterable',Absent$Iterable:'Absent$Iterable'}},$ps:[{$nm:'times',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.cycle.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getCycled),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.repeat)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:ValueDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$m','cycle']};};$iterable.repeat=function repeat($5a){var $iterable=this;var $5b=SequenceBuilder({Element$SequenceBuilder:$iterable.$$targs$$.Element$Iterable});var $5c=(0);function set$5c($5d){return $5c=$5d;};while((($5e=$5c,$5c=$5e.successor,$5e)<$5a)){$5b.appendAll($iterable);}var $5e;return $5b.sequence;};$iterable.repeat.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$Iterable'}},$ps:[{$nm:'times',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Iterable,$an:function(){return[doc($CCMM$['ceylon.language'].Iterable.$m.repeat.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.cycle)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Iterable','$m','repeat']};};})(Iterable.$$.prototype);}
return Iterable;}
exports.$init$Iterable=$init$Iterable;$init$Iterable();var $m,$4n;var commaList=function ($5f){return ($5g=Comprehension(function(){var $5h=$5f.iterator();var $5i=getFinished();var next$5i=function(){return $5i=$5h.next();}
next$5i();return function(){if($5i!==getFinished()){var $5j=$5i;var $5k=($5l=($5m=$5j,$nn($5m)?$5m.string:null),$nn($5l)?$5l:"<null>");next$5i();return $5k;}
return getFinished();}
},{Element$Iterable:{t:String$},Absent$Iterable:{t:Null}}),($5n=", ",JsCallable($5n,$5n!==null?$5n.join:null))($5g));};commaList.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:Anything},Absent$Iterable:{t:Null}}},$an:function(){return[];}}],d:['$','commaList']};};var $5g,$5l,$5m,$5n;function ifExists($5o){return function($5p){var $5q;if(($5q=$5p)!==null){return $5o($5q);}else {return false;}}};ifExists.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'predicate',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],d:['$','ifExists']};};
function Sequential($$targs$$,$sequential){List({Element$List:$$targs$$.Element$Sequential},$sequential);Ranged({Index$Ranged:{t:Integer},Span$Ranged:{t:Sequential,a:{Element$Sequential:$$targs$$.Element$Sequential}}},$sequential);add_type_arg($sequential,'Index$Ranged',{t:Integer});add_type_arg($sequential,'Span$Ranged',{t:Sequential,a:{Element$Sequential:$sequential.$$targs$$.Element$Sequential}});set_type_args($sequential,$$targs$$);$sequential.$prop$getSequence={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$cont:Sequential,$an:function(){return[doc("This sequence."),shared(),actual(),$default()];},d:['$','Sequential','$at','sequence']};}};$sequential.$prop$getSequence.get=function(){return sequence};$sequential.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$at.string.$an.doc[0]),shared(),actual(),$default()];},d:['$','Sequential','$at','string']};}};$sequential.$prop$getString.get=function(){return string};}
Sequential.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Sequential:{'var':'out'}},satisfies:[{t:List,a:{Element$List:'Element$Sequential'}},{t:Ranged,a:{Index$Ranged:{t:Integer},Span$Ranged:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}}}}],of:[{t:Empty},{t:Sequence,a:{Element$Sequence:'Element$Sequential'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Tuple)].reifyCeylonType({Element$Iterable:{t:ClassDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','Sequential']};};
exports.Sequential=Sequential;function $init$Sequential(){if(Sequential.$$===undefined){initTypeProtoI(Sequential,'ceylon.language::Sequential',$init$List(),$init$Ranged());
(function($sequential){$sequential.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$cont:Sequential,$an:function(){return[doc("Reverse this sequence, returning a new sequence."),shared(),actual(),formal()];},d:['$','Sequential','$at','reversed']};}};$defat($sequential,'sequence',function(){var $sequential=this;return $sequential;},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$cont:Sequential,$an:function(){return[doc("This sequence."),shared(),actual(),$default()];},d:['$','Sequential','$at','sequence']};});$sequential.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$cont:Sequential,$an:function(){return[doc("The rest of the sequence, without the first \nelement."),shared(),actual(),formal()];},d:['$','Sequential','$at','rest']};}};$sequential.repeat=function ($5r){var $sequential=this;return $sequential.cycle($5r).sequence;};$sequential.repeat.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'times',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.repeat.$an.doc[0]),shared(),actual(),$default()];},d:['$','Sequential','$m','repeat']};};$sequential.initial=function ($5s){var $sequential=this;return $sequential.segment((0),$5s);};$sequential.initial.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.initial.$an.doc[0]),shared(),actual(),$default()];},d:['$','Sequential','$m','initial']};};$sequential.terminal=function terminal($5t){var $sequential=this;var $5u;if(($5u=$sequential.lastIndex)!==null&&($5t>(0))){return $sequential.span($5u.minus($5t).plus((1)),$5u);}else {return getEmpty();}};$sequential.terminal.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.terminal.$an.doc[0]),shared(),actual(),$default()];},d:['$','Sequential','$m','terminal']};};$sequential.trim=function ($5v){var $sequential=this;return $sequential.getT$all()['ceylon.language::List'].$$.prototype.trim.call(this,$5v).sequence;};$sequential.trim.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.trim.$an.doc[0]),shared(),actual(),$default()];},d:['$','Sequential','$m','trim']};};$sequential.trimLeading=function ($5w){var $sequential=this;return $sequential.getT$all()['ceylon.language::List'].$$.prototype.trimLeading.call(this,$5w).sequence;};$sequential.trimLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.trimLeading.$an.doc[0]),shared(),actual(),$default()];},d:['$','Sequential','$m','trimLeading']};};$sequential.trimTrailing=function ($5x){var $sequential=this;return $sequential.getT$all()['ceylon.language::List'].$$.prototype.trimTrailing.call(this,$5x).sequence;};$sequential.trimTrailing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.trimTrailing.$an.doc[0]),shared(),actual(),$default()];},d:['$','Sequential','$m','trimTrailing']};};$sequential.following={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Other$following'},{$t:'Element$Sequential',seq:1}]},$ps:[{$nm:'head',$mt:'prm',$t:'Other$following',$an:function(){return[];}}],$cont:Sequential,$tp:{Other$following:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$m.following.$an.doc[0]),shared(),actual(),formal()];},d:['$','Sequential','$m','following']};}};$sequential.clone=function (){var $sequential=this;return $sequential;};$sequential.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequential'}},$ps:[],$cont:Sequential,$an:function(){return[doc("This sequence."),shared(),actual(),$default()];},d:['$','Sequential','$m','clone']};};$defat($sequential,'string',function(){var $sequential=this;return ($5y=($sequential.empty?"[]":null),$nn($5y)?$5y:StringBuilder(["[",commaList($sequential).string,"]"]).string);},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Sequential,$an:function(){return[doc($CCMM$['ceylon.language'].Sequential.$at.string.$an.doc[0]),shared(),actual(),$default()];},d:['$','Sequential','$at','string']};});})(Sequential.$$.prototype);}
return Sequential;}
exports.$init$Sequential=$init$Sequential;$init$Sequential();var $5y;function Sequence($$targs$$,$sequence){Sequential({Element$Sequential:$$targs$$.Element$Sequence},$sequence);Iterable({Element$Iterable:$$targs$$.Element$Sequence,Absent$Iterable:{t:Nothing}},$sequence);set_type_args($sequence,$$targs$$);$sequence.$prop$getEmpty={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$at.empty.$an.doc[0]),shared(),actual()];},d:['$','Sequence','$at','empty']};}};$sequence.$prop$getEmpty.get=function(){return empty};$sequence.$prop$getSequence={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Sequence'}},$cont:Sequence,$an:function(){return[doc("This nonempty sequence."),shared(),$default(),actual()];},d:['$','Sequence','$at','sequence']};}};$sequence.$prop$getSequence.get=function(){return sequence};$sequence.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Sequence,$an:function(){return[shared(),actual(),$default()];},d:['$','Sequence','$at','string']};}};$sequence.$prop$getString.get=function(){return string};}
Sequence.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Sequence:{'var':'out'}},satisfies:[{t:Sequential,a:{Element$Sequential:'Element$Sequence'}},{t:Iterable,a:{Element$Iterable:'Element$Sequence',Absent$Iterable:{t:Nothing}}}],$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Empty)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Sequence']};};
exports.Sequence=Sequence;function $init$Sequence(){if(Sequence.$$===undefined){initTypeProtoI(Sequence,'ceylon.language::Sequence',$init$Sequential(),$init$Iterable());
(function($sequence){$sequence.$prop$getLastIndex={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Sequence,$an:function(){return[doc("The index of the last element of the sequence."),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getSize)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),actual(),formal()];},d:['$','Sequence','$at','lastIndex']};}};$sequence.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Sequence',$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$at.first.$an.doc[0]),shared(),actual(),formal()];},d:['$','Sequence','$at','first']};}};$sequence.$prop$getLast={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Sequence',$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$at.last.$an.doc[0]),shared(),actual(),formal()];},d:['$','Sequence','$at','last']};}};$defat($sequence,'empty',function(){var $sequence=this;return false;},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$at.empty.$an.doc[0]),shared(),actual()];},d:['$','Sequence','$at','empty']};});$sequence.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Sequence'}},$cont:Sequence,$an:function(){return[doc("Reverse this sequence, returning a new nonempty\nsequence."),shared(),actual(),formal()];},d:['$','Sequence','$at','reversed']};}};$defat($sequence,'sequence',function(){var $sequence=this;return $sequence;},undefined,function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Sequence'}},$cont:Sequence,$an:function(){return[doc("This nonempty sequence."),shared(),$default(),actual()];},d:['$','Sequence','$at','sequence']};});$sequence.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequence'}},$cont:Sequence,$an:function(){return[doc("The rest of the sequence, without the first element."),shared(),actual(),formal()];},d:['$','Sequence','$at','rest']};}};$sequence.$sort=function $sort($5z){var $sequence=this;var $60=internalSort($5z,$sequence,{Element$internalSort:$sequence.$$targs$$.Element$Sequence});//assert at Sequence.ceylon (61:8-61:27)
var $61;if(!(nonempty(($61=$60)))) {throw wrapexc(AssertionError("Assertion failed: \'nonempty s\' at Sequence.ceylon (61:15-61:26)"),'61:8-61:27','Sequence.ceylon'); }
return $61;};$sequence.$sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Sequence'}},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[doc("The function comparing pairs of elements.")];}}],$cont:Sequence,$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$m.sort.$an.doc[0]),shared(),$default(),actual()];},d:['$','Sequence','$m','sort']};};$sequence.collect=function collect($62,$$$mptypes){var $sequence=this;var $63=$sequence.$map($62,{Result$map:$$$mptypes.Result$collect}).sequence;//assert at Sequence.ceylon (71:8-71:27)
var $64;if(!(nonempty(($64=$63)))) {throw wrapexc(AssertionError("Assertion failed: \'nonempty s\' at Sequence.ceylon (71:15-71:26)"),'71:8-71:27','Sequence.ceylon'); }
return $64;};$sequence.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Result$collect'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[doc("The transformation applied to the elements.")];}}],$cont:Sequence,$tp:{Result$collect:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Sequence.$m.collect.$an.doc[0]),shared(),$default(),actual()];},d:['$','Sequence','$m','collect']};};$sequence.clone=function (){var $sequence=this;return $sequence;};$sequence.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Sequence'}},$ps:[],$cont:Sequence,$an:function(){return[doc("This nonempty sequence."),shared(),actual(),$default()];},d:['$','Sequence','$m','clone']};};$defat($sequence,'string',function(){var $sequence=this;return attrGetter($sequence.getT$all()['ceylon.language::Sequential'],'string').call(this);},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Sequence,$an:function(){return[shared(),actual(),$default()];},d:['$','Sequence','$at','string']};});$sequence.shorterThan=function ($65){var $sequence=this;return $sequence.getT$all()['ceylon.language::List'].$$.prototype.shorterThan.call(this,$65);};$sequence.shorterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequence,$an:function(){return[shared(),actual(),$default()];},d:['$','Sequence','$m','shorterThan']};};$sequence.longerThan=function ($66){var $sequence=this;return $sequence.getT$all()['ceylon.language::List'].$$.prototype.longerThan.call(this,$66);};$sequence.longerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequence,$an:function(){return[shared(),actual(),$default()];},d:['$','Sequence','$m','longerThan']};};$sequence.findLast=function ($67){var $sequence=this;return $sequence.getT$all()['ceylon.language::List'].$$.prototype.findLast.call(this,$67);};$sequence.findLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Sequence']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Sequence,$an:function(){return[shared(),$default(),actual()];},d:['$','Sequence','$m','findLast']};};$sequence.repeat=function ($68){var $sequence=this;return $sequence.getT$all()['ceylon.language::Sequential'].$$.prototype.repeat.call(this,$68);};$sequence.repeat.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Sequence'}},$ps:[{$nm:'times',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Sequence,$an:function(){return[shared(),actual(),$default()];},d:['$','Sequence','$m','repeat']};};$sequence.following=function ($69,$$$mptypes){var $sequence=this;return Tuple($69,$sequence.sequence,{Rest$Tuple:{t:Sequence,a:{Element$Sequence:$sequence.$$targs$$.Element$Sequence}},Element$Tuple:{t:'u',l:[$$$mptypes.Other$following,$sequence.$$targs$$.Element$Sequence]},First$Tuple:$$$mptypes.Other$following});};$sequence.following.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Other$following'},{$t:'Element$Sequence',seq:1}]},$ps:[{$nm:'head',$mt:'prm',$t:'Other$following',$an:function(){return[];}}],$cont:Sequence,$tp:{Other$following:{}},$an:function(){return[shared(),actual(),$default()];},d:['$','Sequence','$m','following']};};})(Sequence.$$.prototype);}
return Sequence;}
exports.$init$Sequence=$init$Sequence;$init$Sequence();function Empty($empty){Sequential({Element$Sequential:{t:Nothing}},$empty);Ranged({Index$Ranged:{t:Integer},Span$Ranged:{t:Empty}},$empty);add_type_arg($empty,'Index$Ranged',{t:Integer});add_type_arg($empty,'Span$Ranged',{t:Empty});$empty.$prop$getEmpty={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Empty,$an:function(){return[doc("Returns `true`."),shared(),actual()];},d:['$','Empty','$at','empty']};}};$empty.$prop$getEmpty.get=function(){return empty};$empty.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Empty,$an:function(){return[doc("Returns 0."),shared(),actual()];},d:['$','Empty','$at','size']};}};$empty.$prop$getSize.get=function(){return size};$empty.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','reversed']};}};$empty.$prop$getReversed.get=function(){return reversed};$empty.$prop$getSequence={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','sequence']};}};$empty.$prop$getSequence.get=function(){return sequence};$empty.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Empty,$an:function(){return[doc($CCMM$['ceylon.language'].Empty.$at.string.$an.doc[0]),shared(),actual()];},d:['$','Empty','$at','string']};}};$empty.$prop$getString.get=function(){return string};$empty.$prop$getLastIndex={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','lastIndex']};}};$empty.$prop$getLastIndex.get=function(){return lastIndex};$empty.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','first']};}};$empty.$prop$getFirst.get=function(){return first};$empty.$prop$getLast={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','last']};}};$empty.$prop$getLast.get=function(){return last};$empty.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','rest']};}};$empty.$prop$getRest.get=function(){return rest};$empty.$prop$getCoalesced={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','coalesced']};}};$empty.$prop$getCoalesced.get=function(){return coalesced};$empty.$prop$getIndexed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','indexed']};}};$empty.$prop$getIndexed.get=function(){return indexed};}
Empty.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Sequential,a:{Element$Sequential:{t:Nothing}}},{t:Ranged,a:{Index$Ranged:{t:Integer},Span$Ranged:{t:Empty}}}],of:[$prop$get$6a],$an:function(){return[doc($CCMM$['ceylon.language'].Empty.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Sequence)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','Empty']};};
exports.Empty=Empty;function $init$Empty(){if(Empty.$$===undefined){initTypeProtoI(Empty,'ceylon.language::Empty',$init$Sequential(),$init$Ranged());
(function($empty){$empty.iterator=function (){var $empty=this;return getEmptyIterator();};$empty.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:Nothing}}},$ps:[],$cont:Empty,$an:function(){return[doc("Returns an iterator that is already exhausted."),shared(),actual()];},d:['$','Empty','$m','iterator']};};$empty.$get=function ($6b){var $empty=this;return null;};$empty.$get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns `null` for any given index."),shared(),actual()];},d:['$','Empty','$m','get']};};$empty.segment=function ($6c,$6d){var $empty=this;return $empty;};$empty.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns an `Empty` for any given segment."),shared(),actual()];},d:['$','Empty','$m','segment']};};$empty.span=function ($6e,$6f){var $empty=this;return $empty;};$empty.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns an `Empty` for any given span."),shared(),actual()];},d:['$','Empty','$m','span']};};$empty.spanTo=function ($6g){var $empty=this;return $empty;};$empty.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns an `Empty` for any given span."),shared(),actual()];},d:['$','Empty','$m','spanTo']};};$empty.spanFrom=function ($6h){var $empty=this;return $empty;};$empty.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns an `Empty` for any given span."),shared(),actual()];},d:['$','Empty','$m','spanFrom']};};$defat($empty,'empty',function(){var $empty=this;return true;},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Empty,$an:function(){return[doc("Returns `true`."),shared(),actual()];},d:['$','Empty','$at','empty']};});$defat($empty,'size',function(){var $empty=this;return (0);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Empty,$an:function(){return[doc("Returns 0."),shared(),actual()];},d:['$','Empty','$at','size']};});$defat($empty,'reversed',function(){var $empty=this;return $empty;},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','reversed']};});$defat($empty,'sequence',function(){var $empty=this;return $empty;},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','sequence']};});$defat($empty,'string',function(){var $empty=this;return "[]";},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Empty,$an:function(){return[doc($CCMM$['ceylon.language'].Empty.$at.string.$an.doc[0]),shared(),actual()];},d:['$','Empty','$at','string']};});$defat($empty,'lastIndex',function(){var $empty=this;return null;},undefined,function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','lastIndex']};});$defat($empty,'first',function(){var $empty=this;return null;},undefined,function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','first']};});$defat($empty,'last',function(){var $empty=this;return null;},undefined,function(){return{mod:$CCMM$,$t:{t:Null},$cont:Empty,$an:function(){return[doc("Returns `null`."),shared(),actual()];},d:['$','Empty','$at','last']};});$defat($empty,'rest',function(){var $empty=this;return $empty;},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','rest']};});$empty.clone=function (){var $empty=this;return $empty;};$empty.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[],$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$m','clone']};};$defat($empty,'coalesced',function(){var $empty=this;return $empty;},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','coalesced']};});$defat($empty,'indexed',function(){var $empty=this;return $empty;},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Empty,$an:function(){return[doc("Returns an `Empty`."),shared(),actual()];},d:['$','Empty','$at','indexed']};});$empty.chain=function ($6i,$$$mptypes){var $empty=this;return $6i;};$empty.chain.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Other$chain',Absent$Iterable:'OtherAbsent$chain'}},$ps:[{$nm:'other',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Other$chain',Absent$Iterable:'OtherAbsent$chain'}},$an:function(){return[];}}],$cont:Empty,$tp:{Other$chain:{},OtherAbsent$chain:{'satisfies':[{t:Null}]}},$an:function(){return[doc("Returns `other`."),shared(),actual()];},d:['$','Empty','$m','chain']};};$empty.contains=function ($6j){var $empty=this;return false;};$empty.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns `false` for any given element."),shared(),actual()];},d:['$','Empty','$m','contains']};};$empty.count=function ($6k){var $empty=this;return (0);};$empty.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[doc("Returns 0 for any given predicate."),shared(),actual()];},d:['$','Empty','$m','count']};};$empty.defines=function ($6l){var $empty=this;return false;};$empty.defines.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','defines']};};$empty.$map=function ($6m,$$$mptypes){var $empty=this;return $empty;};$empty.$map.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$map',$an:function(){return[];}}],$cont:Empty,$tp:{Result$map:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','map']};};$empty.$filter=function ($6n){var $empty=this;return $empty;};$empty.$filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','filter']};};$empty.fold=function ($6o,$6p,$$$mptypes){var $empty=this;return $6o;};$empty.fold.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$fold',$ps:[{$nm:'initial',$mt:'prm',$t:'Result$fold',$an:function(){return[];}},{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$fold',$an:function(){return[];}}],$cont:Empty,$tp:{Result$fold:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','fold']};};$empty.$reduce=function ($6q,$$$mptypes){var $empty=this;return null;};$empty.$reduce.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$reduce',$an:function(){return[];}}],$cont:Empty,$tp:{Result$reduce:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','reduce']};};$empty.find=function ($6r){var $empty=this;return null;};$empty.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','find']};};$empty.$sort=function ($6s){var $empty=this;return $empty;};$empty.$sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','sort']};};$empty.collect=function ($6t,$$$mptypes){var $empty=this;return $empty;};$empty.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[];}}],$cont:Empty,$tp:{Result$collect:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','collect']};};$empty.select=function ($6u){var $empty=this;return $empty;};$empty.select.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','select']};};$empty.any=function ($6v){var $empty=this;return false;};$empty.any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','any']};};$empty.$every=function ($6w){var $empty=this;return false;};$empty.$every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','every']};};$empty.skipping=function ($6x){var $empty=this;return $empty;};$empty.skipping.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'skip',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','skipping']};};$empty.taking=function ($6y){var $empty=this;return $empty;};$empty.taking.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'take',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','taking']};};$empty.by=function ($6z){var $empty=this;return $empty;};$empty.by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'step',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Empty,$an:function(){return[shared(),actual()];},d:['$','Empty','$m','by']};};$empty.withLeading=function ($70,$$$mptypes){var $empty=this;return Tuple($70,getEmpty(),{Rest$Tuple:{t:Empty},Element$Tuple:$$$mptypes.Element$withLeading,First$Tuple:$$$mptypes.Element$withLeading});};$empty.withLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Element$withLeading'}]},$ps:[{$nm:'element',$mt:'prm',$t:'Element$withLeading',$an:function(){return[];}}],$cont:Empty,$tp:{Element$withLeading:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','withLeading']};};$empty.withTrailing=function ($71,$$$mptypes){var $empty=this;return Tuple($71,getEmpty(),{Rest$Tuple:{t:Empty},Element$Tuple:$$$mptypes.Element$withTrailing,First$Tuple:$$$mptypes.Element$withTrailing});};$empty.withTrailing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Element$withTrailing'}]},$ps:[{$nm:'element',$mt:'prm',$t:'Element$withTrailing',$an:function(){return[];}}],$cont:Empty,$tp:{Element$withTrailing:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','withTrailing']};};$empty.following=function ($72,$$$mptypes){var $empty=this;return Tuple($72,getEmpty(),{Rest$Tuple:{t:Empty},Element$Tuple:$$$mptypes.Other$following,First$Tuple:$$$mptypes.Other$following});};$empty.following.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Other$following'}]},$ps:[{$nm:'head',$mt:'prm',$t:'Other$following',$an:function(){return[];}}],$cont:Empty,$tp:{Other$following:{}},$an:function(){return[shared(),actual()];},d:['$','Empty','$m','following']};};})(Empty.$$.prototype);}
return Empty;}
exports.$init$Empty=$init$Empty;$init$Empty();function $6a(){var $empty=new $6a.$$;
$Object($empty);Empty($empty);return $empty;
};$6a.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$Object},satisfies:[{t:Empty}],$an:function(){return[doc($CCMM$['ceylon.language'].empty.$an.doc[0]),shared()];},d:['$','empty']};};function $init$$6a(){if($6a.$$===undefined){initTypeProto($6a,'ceylon.language::empty',$init$$Object(),$init$Empty());
}
return $6a;}
exports.$init$$6a=$init$$6a;$init$$6a();var $73;function getEmpty(){if($73===undefined){$73=$init$$6a()();$73.$crtmm$=getEmpty.$crtmm$;}
return $73;}
exports.getEmpty=getEmpty;getEmpty.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$6a},$an:function(){return[doc($CCMM$['ceylon.language'].empty.$an.doc[0]),shared()];},d:['$','empty']};};$prop$getEmpty={get:getEmpty,$crtmm$:getEmpty.$crtmm$};get$6a=getEmpty;$prop$get$6a=getEmpty;exports.$prop$getEmpty=$prop$getEmpty;function $74($$targs$$){var $emptyIterator=new $74.$$;
$emptyIterator.$$targs$$=$$targs$$;Iterator({Element$Iterator:{t:Nothing}},$emptyIterator);return $emptyIterator;
};$74.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Iterator,a:{Element$Iterator:{t:Nothing}}}],$an:function(){return[doc("An iterator that returns no elements."),shared()];},d:['$','emptyIterator']};};function $init$$74(){if($74.$$===undefined){initTypeProto($74,'ceylon.language::emptyIterator',Basic,$init$Iterator());
(function($emptyIterator){$emptyIterator.next=function (){var $emptyIterator=this;return getFinished();};})($74.$$.prototype);}
return $74;}
exports.$init$$74=$init$$74;$init$$74();var $75;function getEmptyIterator(){if($75===undefined){$75=$init$$74()({Element$Iterator:{t:Nothing}});$75.$crtmm$=getEmptyIterator.$crtmm$;}
return $75;}
exports.getEmptyIterator=getEmptyIterator;getEmptyIterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$74},$an:function(){return[doc("An iterator that returns no elements."),shared()];},d:['$','emptyIterator']};};$prop$getEmptyIterator={get:getEmptyIterator,$crtmm$:getEmptyIterator.$crtmm$};get$74=getEmptyIterator;$prop$get$74=getEmptyIterator;exports.$prop$getEmptyIterator=$prop$getEmptyIterator;
function Keys($76,$$targs$$,$keys){$init$Keys();if($keys===undefined)$keys=new Keys.$$;
set_type_args($keys,$$targs$$);$keys.$76_=$76;Category({Element$Category:{t:$Object}},$keys);add_type_arg($keys,'Element$Category',{t:$Object});return $keys;}
Keys.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'correspondence',$mt:'prm',$t:{t:Correspondence,a:{Key$Correspondence:'Key$Keys',Item$Correspondence:'Item$Keys'}},$an:function(){return[];}}],$tp:{Key$Keys:{'var':'in','satisfies':[{t:$Object}]},Item$Keys:{'var':'out'}},satisfies:[{t:Category,a:{Element$Category:{t:$Object}}}],d:['$','Keys']};};function $init$Keys(){if(Keys.$$===undefined){initTypeProto(Keys,'ceylon.language::Keys',Basic,$init$Category());
(function($keys){$keys.contains=function contains($77){var $keys=this;var $78;if($is(($78=$77),$keys.$$targs$$.Key$Keys)){return $keys.$76.defines($78);}else {return false;}};$keys.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'key',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Keys,$an:function(){return[shared(),actual()];},d:['$','Keys','$m','contains']};};$defat($keys,'$76',function(){return this.$76_;},undefined,function(){return{mod:$CCMM$,$t:{t:Correspondence,a:{Key$Correspondence:'Key$Keys',Item$Correspondence:'Item$Keys'}},$cont:Keys,d:['$','Keys','$at','correspondence$muvvk9']};});})(Keys.$$.prototype);}
return Keys;}
exports.$init$Keys=$init$Keys;$init$Keys();function Correspondence($$targs$$,$correspondence){set_type_args($correspondence,$$targs$$);$correspondence.$prop$getKeys={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Category,a:{Element$Category:{t:$Object}}},$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$at.keys.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.defines)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Correspondence','$at','keys']};}};$correspondence.$prop$getKeys.get=function(){return keys};}
Correspondence.$crtmm$=function(){return{mod:$CCMM$,$tp:{Key$Correspondence:{'var':'in','satisfies':[{t:$Object}]},Item$Correspondence:{'var':'out'}},$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Map),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),List),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Category)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Correspondence']};};
exports.Correspondence=Correspondence;function $init$Correspondence(){if(Correspondence.$$===undefined){initTypeProtoI(Correspondence,'ceylon.language::Correspondence');
(function($correspondence){$correspondence.$get={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Item$Correspondence']},$ps:[{$nm:'key',$mt:'prm',$t:'Key$Correspondence',$an:function(){return[];}}],$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$m.get.$an.doc[0]),see("Correspondence.items"),shared(),formal()];},d:['$','Correspondence','$m','get']};}};$correspondence.defines=function ($79){var $correspondence=this;return exists($correspondence.$get($79));};$correspondence.defines.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'key',$mt:'prm',$t:'Key$Correspondence',$an:function(){return[];}}],$cont:Correspondence,$an:function(){return[doc("Determines if there is a value defined for the \ngiven key."),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.definesAny),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.definesEvery),$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.$prop$getKeys)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:FunctionDeclaration$meta$declaration},{t:ValueDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Correspondence','$m','defines']};};$defat($correspondence,'keys',function(){var $correspondence=this;return Keys($correspondence,{Item$Keys:$correspondence.$$targs$$.Item$Correspondence,Key$Keys:$correspondence.$$targs$$.Key$Correspondence});},undefined,function(){return{mod:$CCMM$,$t:{t:Category,a:{Element$Category:{t:$Object}}},$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$at.keys.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.defines)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Correspondence','$at','keys']};});$correspondence.definesEvery=function definesEvery($7a){var $correspondence=this;;var $7c;for(var $7b=$7a.iterator();($7c=$7b.next())!==getFinished();){if(!$correspondence.defines($7c)){return false;}}
if(getFinished() === $7c){return true;}};$correspondence.definesEvery.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'keys',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Key$Correspondence',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$m.definesEvery.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.defines)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Correspondence','$m','definesEvery']};};$correspondence.definesAny=function definesAny($7d){var $correspondence=this;;var $7f;for(var $7e=$7d.iterator();($7f=$7e.next())!==getFinished();){if($correspondence.defines($7f)){return true;}}
if(getFinished() === $7f){return false;}};$correspondence.definesAny.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'keys',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Key$Correspondence',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$m.definesAny.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.defines)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Correspondence','$m','definesAny']};};$correspondence.items=function ($7g){var $correspondence=this;return Comprehension(function(){var $7h=$7g.iterator();var $7i=getFinished();var next$7i=function(){return $7i=$7h.next();}
next$7i();return function(){if($7i!==getFinished()){var $7j=$7i;var $7k=$correspondence.$get($7j);next$7i();return $7k;}
return getFinished();}
},{Element$Iterable:{t:'u',l:[{t:Null},$correspondence.$$targs$$.Item$Correspondence]},Absent$Iterable:{t:Null}}).sequence;};$correspondence.items.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:'u',l:[{t:Null},'Item$Correspondence']}}},$ps:[{$nm:'keys',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Key$Correspondence',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$cont:Correspondence,$an:function(){return[doc($CCMM$['ceylon.language'].Correspondence.$m.items.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Correspondence().$$.prototype.$get)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Correspondence','$m','items']};};})(Correspondence.$$.prototype);}
return Correspondence;}
exports.$init$Correspondence=$init$Correspondence;$init$Correspondence();function Finished($finished){$init$Finished();if($finished===undefined)throwexc(InvocationException$meta$model("Cannot instantiate abstract class"),'?','?')
return $finished;}
Finished.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],of:[$prop$get$7l],$an:function(){return[doc($CCMM$['ceylon.language'].Finished.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Iterator)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),abstract()];},d:['$','Finished']};};
exports.Finished=Finished;function $init$Finished(){if(Finished.$$===undefined){initTypeProto(Finished,'ceylon.language::Finished',Basic);
}
return Finished;}
exports.$init$Finished=$init$Finished;$init$Finished();function $7l(){var $finished=new $7l.$$;
Finished($finished);$finished.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:$7l,$an:function(){return[shared(),actual()];},d:['$','finished','$at','string']};}};$finished.$prop$getString.get=function(){return string};return $finished;
};$7l.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Finished},$an:function(){return[doc($CCMM$['ceylon.language'].finished.$an.doc[0]),see("Iterator"),shared()];},d:['$','finished']};};function $init$$7l(){if($7l.$$===undefined){initTypeProto($7l,'ceylon.language::finished',$init$Finished());
(function($finished){$defat($finished,'string',function(){var $finished=this;return "finished";},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:$7l,$an:function(){return[shared(),actual()];},d:['$','finished','$at','string']};});})($7l.$$.prototype);}
return $7l;}
exports.$init$$7l=$init$$7l;$init$$7l();var $7m;function getFinished(){if($7m===undefined){$7m=$init$$7l()();$7m.$crtmm$=getFinished.$crtmm$;}
return $7m;}
exports.getFinished=getFinished;getFinished.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$7l},$an:function(){return[doc($CCMM$['ceylon.language'].finished.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Iterator)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','finished']};};$prop$getFinished={get:getFinished,$crtmm$:getFinished.$crtmm$};get$7l=getFinished;$prop$get$7l=getFinished;exports.$prop$getFinished=$prop$getFinished;
function Binary($$targs$$,$binary){set_type_args($binary,$$targs$$);$binary.set$defs$bit=function($7n,$7o){return true;};}
Binary.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Binary:{'satisfies':[{t:Binary,a:{Other$Binary:'Other$Binary'}}]}},of:['Other$Binary'],$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({Element$Iterable:{t:ClassDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Stef"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Binary']};};
exports.Binary=Binary;function $init$Binary(){if(Binary.$$===undefined){initTypeProtoI(Binary,'ceylon.language::Binary');
(function($binary){$binary.$prop$getNot={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$cont:Binary,$an:function(){return[doc("The binary complement of this sequence of bits."),shared(),formal()];},d:['$','Binary','$at','not']};}};$binary.leftLogicalShift={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'shift',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.leftLogicalShift.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','leftLogicalShift']};}};$binary.rightLogicalShift={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'shift',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.rightLogicalShift.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','rightLogicalShift']};}};$binary.rightArithmeticShift={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'shift',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.rightArithmeticShift.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','rightArithmeticShift']};}};$binary.and={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Binary',$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc("Performs a logical AND operation."),shared(),formal()];},d:['$','Binary','$m','and']};}};$binary.or={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Binary',$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc("Performs a logical inclusive OR operation."),shared(),formal()];},d:['$','Binary','$m','or']};}};$binary.xor={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Binary',$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc("Performs a logical exclusive OR operation."),shared(),formal()];},d:['$','Binary','$m','xor']};}};$binary.$get={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.get.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','get']};}};$binary.set={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'bit',$mt:'prm',$def:1,$t:{t:$Boolean},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.set.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','set']};}};$binary.clear=function ($7p){var $binary=this;return $binary.set($7p,false);};$binary.clear.$crtmm$=function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.clear.$an.doc[0]),shared(),$default()];},d:['$','Binary','$m','clear']};};$binary.flip={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Binary',$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Binary,$an:function(){return[doc($CCMM$['ceylon.language'].Binary.$m.flip.$an.doc[0]),shared(),formal()];},d:['$','Binary','$m','flip']};}};})(Binary.$$.prototype);}
return Binary;}
exports.$init$Binary=$init$Binary;$init$Binary();function Destroyable($destroyable){}
Destroyable.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc($CCMM$['ceylon.language'].Destroyable.$an.doc[0]),shared()];},d:['$','Destroyable']};};
exports.Destroyable=Destroyable;function $init$Destroyable(){if(Destroyable.$$===undefined){initTypeProtoI(Destroyable,'ceylon.language::Destroyable');
(function($destroyable){$destroyable.destroy={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'error',$mt:'prm',$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[doc("The error propagating out of the `try` block, or null")];}}],$cont:Destroyable,$an:function(){return[doc("Called after completion of a `try` block."),shared(),formal()];},d:['$','Destroyable','$m','destroy']};}};})(Destroyable.$$.prototype);}
return Destroyable;}
exports.$init$Destroyable=$init$Destroyable;$init$Destroyable();function Obtainable($obtainable){}
Obtainable.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc($CCMM$['ceylon.language'].Obtainable.$an.doc[0]),shared()];},d:['$','Obtainable']};};
exports.Obtainable=Obtainable;function $init$Obtainable(){if(Obtainable.$$===undefined){initTypeProtoI(Obtainable,'ceylon.language::Obtainable');
(function($obtainable){$obtainable.obtain={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[],$cont:Obtainable,$an:function(){return[doc($CCMM$['ceylon.language'].Obtainable.$m.obtain.$an.doc[0]),$throws("AssertionError","If an illegal state is detected"),shared(),formal()];},d:['$','Obtainable','$m','obtain']};}};$obtainable.release={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'error',$mt:'prm',$t:{t:'u',l:[{t:Null},{t:Throwable}]},$an:function(){return[doc("The error propagating out of the `try` block, or null")];}}],$cont:Obtainable,$an:function(){return[doc("Releases the instance after use."),$throws("AssertionError","If an illegal state is detected"),shared(),formal()];},d:['$','Obtainable','$m','release']};}};})(Obtainable.$$.prototype);}
return Obtainable;}
exports.$init$Obtainable=$init$Obtainable;$init$Obtainable();function Ranged($$targs$$,$ranged){set_type_args($ranged,$$targs$$);}
Ranged.$crtmm$=function(){return{mod:$CCMM$,$tp:{Index$Ranged:{'var':'in'},Span$Ranged:{'var':'out'}},of:['Span$Ranged'],$an:function(){return[doc($CCMM$['ceylon.language'].Ranged.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),List),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Sequence),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),String)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:ClassDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared()];},d:['$','Ranged']};};
exports.Ranged=Ranged;function $init$Ranged(){if(Ranged.$$===undefined){initTypeProtoI(Ranged,'ceylon.language::Ranged');
(function($ranged){$ranged.span={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Span$Ranged',$ps:[{$nm:'from',$mt:'prm',$t:'Index$Ranged',$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:'Index$Ranged',$an:function(){return[];}}],$cont:Ranged,$an:function(){return[doc($CCMM$['ceylon.language'].Ranged.$m.span.$an.doc[0]),shared(),formal()];},d:['$','Ranged','$m','span']};}};$ranged.spanFrom={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Span$Ranged',$ps:[{$nm:'from',$mt:'prm',$t:'Index$Ranged',$an:function(){return[];}}],$cont:Ranged,$an:function(){return[doc($CCMM$['ceylon.language'].Ranged.$m.spanFrom.$an.doc[0]),shared(),formal()];},d:['$','Ranged','$m','spanFrom']};}};$ranged.spanTo={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Span$Ranged',$ps:[{$nm:'to',$mt:'prm',$t:'Index$Ranged',$an:function(){return[];}}],$cont:Ranged,$an:function(){return[doc($CCMM$['ceylon.language'].Ranged.$m.spanTo.$an.doc[0]),shared(),formal()];},d:['$','Ranged','$m','spanTo']};}};$ranged.segment={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Span$Ranged',$ps:[{$nm:'from',$mt:'prm',$t:'Index$Ranged',$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Ranged,$an:function(){return[doc($CCMM$['ceylon.language'].Ranged.$m.segment.$an.doc[0]),shared(),formal()];},d:['$','Ranged','$m','segment']};}};})(Ranged.$$.prototype);}
return Ranged;}
exports.$init$Ranged=$init$Ranged;$init$Ranged();function Iterator($$targs$$,$iterator){set_type_args($iterator,$$targs$$);}
Iterator.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Iterator:{'var':'out'}},$an:function(){return[doc("Produces elements of an [[Iterable]] object."),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Iterable)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Iterator']};};
exports.Iterator=Iterator;function $init$Iterator(){if(Iterator.$$===undefined){initTypeProtoI(Iterator,'ceylon.language::Iterator');
(function($iterator){$iterator.next={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Iterator',{t:Finished}]},$ps:[],$cont:Iterator,$an:function(){return[doc($CCMM$['ceylon.language'].Iterator.$m.next.$an.doc[0]),shared(),formal()];},d:['$','Iterator','$m','next']};}};})(Iterator.$$.prototype);}
return Iterator;}
exports.$init$Iterator=$init$Iterator;$init$Iterator();function Collection($$targs$$,$collection){Iterable({Element$Iterable:$$targs$$.Element$Collection,Absent$Iterable:{t:Null}},$collection);add_type_arg($collection,'Absent$Iterable',{t:Null});set_type_args($collection,$$targs$$);$collection.$prop$getEmpty={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$at.empty.$an.doc[0]),shared(),actual(),$default()];},d:['$','Collection','$at','empty']};}};$collection.$prop$getEmpty.get=function(){return empty};$collection.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$at.string.$an.doc[0]),shared(),actual(),$default()];},d:['$','Collection','$at','string']};}};$collection.$prop$getString.get=function(){return string};}
Collection.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Collection:{'var':'out'}},satisfies:[{t:Iterable,a:{Element$Iterable:'Element$Collection',Absent$Iterable:{t:Null}}}],$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),List),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Map),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Set)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','Collection']};};
exports.Collection=Collection;function $init$Collection(){if(Collection.$$===undefined){initTypeProtoI(Collection,'ceylon.language::Collection',$init$Iterable());
(function($collection){$collection.clone={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:'Element$Collection'}},$ps:[],$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$m.clone.$an.doc[0]),shared(),formal()];},d:['$','Collection','$m','clone']};}};$defat($collection,'empty',function(){var $collection=this;return ($collection.size==(0));},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$at.empty.$an.doc[0]),shared(),actual(),$default()];},d:['$','Collection','$at','empty']};});$collection.contains=function contains($7q){var $collection=this;;var $7s;for(var $7r=$collection.iterator();($7s=$7r.next())!==getFinished();){var $7t;if(($7t=$7s)!==null&&$7t.equals($7q)){return true;}}
if(getFinished() === $7s){return false;}};$collection.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$m.contains.$an.doc[0]),shared(),actual(),$default()];},d:['$','Collection','$m','contains']};};$defat($collection,'string',function(){var $collection=this;return ($7u=($collection.empty?"{}":null),$nn($7u)?$7u:StringBuilder(["{ ",commaList($collection).string," }"]).string);},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Collection,$an:function(){return[doc($CCMM$['ceylon.language'].Collection.$at.string.$an.doc[0]),shared(),actual(),$default()];},d:['$','Collection','$at','string']};});})(Collection.$$.prototype);}
return Collection;}
exports.$init$Collection=$init$Collection;$init$Collection();var $7u;function Category($$targs$$,$category){set_type_args($category,$$targs$$);}
Category.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Category:{'var':'in','satisfies':[{t:$Object}],'def':{t:$Object}}},$an:function(){return[doc($CCMM$['ceylon.language'].Category.$an.doc[0]),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Category']};};
exports.Category=Category;function $init$Category(){if(Category.$$===undefined){initTypeProtoI(Category,'ceylon.language::Category');
(function($category){$category.contains={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:'Element$Category',$an:function(){return[];}}],$cont:Category,$an:function(){return[doc($CCMM$['ceylon.language'].Category.$m.contains.$an.doc[0]),see("containsEvery","containsAny"),shared(),formal()];},d:['$','Category','$m','contains']};}};$category.containsEvery=function containsEvery($7v){var $category=this;;var $7x;for(var $7w=$7v.iterator();($7x=$7w.next())!==getFinished();){if(!$category.contains($7x)){return false;}}
if(getFinished() === $7x){return true;}};$category.containsEvery.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Element$Category',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$cont:Category,$an:function(){return[doc($CCMM$['ceylon.language'].Category.$m.containsEvery.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Category().$$.prototype.contains)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Category','$m','containsEvery']};};$category.containsAny=function containsAny($7y){var $category=this;;var $80;for(var $7z=$7y.iterator();($80=$7z.next())!==getFinished();){if($category.contains($80)){return true;}}
if(getFinished() === $80){return false;}};$category.containsAny.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Element$Category',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$cont:Category,$an:function(){return[doc($CCMM$['ceylon.language'].Category.$m.containsAny.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Category().$$.prototype.contains)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','Category','$m','containsAny']};};})(Category.$$.prototype);}
return Category;}
exports.$init$Category=$init$Category;$init$Category();function List($$targs$$,$list){Collection({Element$Collection:$$targs$$.Element$List},$list);Correspondence({Key$Correspondence:{t:Integer},Item$Correspondence:$$targs$$.Element$List},$list);add_type_arg($list,'Key$Correspondence',{t:Integer});Ranged({Index$Ranged:{t:Integer},Span$Ranged:{t:List,a:{Element$List:$$targs$$.Element$List}}},$list);add_type_arg($list,'Index$Ranged',{t:Integer});add_type_arg($list,'Span$Ranged',{t:List,a:{Element$List:$list.$$targs$$.Element$List}});set_type_args($list,$$targs$$);$list.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.size.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.$prop$getLastIndex)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),actual(),$default()];},d:['$','List','$at','size']};}};$list.$prop$getSize.get=function(){return size};$list.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$cont:List,$an:function(){return[doc("Returns the first element of this `List`, if any."),shared(),actual(),$default()];},d:['$','List','$at','first']};}};$list.$prop$getFirst.get=function(){return first};}
List.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$List:{'var':'out'}},satisfies:[{t:Collection,a:{Element$Collection:'Element$List'}},{t:Correspondence,a:{Key$Correspondence:{t:Integer},Item$Correspondence:'Element$List'}},{t:Ranged,a:{Index$Ranged:{t:Integer},Span$Ranged:{t:List,a:{Element$List:'Element$List'}}}}],$an:function(){return[doc($CCMM$['ceylon.language'].List.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Sequence),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Empty),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$Array)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:ClassDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared()];},d:['$','List']};};
exports.List=List;function $init$List(){if(List.$$===undefined){initTypeProtoI(List,'ceylon.language::List',$init$Collection(),$init$Correspondence(),$init$Ranged());
(function($list){$list.$prop$getLastIndex={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.lastIndex.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.$prop$getSize)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),formal()];},d:['$','List','$at','lastIndex']};}};$defat($list,'size',function(){var $list=this;return ($81=$list.lastIndex,$nn($81)?$81:(-(1))).plus((1));},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.size.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.$prop$getLastIndex)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),actual(),$default()];},d:['$','List','$at','size']};});$list.shorterThan=function ($82){var $list=this;return ($list.size<$82);};$list.shorterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[shared(),actual(),$default()];},d:['$','List','$m','shorterThan']};};$list.longerThan=function ($83){var $list=this;return ($list.size>$83);};$list.longerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[shared(),actual(),$default()];},d:['$','List','$m','longerThan']};};$list.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$cont:List,$an:function(){return[doc("The rest of the list, without the first element."),shared(),actual(),formal()];},d:['$','List','$at','rest']};}};$list.defines=function ($84){var $list=this;return ($85=$84,$85.compare((0))!==getSmaller()&&$85.compare(($86=$list.lastIndex,$nn($86)?$86:(-(1))))!==getLarger());};$list.defines.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.defines.$an.doc[0]),shared(),actual(),$default()];},d:['$','List','$m','defines']};};$list.$get={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.get.$an.doc[0]),shared(),actual(),formal()];},d:['$','List','$m','get']};}};$list.iterator=function iterator(){var $list=this;function $87($$targs$$){var $$87=new $87.$$;
$$87.$$outer=$list;$$87.$$targs$$=$$targs$$;Iterator({Element$Iterator:$list.$$targs$$.Element$List},$$87);$$87.$88_=(0);$$87.$prop$get$88={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$87,$an:function(){return[variable()];},d:['$','List','$m','iterator','$o','listIterator$culmay','$at','index$db9i5l']};}};$$87.$prop$get$88.get=function(){return $88};return $$87;
};$87.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$List'}}],d:['$','List','$m','iterator','$o','listIterator$culmay']};};function $init$$87(){if($87.$$===undefined){initTypeProto($87,'ceylon.language::List.listIterator',Basic,$init$Iterator());
(function($$87){$defat($$87,'$88',function(){return this.$88_;},function($89){return this.$88_=$89;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$87,$an:function(){return[variable()];},d:['$','List','$m','iterator','$o','listIterator$culmay','$at','index$db9i5l']};});$$87.next=function next(){var $$87=this;if(($$87.$88<=($8a=$list.lastIndex,$nn($8a)?$8a:(-(1))))){//assert at List.ceylon (80:20-80:65)
var $8b;if(!($is(($8b=$list.$get(($8c=$$87.$88,$$87.$88=$8c.successor,$8c))),$list.$$targs$$.Element$List))) {throw wrapexc(AssertionError("Assertion failed: \'is Element elem = outer.get(index++)\' at List.ceylon (80:27-80:64)"),'80:20-80:65','List.ceylon'); }
var $8c;return $8b;}else {return getFinished();}var $8a;};$$87.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$List',{t:Finished}]},$ps:[],$cont:$87,$an:function(){return[shared(),actual()];},d:['$','List','$m','iterator','$o','listIterator$culmay','$m','next']};};})($87.$$.prototype);}
return $87;}
$init$$87();var $8d;function get$8d(){if($8d===undefined){$8d=$init$$87()({Element$Iterator:$list.$$targs$$.Element$List});$8d.$crtmm$=get$8d.$crtmm$;}
return $8d;}
get$8d.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$87},$cont:iterator,d:['$','List','$m','iterator','$o','listIterator$culmaz']};};$prop$get$8d={get:get$8d,$crtmm$:get$8d.$crtmm$};get$87=get$8d;$prop$get$87=get$8d;return get$8d();};$list.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$List'}},$ps:[],$cont:List,$an:function(){return[shared(),actual(),$default()];},d:['$','List','$m','iterator']};};$list.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$at.reversed.$an.doc[0]),shared(),formal()];},d:['$','List','$at','reversed']};}};$list.equals=function equals($8e){var $list=this;var $8f;if($is(($8f=$8e),{t:List,a:{Element$List:{t:Anything}}})){if(($8f.size==$list.size)){;var $8h;for(var $8g=Range((0),$list.size.minus((1)),{Element$Range:{t:Integer}}).iterator();($8h=$8g.next())!==getFinished();){var $8i=$list.$get($8h);var $8j=$8f.$get($8h);var $8k;if(($8k=$8i)!==null){var $8l;if(($8l=$8j)!==null){if((!$8k.equals($8l))){return false;}}else {return false;}}else {var $8m;if(($8m=$8j)!==null){return false;}}}
if(getFinished() === $8h){return true;}}}return false;};$list.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.equals.$an.doc[0]),shared(),actual(),$default()];},d:['$','List','$m','equals']};};$defat($list,'hash',function(){var $list=this;var $8n=(1);function set$8n($8o){return $8n=$8o;};$prop$get$8n={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$list.$prop$getHash,$an:function(){return[variable()];},d:['$','List','$at','hash','$at','hash$n2t6uo']};}};$prop$get$8n.get=function(){return $8n};$prop$get$8n.set=set$8n;if(set$8n.$crtmm$===undefined)set$8n.$crtmm$=$prop$get$8n.$crtmm$;;var $8q;for(var $8p=$list.iterator();($8q=$8p.next())!==getFinished();){($8n=$8n.times((31)));var $8r;if(($8r=$8q)!==null){($8n=$8n.plus($8r.hash));}}return $8n;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:List,$an:function(){return[shared(),actual(),$default()];},d:['$','List','$at','hash']};});$list.findLast=function findLast($8s){var $list=this;var $8t;if(($8t=$list.lastIndex)!==null){var $8u=$8t;function set$8u($8v){return $8u=$8v;};while(($8u>=(0))){var $8w;if(($8w=$list.$get(($8x=$8u,$8u=$8x.predecessor,$8x)))!==null){if($8s($8w)){return $8w;}}var $8x;}}return null;};$list.findLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:List,$an:function(){return[shared(),$default(),actual()];},d:['$','List','$m','findLast']};};$defat($list,'first',function(){var $list=this;return $list.$get((0));},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$cont:List,$an:function(){return[doc("Returns the first element of this `List`, if any."),shared(),actual(),$default()];},d:['$','List','$at','first']};});$defat($list,'last',function(){var $list=this;var $8y;if(($8y=$list.lastIndex)!==null){return $list.$get($8y);}else {return null;}},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$List']},$cont:List,$an:function(){return[doc("Returns the last element of this `List`, if any."),shared(),actual(),$default()];},d:['$','List','$at','last']};});$list.withLeading=function ($8z,$$$mptypes){var $list=this;return Singleton($8z,{Element$Singleton:$$$mptypes.Other$withLeading}).chain($list,{OtherAbsent$chain:{t:Null},Other$chain:$list.$$targs$$.Element$List}).sequence;};$list.withLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:{t:'u',l:['Other$withLeading','Element$List']}}},$ps:[{$nm:'element',$mt:'prm',$t:'Other$withLeading',$an:function(){return[doc("The first element of the resulting sequence.")];}}],$cont:List,$tp:{Other$withLeading:{}},$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.withLeading.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.following)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','List','$m','withLeading']};};$list.withTrailing=function ($90,$$$mptypes){var $list=this;return $list.chain(Singleton($90,{Element$Singleton:$$$mptypes.Other$withTrailing}),{OtherAbsent$chain:{t:Nothing},Other$chain:$$$mptypes.Other$withTrailing}).sequence;};$list.withTrailing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:{t:'u',l:['Element$List','Other$withTrailing']}}},$ps:[{$nm:'element',$mt:'prm',$t:'Other$withTrailing',$an:function(){return[doc("The last element of the resulting sequence.")];}}],$cont:List,$tp:{Other$withTrailing:{}},$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.withTrailing.$an.doc[0]),shared(),$default()];},d:['$','List','$m','withTrailing']};};$list.startsWith=function ($91){var $list=this;return $list.includesAt((0),$91);};$list.startsWith.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.startsWith.$an.doc[0]),shared(),$default()];},d:['$','List','$m','startsWith']};};$list.endsWith=function ($92){var $list=this;return $list.includesAt($list.size.minus($92.size),$92);};$list.endsWith.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.endsWith.$an.doc[0]),shared(),$default()];},d:['$','List','$m','endsWith']};};$list.includesAt=function includesAt($93,$94){var $list=this;;var $96;for(var $95=(function(){var $97=$94.size;if($97>0){var $98=(0);var $99=$98;for(var i=1; i<$97; i++){$99=$99.successor;}
return Range($98,$99,{Element$Sequential:{t:Integer}})
}else return getEmpty();}()).iterator();($96=$95.next())!==getFinished();){var $9a=$list.$get($93.plus($96));var $9b=$94.$get($96);var $9c;if(($9c=$9a)!==null){var $9d;if(($9d=$9b)!==null){if((!$9c.equals($9d))){return false;}}else {return false;}}else {var $9e;if(($9e=$9b)!==null){return false;}}}
if(getFinished() === $96){return true;}};$list.includesAt.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[doc("The index at which this list might occur")];}},{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.includesAt.$an.doc[0]),shared(),$default()];},d:['$','List','$m','includesAt']};};$list.includes=function includes($9f){var $list=this;;var $9h;for(var $9g=(function(){var $9i=$list.size;if($9i>0){var $9j=(0);var $9k=$9j;for(var i=1; i<$9i; i++){$9k=$9k.successor;}
return Range($9j,$9k,{Element$Sequential:{t:Integer}})
}else return getEmpty();}()).iterator();($9h=$9g.next())!==getFinished();){if($list.includesAt($9h,$9f)){return true;}}return false;};$list.includes.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.includes.$an.doc[0]),shared(),$default()];},d:['$','List','$m','includes']};};$list.inclusions=function ($9l){var $list=this;return $sarg(function($9m){switch($9m){}return getFinished();},function(){return Comprehension(function(){var $9n=(function(){var $9p=$list.size;if($9p>0){var $9q=(0);var $9r=$9q;for(var i=1; i<$9p; i++){$9r=$9r.successor;}
return Range($9q,$9r,{Element$Sequential:{t:Integer}})
}else return getEmpty();}()).iterator();var $9o=getFinished();var next$9o=function(){while(($9o=$9n.next())!==getFinished()){if($list.includesAt($9o,$9l)){return $9o;}
}
return getFinished();}
next$9o();return function(){if($9o!==getFinished()){var $9s=$9o;var $9t=$9s;next$9o();return $9t;}
return getFinished();}
},{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}});},{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}});};$list.inclusions.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}}},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.inclusions.$an.doc[0]),shared(),$default()];},d:['$','List','$m','inclusions']};};$list.firstInclusion=function firstInclusion($9u){var $list=this;;var $9w;for(var $9v=(function(){var $9x=$list.size;if($9x>0){var $9y=(0);var $9z=$9y;for(var i=1; i<$9x; i++){$9z=$9z.successor;}
return Range($9y,$9z,{Element$Sequential:{t:Integer}})
}else return getEmpty();}()).iterator();($9w=$9v.next())!==getFinished();){if($list.includesAt($9w,$9u)){return $9w;}}
if(getFinished() === $9w){return null;}};$list.firstInclusion.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.firstInclusion.$an.doc[0]),shared(),$default()];},d:['$','List','$m','firstInclusion']};};$list.lastInclusion=function lastInclusion($a0){var $list=this;;var $a2;for(var $a1=(function(){var $a3=$list.size;if($a3>0){var $a4=(0);var $a5=$a4;for(var i=1; i<$a3; i++){$a5=$a5.successor;}
return Range($a4,$a5,{Element$Sequential:{t:Integer}})
}else return getEmpty();}()).reversed.iterator();($a2=$a1.next())!==getFinished();){if($list.includesAt($a2,$a0)){return $a2;}}
if(getFinished() === $a2){return null;}};$list.lastInclusion.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.lastInclusion.$an.doc[0]),shared(),$default()];},d:['$','List','$m','lastInclusion']};};$list.occursAt=function occursAt($a6,$a7){var $list=this;var $a8=$list.$get($a6);var $a9;if(($a9=$a7)!==null){var $aa;if(($aa=$a8)!==null){return $aa.equals($a9);}else {return false;}}else {return !exists($a8);}};$list.occursAt.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.occursAt.$an.doc[0]),shared(),$default()];},d:['$','List','$m','occursAt']};};$list.occurs=function occurs($ab){var $list=this;;var $ad;for(var $ac=(function(){var $ae=$list.size;if($ae>0){var $af=(0);var $ag=$af;for(var i=1; i<$ae; i++){$ag=$ag.successor;}
return Range($af,$ag,{Element$Sequential:{t:Integer}})
}else return getEmpty();}()).iterator();($ad=$ac.next())!==getFinished();){if($list.occursAt($ad,$ab)){return true;}}return false;};$list.occurs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.occurs.$an.doc[0]),shared(),$default()];},d:['$','List','$m','occurs']};};$list.contains=function ($ah){var $list=this;return $list.occurs($ah);};$list.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.contains.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.occurs)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),actual(),$default()];},d:['$','List','$m','contains']};};$list.occurrences=function ($ai){var $list=this;return $sarg(function($aj){switch($aj){}return getFinished();},function(){return Comprehension(function(){var $ak=(function(){var $am=$list.size;if($am>0){var $an=(0);var $ao=$an;for(var i=1; i<$am; i++){$ao=$ao.successor;}
return Range($an,$ao,{Element$Sequential:{t:Integer}})
}else return getEmpty();}()).iterator();var $al=getFinished();var next$al=function(){while(($al=$ak.next())!==getFinished()){if($list.occursAt($al,$ai)){return $al;}
}
return getFinished();}
next$al();return function(){if($al!==getFinished()){var $ap=$al;var $aq=$ap;next$al();return $aq;}
return getFinished();}
},{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}});},{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}});};$list.occurrences.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}}},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.occurrences.$an.doc[0]),shared(),$default()];},d:['$','List','$m','occurrences']};};$list.firstOccurrence=function firstOccurrence($ar){var $list=this;;var $at;for(var $as=(function(){var $au=$list.size;if($au>0){var $av=(0);var $aw=$av;for(var i=1; i<$au; i++){$aw=$aw.successor;}
return Range($av,$aw,{Element$Sequential:{t:Integer}})
}else return getEmpty();}()).iterator();($at=$as.next())!==getFinished();){if($list.occursAt($at,$ar)){return $at;}}
if(getFinished() === $at){return null;}};$list.firstOccurrence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.firstOccurrence.$an.doc[0]),shared(),$default()];},d:['$','List','$m','firstOccurrence']};};$list.lastOccurrence=function lastOccurrence($ax){var $list=this;;var $az;for(var $ay=(function(){var $b0=$list.size;if($b0>0){var $b1=(0);var $b2=$b1;for(var i=1; i<$b0; i++){$b2=$b2.successor;}
return Range($b1,$b2,{Element$Sequential:{t:Integer}})
}else return getEmpty();}()).reversed.iterator();($az=$ay.next())!==getFinished();){if($list.occursAt($az,$ax)){return $az;}}
if(getFinished() === $az){return null;}};$list.lastOccurrence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.lastOccurrence.$an.doc[0]),shared(),$default()];},d:['$','List','$m','lastOccurrence']};};$list.indexes=function ($b3){var $list=this;return $sarg(function($b4){switch($b4){}return getFinished();},function(){return Comprehension(function(){var $b5=(function(){var $b7=$list.size;if($b7>0){var $b8=(0);var $b9=$b8;for(var i=1; i<$b7; i++){$b9=$b9.successor;}
return Range($b8,$b9,{Element$Sequential:{t:Integer}})
}else return getEmpty();}()).iterator();var $b6=getFinished();var next$b6=function(){while(($b6=$b5.next())!==getFinished()){if($b3(($ba=$list.$get($b6),$nn($ba)?$ba:getNothing()))){return $b6;}
}
return getFinished();}
next$b6();return function(){if($b6!==getFinished()){var $bb=$b6;var $bc=$bb;next$b6();return $bc;}
return getFinished();}
},{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}});},{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}});};$list.indexes.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:Integer},Absent$Iterable:{t:Null}}},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[doc("The predicate the indexed elements must \nsatisfy")];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.indexes.$an.doc[0]),shared(),$default()];},d:['$','List','$m','indexes']};};$list.trim=function trim($bd){var $list=this;var $be;if(($be=$list.lastIndex)!==null){var $bf=(-(1));function set$bf($bg){return $bf=$bg;};var $bh=(-(1));function set$bh($bi){return $bh=$bi;};;var $bk;for(var $bj=Range((0),$be,{Element$Range:{t:Integer}}).iterator();($bk=$bj.next())!==getFinished();){if(!$bd(($bl=$list.$get($bk),$nn($bl)?$bl:getNothing()))){$bf=$bk;break;}var $bl;}
if(getFinished() === $bk){return getEmpty();};var $bn;for(var $bm=Range($be,(0),{Element$Range:{t:Integer}}).iterator();($bn=$bm.next())!==getFinished();){if(!$bd(($bo=$list.$get($bn),$nn($bo)?$bo:getNothing()))){$bh=$bn;break;}var $bo;}
if(getFinished() === $bn){return getEmpty();}return $list.span($bf,$bh);}else {return getEmpty();}};$list.trim.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.trim.$an.doc[0]),shared(),$default()];},d:['$','List','$m','trim']};};$list.trimLeading=function trimLeading($bp){var $list=this;var $bq;if(($bq=$list.lastIndex)!==null){;var $bs;for(var $br=Range((0),$bq,{Element$Range:{t:Integer}}).iterator();($bs=$br.next())!==getFinished();){if(!$bp(($bt=$list.$get($bs),$nn($bt)?$bt:getNothing()))){return $list.span($bs,$bq);}var $bt;}}return getEmpty();};$list.trimLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.trimLeading.$an.doc[0]),shared(),$default()];},d:['$','List','$m','trimLeading']};};$list.trimTrailing=function trimTrailing($bu){var $list=this;var $bv;if(($bv=$list.lastIndex)!==null){;var $bx;for(var $bw=Range($bv,(0),{Element$Range:{t:Integer}}).iterator();($bx=$bw.next())!==getFinished();){if(!$bu(($by=$list.$get($bx),$nn($by)?$by:getNothing()))){return $list.span((0),$bx);}var $by;}}return getEmpty();};$list.trimTrailing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'trimming',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.trimTrailing.$an.doc[0]),shared(),$default()];},d:['$','List','$m','trimTrailing']};};$list.initial=function ($bz){var $list=this;return $list.segment((0),$bz);};$list.initial.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.initial.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.terminal)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','List','$m','initial']};};$list.terminal=function terminal($c0){var $list=this;var $c1;if(($c1=$list.lastIndex)!==null&&($c0>(0))){return $list.span($c1.minus($c0).plus((1)),$c1);}else {return getEmpty();}};$list.terminal.$crtmm$=function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:List,$an:function(){return[doc($CCMM$['ceylon.language'].List.$m.terminal.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$List().$$.prototype.initial)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$default()];},d:['$','List','$m','terminal']};};$list.clone={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:'Element$List'}},$ps:[],$cont:List,$an:function(){return[shared(),actual(),formal()];},d:['$','List','$m','clone']};}};})(List.$$.prototype);}
return List;}
exports.$init$List=$init$List;$init$List();var $81,$86,$ba;function Tuple(first,rest,$$targs$$,$tuple){$init$Tuple();if($tuple===undefined)$tuple=new Tuple.$$;
set_type_args($tuple,$$targs$$);$tuple.first_=first;$tuple.rest_=rest;$Object($tuple);Sequence({Element$Sequence:$$targs$$.Element$Tuple},$tuple);$tuple.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:'First$Tuple',$cont:Tuple,$an:function(){return[doc("The first element of this tuple."),shared(),actual()];},d:['$','Tuple','$at','first']};}};$tuple.$prop$getFirst.get=function(){return first};$tuple.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:'Rest$Tuple',$cont:Tuple,$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.rest.$an.doc[0]),shared(),actual()];},d:['$','Tuple','$at','rest']};}};$tuple.$prop$getRest.get=function(){return rest};return $tuple;}
Tuple.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$Object},$ps:[{$nm:'first',$mt:'prm',$t:'First$Tuple',$an:function(){return[doc("The first element of this tuple."),shared(),actual()];}},{$nm:'rest',$mt:'prm',$t:'Rest$Tuple',$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.rest.$an.doc[0]),shared(),actual()];}}],$tp:{Element$Tuple:{'var':'out'},First$Tuple:{'var':'out','satisfies':['Element$Tuple']},Rest$Tuple:{'var':'out','satisfies':[{t:Sequential,a:{Element$Sequential:'Element$Tuple'}}],'def':{t:Empty}}},satisfies:[{t:Sequence,a:{Element$Sequence:'Element$Tuple'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$an.doc[0]),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared(),$final()];},d:['$','Tuple']};};
exports.Tuple=Tuple;function $init$Tuple(){if(Tuple.$$===undefined){initTypeProto(Tuple,'ceylon.language::Tuple',$init$$Object(),$init$Sequence());
(function($tuple){$defat($tuple,'first',function(){return this.first_;},undefined,function(){return{mod:$CCMM$,$t:'First$Tuple',$cont:Tuple,$an:function(){return[doc("The first element of this tuple."),shared(),actual()];},d:['$','Tuple','$at','first']};});$defat($tuple,'rest',function(){return this.rest_;},undefined,function(){return{mod:$CCMM$,$t:'Rest$Tuple',$cont:Tuple,$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$at.rest.$an.doc[0]),shared(),actual()];},d:['$','Tuple','$at','rest']};});$defat($tuple,'size',function(){var $tuple=this;return (1).plus($tuple.rest.size);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$at','size']};});$tuple.$get=function $get($c2){var $tuple=this;var $c3=$c2.compare((0));if($c3===getSmaller()) {return null;}else if($c3===getEqual()) {return $tuple.first;}else if($c3===getLarger()) {return $tuple.rest.$get($c2.minus((1)));}};$tuple.$get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Tuple']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$m','get']};};$defat($tuple,'lastIndex',function(){var $tuple=this;var $c4;if(($c4=$tuple.rest.lastIndex)!==null){return $c4.plus((1));}else {return (0);}},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$at','lastIndex']};});$defat($tuple,'last',function(){var $tuple=this;var $c5;if(nonempty(($c5=$tuple.rest))){return $c5.last;}else {return $tuple.first;}},undefined,function(){return{mod:$CCMM$,$t:'Element$Tuple',$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$at','last']};});$tuple.segment=function segment($c6,$c7){var $tuple=this;if(($c7<=(0))){return getEmpty();}var $c8=($c9=(($c6<(0))?(0):null),$nn($c9)?$c9:$c6);var $c9;if(($c8==(0))){return ($ca=(($c7==(1))?Tuple($tuple.first,getEmpty(),{Rest$Tuple:{t:Empty},Element$Tuple:$tuple.$$targs$$.First$Tuple,First$Tuple:$tuple.$$targs$$.First$Tuple}):null),$nn($ca)?$ca:$tuple.rest.segment((0),$c7.plus($c8).minus((1))).withLeading($tuple.first,{Other$withLeading:$tuple.$$targs$$.First$Tuple}));var $ca;}return $tuple.rest.segment($c8.minus((1)),$c7);};$tuple.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Tuple'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$m','segment']};};$tuple.span=function span($cb,$cc){var $tuple=this;if((($cb<(0))&&($cc<(0)))){return getEmpty();}var $cd=($ce=(($cb<(0))?(0):null),$nn($ce)?$ce:$cb);var $ce;var $cf=($cg=(($cc<(0))?(0):null),$nn($cg)?$cg:$cc);var $cg;return ($ch=(($cd<=$cf)?$tuple.segment($cb,$cf.minus($cd).plus((1))):null),$nn($ch)?$ch:$tuple.segment($cf,$cd.minus($cf).plus((1))).reversed.sequence);var $ch;};$tuple.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Tuple'}},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'end',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$m','span']};};$tuple.spanTo=function ($ci){var $tuple=this;return ($cj=(($ci<(0))?getEmpty():null),$nn($cj)?$cj:$tuple.span((0),$ci));};$tuple.spanFrom=function ($ck){var $tuple=this;return $tuple.span($ck,$tuple.size);};$defat($tuple,'reversed',function(){var $tuple=this;return $tuple.rest.reversed.withTrailing($tuple.first,{Other$withTrailing:$tuple.$$targs$$.First$Tuple});},undefined,function(){return{mod:$CCMM$,$t:{t:Sequence,a:{Element$Sequence:'Element$Tuple'}},$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$at','reversed']};});$tuple.clone=function (){var $tuple=this;return $tuple;};$tuple.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'First$Tuple'}]},$ps:[],$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$m','clone']};};$tuple.iterator=function iterator(){var $tuple=this;function $cl($$targs$$){var $$cl=new $cl.$$;
$$cl.$$outer=$tuple;$$cl.$$targs$$=$$targs$$;Iterator({Element$Iterator:$tuple.$$targs$$.Element$Tuple},$$cl);$$cl.$cm_=$tuple;$$cl.$prop$get$cm={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Tuple'}},$cont:$cl,$an:function(){return[variable()];},d:['$','Tuple','$m','iterator','$o','iterator$wey6kq','$at','current$5dvxla']};}};$$cl.$prop$get$cm.get=function(){return $cm};return $$cl;
};$cl.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Tuple'}}],d:['$','Tuple','$m','iterator','$o','iterator$wey6kq']};};function $init$$cl(){if($cl.$$===undefined){initTypeProto($cl,'ceylon.language::Tuple.iterator',Basic,$init$Iterator());
(function($$cl){$defat($$cl,'$cm',function(){return this.$cm_;},function($cn){return this.$cm_=$cn;},function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Tuple'}},$cont:$cl,$an:function(){return[variable()];},d:['$','Tuple','$m','iterator','$o','iterator$wey6kq','$at','current$5dvxla']};});$$cl.next=function next(){var $$cl=this;var $co;if(nonempty(($co=$$cl.$cm))){$$cl.$cm=$co.rest;return $co.first;}else {return getFinished();}};$$cl.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Tuple',{t:Finished}]},$ps:[],$cont:$cl,$an:function(){return[shared(),actual()];},d:['$','Tuple','$m','iterator','$o','iterator$wey6kq','$m','next']};};})($cl.$$.prototype);}
return $cl;}
$init$$cl();var $cp;function get$cp(){if($cp===undefined){$cp=$init$$cl()({Element$Iterator:$tuple.$$targs$$.Element$Tuple});$cp.$crtmm$=get$cp.$crtmm$;}
return $cp;}
get$cp.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$cl},$cont:iterator,d:['$','Tuple','$m','iterator','$o','iterator$wey6kp']};};$prop$get$cp={get:get$cp,$crtmm$:get$cp.$crtmm$};get$cl=get$cp;$prop$get$cl=get$cp;return get$cp();};$tuple.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Tuple'}},$ps:[],$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$m','iterator']};};$tuple.contains=function contains($cq){var $tuple=this;var $cr;if(($cr=$tuple.first)!==null&&$cr.equals($cq)){return true;}else {return $tuple.rest.contains($cq);}};$tuple.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Tuple,$an:function(){return[shared(),actual()];},d:['$','Tuple','$m','contains']};};$tuple.withLeading=function ($cs,$$$mptypes){var $tuple=this;return Tuple($cs,$tuple,{Rest$Tuple:{t:'T',l:[$tuple.$$targs$$.First$Tuple]},First$Tuple:$$$mptypes.Other$withLeading,Element$Tuple:{t:'u',l:[$$$mptypes.Other$withLeading,$tuple.$$targs$$.Element$Tuple]}});};$tuple.withLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Other$withLeading'},{$t:'First$Tuple'}]},$ps:[{$nm:'element',$mt:'prm',$t:'Other$withLeading',$an:function(){return[doc("The first element of the resulting tuple.")];}}],$cont:Tuple,$tp:{Other$withLeading:{}},$an:function(){return[doc($CCMM$['ceylon.language'].Tuple.$m.withLeading.$an.doc[0]),shared(),actual()];},d:['$','Tuple','$m','withLeading']};};})(Tuple.$$.prototype);}
return Tuple;}
exports.$init$Tuple=$init$Tuple;$init$Tuple();var $cj;function ChainedIterator($ct,$cu,$$targs$$,$chainedIterator){$init$ChainedIterator();if($chainedIterator===undefined)$chainedIterator=new ChainedIterator.$$;
set_type_args($chainedIterator,$$targs$$);$chainedIterator.$ct_=$ct;$chainedIterator.$cu_=$cu;Iterator({Element$Iterator:{t:'u',l:[$$targs$$.Element$ChainedIterator,$$targs$$.Other$ChainedIterator]}},$chainedIterator);$chainedIterator.$cv_=$chainedIterator.$ct.iterator();$chainedIterator.$prop$get$cv={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$ChainedIterator','Other$ChainedIterator']}}},$cont:ChainedIterator,$an:function(){return[variable()];},d:['$','ChainedIterator','$at','iter$81ctsv']};}};$chainedIterator.$prop$get$cv.get=function(){return $cv};$chainedIterator.$cw_=true;$chainedIterator.$prop$get$cw={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:ChainedIterator,$an:function(){return[variable()];},d:['$','ChainedIterator','$at','more$5fttbe']};}};$chainedIterator.$prop$get$cw.get=function(){return $cw};return $chainedIterator;}
ChainedIterator.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'first',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Element$ChainedIterator',Absent$Iterable:{t:Null}}},$an:function(){return[];}},{$nm:'second',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Other$ChainedIterator',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$tp:{Element$ChainedIterator:{'var':'out'},Other$ChainedIterator:{'var':'out'}},satisfies:[{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$ChainedIterator','Other$ChainedIterator']}}}],$an:function(){return[doc($CCMM$['ceylon.language'].ChainedIterator.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.chain)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Enrique Zamudio"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}}))];},d:['$','ChainedIterator']};};function $init$ChainedIterator(){if(ChainedIterator.$$===undefined){initTypeProto(ChainedIterator,'ceylon.language::ChainedIterator',Basic,$init$Iterator());
(function($chainedIterator){$defat($chainedIterator,'$cv',function(){return this.$cv_;},function($cx){return this.$cv_=$cx;},function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:'u',l:['Element$ChainedIterator','Other$ChainedIterator']}}},$cont:ChainedIterator,$an:function(){return[variable()];},d:['$','ChainedIterator','$at','iter$81ctsv']};});$defat($chainedIterator,'$cw',function(){return this.$cw_;},function($cy){return this.$cw_=$cy;},function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:ChainedIterator,$an:function(){return[variable()];},d:['$','ChainedIterator','$at','more$5fttbe']};});$chainedIterator.next=function next(){var $chainedIterator=this;var $cz=$chainedIterator.$cv.next();function set$cz($d0){return $cz=$d0;};var $d1;if($is(($d1=$cz),{t:Finished})){if($chainedIterator.$cw){$chainedIterator.$cv=$chainedIterator.$cu.iterator();$chainedIterator.$cw=false;$cz=$chainedIterator.$cv.next();}}return $cz;};$chainedIterator.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$ChainedIterator','Other$ChainedIterator',{t:Finished}]},$ps:[],$cont:ChainedIterator,$an:function(){return[shared(),actual()];},d:['$','ChainedIterator','$m','next']};};$defat($chainedIterator,'$ct',function(){return this.$ct_;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$ChainedIterator',Absent$Iterable:{t:Null}}},$cont:ChainedIterator,d:['$','ChainedIterator','$at','first$69b6kn']};});$defat($chainedIterator,'$cu',function(){return this.$cu_;},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Other$ChainedIterator',Absent$Iterable:{t:Null}}},$cont:ChainedIterator,d:['$','ChainedIterator','$at','second$1cry77']};});})(ChainedIterator.$$.prototype);}
return ChainedIterator;}
exports.$init$ChainedIterator=$init$ChainedIterator;$init$ChainedIterator();function Entry(key,item,$$targs$$,$entry){$init$Entry();if($entry===undefined)$entry=new Entry.$$;
set_type_args($entry,$$targs$$);$entry.key_=key;$entry.item_=item;$Object($entry);$entry.$prop$getKey={$crtmm$:function(){return{mod:$CCMM$,$t:'Key$Entry',$cont:Entry,$an:function(){return[doc("The key used to access the entry."),shared()];},d:['$','Entry','$at','key']};}};$entry.$prop$getKey.get=function(){return key};$entry.$prop$getItem={$crtmm$:function(){return{mod:$CCMM$,$t:'Item$Entry',$cont:Entry,$an:function(){return[doc("The value associated with the key."),shared()];},d:['$','Entry','$at','item']};}};$entry.$prop$getItem.get=function(){return item};$entry.$prop$getPair={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Key$Entry'},{$t:'Item$Entry'}]},$cont:Entry,$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$at.pair.$an.doc[0]),shared()];},d:['$','Entry','$at','pair']};}};$entry.$prop$getPair.get=function(){return pair};$entry.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Entry,$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$at.string.$an.doc[0]),shared(),actual()];},d:['$','Entry','$at','string']};}};$entry.$prop$getString.get=function(){return string};return $entry;}
Entry.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$Object},$ps:[{$nm:'key',$mt:'prm',$t:'Key$Entry',$an:function(){return[doc("The key used to access the entry."),shared()];}},{$nm:'item',$mt:'prm',$t:'Item$Entry',$an:function(){return[doc("The value associated with the key."),shared()];}}],$tp:{Key$Entry:{'var':'out','satisfies':[{t:$Object}]},Item$Entry:{'var':'out','satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$an.doc[0]),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared(),$final()];},d:['$','Entry']};};
exports.Entry=Entry;function $init$Entry(){if(Entry.$$===undefined){initTypeProto(Entry,'ceylon.language::Entry',$init$$Object());
(function($entry){$defat($entry,'key',function(){return this.key_;},undefined,function(){return{mod:$CCMM$,$t:'Key$Entry',$cont:Entry,$an:function(){return[doc("The key used to access the entry."),shared()];},d:['$','Entry','$at','key']};});$defat($entry,'item',function(){return this.item_;},undefined,function(){return{mod:$CCMM$,$t:'Item$Entry',$cont:Entry,$an:function(){return[doc("The value associated with the key."),shared()];},d:['$','Entry','$at','item']};});$defat($entry,'pair',function(){var $entry=this;return Tuple($entry.key,Tuple($entry.item,getEmpty(),{Rest$Tuple:{t:Empty},Element$Tuple:$entry.$$targs$$.Item$Entry,First$Tuple:$entry.$$targs$$.Item$Entry}),{Rest$Tuple:{t:'T',l:[$entry.$$targs$$.Item$Entry]},Element$Tuple:{t:'u',l:[$entry.$$targs$$.Key$Entry,$entry.$$targs$$.Item$Entry]},First$Tuple:$entry.$$targs$$.Key$Entry});},undefined,function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Key$Entry'},{$t:'Item$Entry'}]},$cont:Entry,$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$at.pair.$an.doc[0]),shared()];},d:['$','Entry','$at','pair']};});$entry.equals=function equals($d2){var $entry=this;var $d3;if($is(($d3=$d2),{t:Entry,a:{Item$Entry:{t:$Object},Key$Entry:{t:$Object}}})){return ($entry.key.equals($d3.key)&&$entry.item.equals($d3.item));}else {return false;}};$entry.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Entry,$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$m.equals.$an.doc[0]),shared(),actual()];},d:['$','Entry','$m','equals']};};$defat($entry,'hash',function(){var $entry=this;return (31).plus($entry.key.hash).times((31)).plus($entry.item.hash);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Entry,$an:function(){return[shared(),actual()];},d:['$','Entry','$at','hash']};});$defat($entry,'string',function(){var $entry=this;return StringBuilder([$entry.key.string,"->",$entry.item.string]).string;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Entry,$an:function(){return[doc($CCMM$['ceylon.language'].Entry.$at.string.$an.doc[0]),shared(),actual()];},d:['$','Entry','$at','string']};});})(Entry.$$.prototype);}
return Entry;}
exports.$init$Entry=$init$Entry;$init$Entry();function Comparable($$targs$$,$comparable){set_type_args($comparable,$$targs$$);}
Comparable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Comparable:{'var':'in','satisfies':[{t:Comparable,a:{Other$Comparable:'Other$Comparable'}}]}},of:['Other$Comparable'],$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$an.doc[0]),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Comparable']};};
exports.Comparable=Comparable;function $init$Comparable(){if(Comparable.$$===undefined){initTypeProtoI(Comparable,'ceylon.language::Comparable');
(function($comparable){$comparable.compare={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Comparable',$an:function(){return[];}}],$cont:Comparable,$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$m.compare.$an.doc[0]),see("equals"),shared(),formal()];},d:['$','Comparable','$m','compare']};}};$comparable.largerThan=function ($d4){var $comparable=this;return ($comparable.compare($d4)===getLarger());};$comparable.largerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Comparable',$an:function(){return[];}}],$cont:Comparable,$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$m.largerThan.$an.doc[0]),shared(),$default()];},d:['$','Comparable','$m','largerThan']};};$comparable.smallerThan=function ($d5){var $comparable=this;return ($comparable.compare($d5)===getSmaller());};$comparable.smallerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Comparable',$an:function(){return[];}}],$cont:Comparable,$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$m.smallerThan.$an.doc[0]),shared(),$default()];},d:['$','Comparable','$m','smallerThan']};};$comparable.notSmallerThan=function ($d6){var $comparable=this;return !($comparable.compare($d6)===getSmaller());};$comparable.notSmallerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Comparable',$an:function(){return[];}}],$cont:Comparable,$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$m.notSmallerThan.$an.doc[0]),shared(),$default()];},d:['$','Comparable','$m','notSmallerThan']};};$comparable.notLargerThan=function ($d7){var $comparable=this;return !($comparable.compare($d7)===getLarger());};$comparable.notLargerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Comparable',$an:function(){return[];}}],$cont:Comparable,$an:function(){return[doc($CCMM$['ceylon.language'].Comparable.$m.notLargerThan.$an.doc[0]),shared(),$default()];},d:['$','Comparable','$m','notLargerThan']};};})(Comparable.$$.prototype);}
return Comparable;}
exports.$init$Comparable=$init$Comparable;$init$Comparable();function Invertable($$targs$$,$invertable){Summable({Other$Summable:$$targs$$.Other$Invertable},$invertable);set_type_args($invertable,$$targs$$);}
Invertable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Invertable:{'satisfies':[{t:Invertable,a:{Other$Invertable:'Other$Invertable'}}]}},satisfies:[{t:Summable,a:{Other$Summable:'Other$Invertable'}}],of:['Other$Invertable'],$an:function(){return[doc($CCMM$['ceylon.language'].Invertable.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Float)].reifyCeylonType({Element$Iterable:{t:ClassDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Invertable']};};
exports.Invertable=Invertable;function $init$Invertable(){if(Invertable.$$===undefined){initTypeProtoI(Invertable,'ceylon.language::Invertable',$init$Summable());
(function($invertable){$invertable.$prop$getNegated={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Invertable',$cont:Invertable,$an:function(){return[doc("The additive inverse of this value."),shared(),formal()];},d:['$','Invertable','$at','negated']};}};$invertable.minus=function ($d8){var $invertable=this;return $invertable.plus($d8.negated);};$invertable.minus.$crtmm$=function(){return{mod:$CCMM$,$t:'Other$Invertable',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Invertable',$an:function(){return[];}}],$cont:Invertable,$an:function(){return[doc($CCMM$['ceylon.language'].Invertable.$m.minus.$an.doc[0]),shared(),$default()];},d:['$','Invertable','$m','minus']};};})(Invertable.$$.prototype);}
return Invertable;}
exports.$init$Invertable=$init$Invertable;$init$Invertable();function Summable($$targs$$,$summable){set_type_args($summable,$$targs$$);}
Summable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Summable:{'satisfies':[{t:Summable,a:{Other$Summable:'Other$Summable'}}]}},of:['Other$Summable'],$an:function(){return[doc($CCMM$['ceylon.language'].Summable.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),String),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Numeric)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:InterfaceDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Summable']};};
exports.Summable=Summable;function $init$Summable(){if(Summable.$$===undefined){initTypeProtoI(Summable,'ceylon.language::Summable');
(function($summable){$summable.plus={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Summable',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Summable',$an:function(){return[];}}],$cont:Summable,$an:function(){return[doc($CCMM$['ceylon.language'].Summable.$m.plus.$an.doc[0]),shared(),formal()];},d:['$','Summable','$m','plus']};}};})(Summable.$$.prototype);}
return Summable;}
exports.$init$Summable=$init$Summable;$init$Summable();function Ordinal($$targs$$,$ordinal){set_type_args($ordinal,$$targs$$);}
Ordinal.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Ordinal:{'var':'out','satisfies':[{t:Ordinal,a:{Other$Ordinal:'Other$Ordinal'}}]}},of:['Other$Ordinal'],$an:function(){return[doc($CCMM$['ceylon.language'].Ordinal.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Character),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integral),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Enumerable),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Range)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:InterfaceDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Ordinal']};};
exports.Ordinal=Ordinal;function $init$Ordinal(){if(Ordinal.$$===undefined){initTypeProtoI(Ordinal,'ceylon.language::Ordinal');
(function($ordinal){$ordinal.$prop$getSuccessor={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Ordinal',$cont:Ordinal,$an:function(){return[doc("The successor of this value."),shared(),formal()];},d:['$','Ordinal','$at','successor']};}};$ordinal.$prop$getPredecessor={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Ordinal',$cont:Ordinal,$an:function(){return[doc("The predecessor of this value."),shared(),formal()];},d:['$','Ordinal','$at','predecessor']};}};})(Ordinal.$$.prototype);}
return Ordinal;}
exports.$init$Ordinal=$init$Ordinal;$init$Ordinal();function Enumerable($$targs$$,$enumerable){Ordinal({Other$Ordinal:$$targs$$.Other$Enumerable},$enumerable);set_type_args($enumerable,$$targs$$);}
Enumerable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Enumerable:{'var':'out','satisfies':[{t:Enumerable,a:{Other$Enumerable:'Other$Enumerable'}}]}},satisfies:[{t:Ordinal,a:{Other$Ordinal:'Other$Enumerable'}}],of:['Other$Enumerable'],$an:function(){return[doc($CCMM$['ceylon.language'].Enumerable.$an.doc[0]),shared()];},d:['$','Enumerable']};};
exports.Enumerable=Enumerable;function $init$Enumerable(){if(Enumerable.$$===undefined){initTypeProtoI(Enumerable,'ceylon.language::Enumerable',$init$Ordinal());
(function($enumerable){$enumerable.$prop$getIntegerValue={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Enumerable,$an:function(){return[doc($CCMM$['ceylon.language'].Enumerable.$at.integerValue.$an.doc[0]),shared(),formal()];},d:['$','Enumerable','$at','integerValue']};}};})(Enumerable.$$.prototype);}
return Enumerable;}
exports.$init$Enumerable=$init$Enumerable;$init$Enumerable();function Numeric($$targs$$,$numeric){Invertable({Other$Invertable:$$targs$$.Other$Numeric},$numeric);set_type_args($numeric,$$targs$$);}
Numeric.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Numeric:{'satisfies':[{t:Numeric,a:{Other$Numeric:'Other$Numeric'}}]}},satisfies:[{t:Invertable,a:{Other$Invertable:'Other$Numeric'}}],of:['Other$Numeric'],$an:function(){return[doc($CCMM$['ceylon.language'].Numeric.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Scalar)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Numeric']};};
exports.Numeric=Numeric;function $init$Numeric(){if(Numeric.$$===undefined){initTypeProtoI(Numeric,'ceylon.language::Numeric',$init$Invertable());
(function($numeric){$numeric.times={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Numeric',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Numeric',$an:function(){return[];}}],$cont:Numeric,$an:function(){return[doc("The product of this number and the given number."),shared(),formal()];},d:['$','Numeric','$m','times']};}};$numeric.divided={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Numeric',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Numeric',$an:function(){return[];}}],$cont:Numeric,$an:function(){return[doc($CCMM$['ceylon.language'].Numeric.$m.divided.$an.doc[0]),see("Integral"),shared(),formal()];},d:['$','Numeric','$m','divided']};}};})(Numeric.$$.prototype);}
return Numeric;}
exports.$init$Numeric=$init$Numeric;$init$Numeric();function Scalar($$targs$$,$scalar){Numeric({Other$Numeric:$$targs$$.Other$Scalar},$scalar);Comparable({Other$Comparable:$$targs$$.Other$Scalar},$scalar);Number($scalar);set_type_args($scalar,$$targs$$);}
Scalar.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Scalar:{'satisfies':[{t:Scalar,a:{Other$Scalar:'Other$Scalar'}}]}},satisfies:[{t:Numeric,a:{Other$Numeric:'Other$Scalar'}},{t:Comparable,a:{Other$Comparable:'Other$Scalar'}},{t:Number$}],of:['Other$Scalar'],$an:function(){return[doc($CCMM$['ceylon.language'].Scalar.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Float)].reifyCeylonType({Element$Iterable:{t:ClassDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Scalar']};};
exports.Scalar=Scalar;function $init$Scalar(){if(Scalar.$$===undefined){initTypeProtoI(Scalar,'ceylon.language::Scalar',$init$Numeric(),$init$Comparable(),$init$Number$());
(function($scalar){$scalar.$prop$getMagnitude={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Scalar',$cont:Scalar,$an:function(){return[doc($CCMM$['ceylon.language'].Scalar.$at.magnitude.$an.doc[0]),shared(),actual(),formal()];},d:['$','Scalar','$at','magnitude']};}};$scalar.$prop$getPositive={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Scalar,$an:function(){return[doc($CCMM$['ceylon.language'].Scalar.$at.positive.$an.doc[0]),shared(),actual(),formal()];},d:['$','Scalar','$at','positive']};}};$scalar.$prop$getNegative={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Scalar,$an:function(){return[doc($CCMM$['ceylon.language'].Scalar.$at.negative.$an.doc[0]),shared(),actual(),formal()];},d:['$','Scalar','$at','negative']};}};$scalar.$prop$getFractionalPart={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Scalar',$cont:Scalar,$an:function(){return[shared(),actual(),formal()];},d:['$','Scalar','$at','fractionalPart']};}};$scalar.$prop$getWholePart={$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Scalar',$cont:Scalar,$an:function(){return[shared(),actual(),formal()];},d:['$','Scalar','$at','wholePart']};}};$scalar.timesInteger={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Scalar',$ps:[{$nm:'integer',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Scalar,$an:function(){return[doc($CCMM$['ceylon.language'].Scalar.$m.timesInteger.$an.doc[0]),shared(),formal()];},d:['$','Scalar','$m','timesInteger']};}};$scalar.plusInteger={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Scalar',$ps:[{$nm:'integer',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Scalar,$an:function(){return[doc($CCMM$['ceylon.language'].Scalar.$m.plusInteger.$an.doc[0]),shared(),formal()];},d:['$','Scalar','$m','plusInteger']};}};})(Scalar.$$.prototype);}
return Scalar;}
exports.$init$Scalar=$init$Scalar;$init$Scalar();function Exponentiable($$targs$$,$exponentiable){Numeric({Other$Numeric:$$targs$$.This$Exponentiable},$exponentiable);set_type_args($exponentiable,$$targs$$);}
Exponentiable.$crtmm$=function(){return{mod:$CCMM$,$tp:{This$Exponentiable:{'satisfies':[{t:Exponentiable,a:{Other$Exponentiable:'Other$Exponentiable',This$Exponentiable:'This$Exponentiable'}}]},Other$Exponentiable:{'satisfies':[{t:Numeric,a:{Other$Numeric:'Other$Exponentiable'}}]}},satisfies:[{t:Numeric,a:{Other$Numeric:'This$Exponentiable'}}],of:['This$Exponentiable'],$an:function(){return[doc($CCMM$['ceylon.language'].Exponentiable.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer),$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Float)].reifyCeylonType({Element$Iterable:{t:ClassDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','Exponentiable']};};
exports.Exponentiable=Exponentiable;function $init$Exponentiable(){if(Exponentiable.$$===undefined){initTypeProtoI(Exponentiable,'ceylon.language::Exponentiable',$init$Numeric());
(function($exponentiable){$exponentiable.power={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'This$Exponentiable',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Exponentiable',$an:function(){return[];}}],$cont:Exponentiable,$an:function(){return[doc("The result of raising this number to the given power."),shared(),formal()];},d:['$','Exponentiable','$m','power']};}};})(Exponentiable.$$.prototype);}
return Exponentiable;}
exports.$init$Exponentiable=$init$Exponentiable;$init$Exponentiable();function Integral($$targs$$,$integral){Scalar({Other$Scalar:$$targs$$.Other$Integral},$integral);Enumerable({Other$Enumerable:$$targs$$.Other$Integral},$integral);set_type_args($integral,$$targs$$);}
Integral.$crtmm$=function(){return{mod:$CCMM$,$tp:{Other$Integral:{'satisfies':[{t:Integral,a:{Other$Integral:'Other$Integral'}}]}},satisfies:[{t:Scalar,a:{Other$Scalar:'Other$Integral'}},{t:Enumerable,a:{Other$Enumerable:'Other$Integral'}}],of:['Other$Integral'],$an:function(){return[doc($CCMM$['ceylon.language'].Integral.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Integer)].reifyCeylonType({Element$Iterable:{t:ClassDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Integral']};};
exports.Integral=Integral;function $init$Integral(){if(Integral.$$===undefined){initTypeProtoI(Integral,'ceylon.language::Integral',$init$Scalar(),$init$Enumerable());
(function($integral){$integral.remainder={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Other$Integral',$ps:[{$nm:'other',$mt:'prm',$t:'Other$Integral',$an:function(){return[];}}],$cont:Integral,$an:function(){return[doc($CCMM$['ceylon.language'].Integral.$m.remainder.$an.doc[0]),see("Numeric.divided"),shared(),formal()];},d:['$','Integral','$m','remainder']};}};$integral.$prop$getZero={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Integral,$an:function(){return[doc("Determine if the number is zero."),shared(),formal()];},d:['$','Integral','$at','zero']};}};$integral.$prop$getUnit={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Integral,$an:function(){return[doc("Determine if the number is one."),shared(),formal()];},d:['$','Integral','$at','unit']};}};$integral.divides=function ($d9){var $integral=this;return $d9.remainder($integral).zero;};$integral.divides.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'other',$mt:'prm',$t:'Other$Integral',$an:function(){return[];}}],$cont:Integral,$an:function(){return[doc($CCMM$['ceylon.language'].Integral.$m.divides.$an.doc[0]),shared()];},d:['$','Integral','$m','divides']};};})(Integral.$$.prototype);}
return Integral;}
exports.$init$Integral=$init$Integral;$init$Integral();function Scalable($$targs$$,$scalable){set_type_args($scalable,$$targs$$);}
Scalable.$crtmm$=function(){return{mod:$CCMM$,$tp:{Scale$Scalable:{'var':'in','satisfies':[{t:Numeric,a:{Other$Numeric:'Scale$Scalable'}}]},Value$Scalable:{'var':'out','satisfies':[{t:Scalable,a:{Value$Scalable:'Value$Scalable',Scale$Scalable:'Scale$Scalable'}}]}},of:['Value$Scalable'],$an:function(){return[doc($CCMM$['ceylon.language'].Scalable.$an.doc[0]),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Scalable']};};
exports.Scalable=Scalable;function $init$Scalable(){if(Scalable.$$===undefined){initTypeProtoI(Scalable,'ceylon.language::Scalable');
(function($scalable){$scalable.scale={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Value$Scalable',$ps:[{$nm:'scalar',$mt:'prm',$t:'Scale$Scalable',$an:function(){return[];}}],$cont:Scalable,$an:function(){return[doc("Scale this value by the given scale factor."),shared(),formal()];},d:['$','Scalable','$m','scale']};}};})(Scalable.$$.prototype);}
return Scalable;}
exports.$init$Scalable=$init$Scalable;$init$Scalable();function OverflowException($overflowException){$init$OverflowException();if($overflowException===undefined)$overflowException=new OverflowException.$$;
Exception("Numeric overflow",null,$overflowException);return $overflowException;}
OverflowException.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Exception},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].OverflowException.$an.doc[0]),shared()];},d:['$','OverflowException']};};
exports.OverflowException=OverflowException;function $init$OverflowException(){if(OverflowException.$$===undefined){initTypeProto(OverflowException,'ceylon.language::OverflowException',$init$Exception());
}
return OverflowException;}
exports.$init$OverflowException=$init$OverflowException;$init$OverflowException();function InitializationError($da,$initializationError){$init$InitializationError();if($initializationError===undefined)$initializationError=new InitializationError.$$;
$initializationError.$da_=$da;AssertionError($initializationError.$da,$initializationError);return $initializationError;}
InitializationError.$crtmm$=function(){return{mod:$CCMM$,'super':{t:AssertionError},$ps:[{$nm:'description',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].InitializationError.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),late)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','InitializationError']};};
exports.InitializationError=InitializationError;function $init$InitializationError(){if(InitializationError.$$===undefined){initTypeProto(InitializationError,'ceylon.language::InitializationError',$init$AssertionError());
(function($initializationError){$defat($initializationError,'$da',function(){return this.$da_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:InitializationError,d:['$','InitializationError','$at','description$b1z8en']};});})(InitializationError.$$.prototype);}
return InitializationError;}
exports.$init$InitializationError=$init$InitializationError;$init$InitializationError();function Resource($resource){$resource.textContent$defs$encoding=function($db){return "UTF-8";};$resource.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Resource,$an:function(){return[shared(),actual()];},d:['$','Resource','$at','string']};}};$resource.$prop$getString.get=function(){return string};}
Resource.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc($CCMM$['ceylon.language'].Resource.$an.doc[0]),by(["Enrique Zamudio"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','Resource']};};
exports.Resource=Resource;function $init$Resource(){if(Resource.$$===undefined){initTypeProtoI(Resource,'ceylon.language::Resource');
(function($resource){$defat($resource,'name',function(){var $resource=this;var $dc=$resource.uri.lastOccurrence(Character(47,true));$prop$get$dc={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$cont:$resource.$prop$getName,d:['$','Resource','$at','name','$at','pos$j2wbjv']};}};$prop$get$dc.get=function(){return $dc};var $dd;if(($dd=$dc)!==null){return $resource.uri.spanFrom($dd.plus((1)));}return $resource.uri;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Resource,$an:function(){return[doc("The name of the resource; usually the filename."),shared(),$default()];},d:['$','Resource','$at','name']};});$resource.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Resource,$an:function(){return[doc("The size of the resource, in bytes."),shared(),formal()];},d:['$','Resource','$at','size']};}};$resource.$prop$getUri={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Resource,$an:function(){return[doc("The full path to the resource."),shared(),formal()];},d:['$','Resource','$at','uri']};}};$resource.textContent={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$ps:[{$nm:'encoding',$mt:'prm',$def:1,$t:{t:String$},$an:function(){return[];}}],$cont:Resource,$an:function(){return[doc($CCMM$['ceylon.language'].Resource.$m.textContent.$an.doc[0]),shared(),formal()];},d:['$','Resource','$m','textContent']};}};$defat($resource,'string',function(){var $resource=this;return StringBuilder(["Resource[",$resource.uri.string,"]"]).string;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Resource,$an:function(){return[shared(),actual()];},d:['$','Resource','$at','string']};});})(Resource.$$.prototype);}
return Resource;}
exports.$init$Resource=$init$Resource;$init$Resource();
function Set($$targs$$,$set){Collection({Element$Collection:$$targs$$.Element$Set},$set);set_type_args($set,$$targs$$);}
Set.$crtmm$=function(){return{mod:$CCMM$,$tp:{Element$Set:{'var':'out','satisfies':[{t:$Object}]}},satisfies:[{t:Collection,a:{Element$Collection:'Element$Set'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Set.$an.doc[0]),shared()];},d:['$','Set']};};
exports.Set=Set;function $init$Set(){if(Set.$$===undefined){initTypeProtoI(Set,'ceylon.language::Set',$init$Collection());
(function($set){$set.contains=function ($de){var $set=this;return $set.getT$all()['ceylon.language::Collection'].$$.prototype.contains.call(this,$de);};$set.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Set,$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.contains.$an.doc[0]),shared(),actual(),$default()];},d:['$','Set','$m','contains']};};$set.superset=function superset($df){var $set=this;;var $dh;for(var $dg=$df.iterator();($dh=$dg.next())!==getFinished();){if(!$set.contains($dh)){return false;}}
if(getFinished() === $dh){return true;}};$set.superset.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:{t:$Object}}},$an:function(){return[];}}],$cont:Set,$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.superset.$an.doc[0]),shared(),$default()];},d:['$','Set','$m','superset']};};$set.subset=function subset($di){var $set=this;;var $dk;for(var $dj=$set.iterator();($dk=$dj.next())!==getFinished();){if(!$di.contains($dk)){return false;}}
if(getFinished() === $dk){return true;}};$set.subset.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:{t:$Object}}},$an:function(){return[];}}],$cont:Set,$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.subset.$an.doc[0]),shared(),$default()];},d:['$','Set','$m','subset']};};$set.equals=function equals($dl){var $set=this;var $dm;if($is(($dm=$dl),{t:Set,a:{Element$Set:{t:$Object}}})&&($dm.size==$set.size)){;var $do;for(var $dn=$set.iterator();($do=$dn.next())!==getFinished();){if(!$dm.contains($do)){return false;}}
if(getFinished() === $do){return true;}}return false;};$set.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Set,$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.equals.$an.doc[0]),shared(),actual(),$default()];},d:['$','Set','$m','equals']};};$defat($set,'hash',function(){var $set=this;var $dp=(0);function set$dp($dq){return $dp=$dq;};$prop$get$dp={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$set.$prop$getHash,$an:function(){return[variable()];},d:['$','Set','$at','hash','$at','hashCode$d5l62h']};}};$prop$get$dp.get=function(){return $dp};$prop$get$dp.set=set$dp;if(set$dp.$crtmm$===undefined)set$dp.$crtmm$=$prop$get$dp.$crtmm$;;var $ds;for(var $dr=$set.iterator();($ds=$dr.next())!==getFinished();){($dp=$dp.plus($ds.hash));}return $dp;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Set,$an:function(){return[shared(),actual(),$default()];},d:['$','Set','$at','hash']};});$set.union={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:'u',l:['Element$Set','Other$union']}}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$union'}},$an:function(){return[];}}],$cont:Set,$tp:{Other$union:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.union.$an.doc[0]),shared(),formal()];},d:['$','Set','$m','union']};}};$set.intersection={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:'i',l:['Element$Set','Other$intersection']}}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$intersection'}},$an:function(){return[];}}],$cont:Set,$tp:{Other$intersection:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.intersection.$an.doc[0]),shared(),formal()];},d:['$','Set','$m','intersection']};}};$set.exclusiveUnion={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:'u',l:['Element$Set','Other$exclusiveUnion']}}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$exclusiveUnion'}},$an:function(){return[];}}],$cont:Set,$tp:{Other$exclusiveUnion:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.exclusiveUnion.$an.doc[0]),shared(),formal()];},d:['$','Set','$m','exclusiveUnion']};}};$set.complement={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:'Element$Set'}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$complement'}},$an:function(){return[];}}],$cont:Set,$tp:{Other$complement:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Set.$m.complement.$an.doc[0]),shared(),formal()];},d:['$','Set','$m','complement']};}};$set.clone={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:'Element$Set'}},$ps:[],$cont:Set,$an:function(){return[shared(),actual(),formal()];},d:['$','Set','$m','clone']};}};})(Set.$$.prototype);}
return Set;}
exports.$init$Set=$init$Set;$init$Set();function $dt($$targs$$){var $emptySet=new $dt.$$;
$emptySet.$$targs$$=$$targs$$;$Object($emptySet);Set({Element$Set:{t:Nothing}},$emptySet);return $emptySet;
};$dt.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$Object},satisfies:[{t:Set,a:{Element$Set:{t:Nothing}}}],$an:function(){return[doc("An immutable [[Set]] with no elements."),shared()];},d:['$','emptySet']};};function $init$$dt(){if($dt.$$===undefined){initTypeProto($dt,'ceylon.language::emptySet',$init$$Object(),$init$Set());
(function($emptySet){$emptySet.union=function ($du,$$$mptypes){var $emptySet=this;return $du;};$emptySet.union.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:'Other$union'}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$union'}},$an:function(){return[];}}],$cont:$dt,$tp:{Other$union:{'satisfies':[{t:$Object}]}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','union']};};$emptySet.intersection=function ($dv,$$$mptypes){var $emptySet=this;return getEmptySet();};$emptySet.intersection.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:Nothing}}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$intersection'}},$an:function(){return[];}}],$cont:$dt,$tp:{Other$intersection:{'satisfies':[{t:$Object}]}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','intersection']};};$emptySet.exclusiveUnion=function ($dw,$$$mptypes){var $emptySet=this;return $dw;};$emptySet.exclusiveUnion.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:'Other$exclusiveUnion'}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$exclusiveUnion'}},$an:function(){return[];}}],$cont:$dt,$tp:{Other$exclusiveUnion:{'satisfies':[{t:$Object}]}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','exclusiveUnion']};};$emptySet.complement=function ($dx,$$$mptypes){var $emptySet=this;return getEmptySet();};$emptySet.complement.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:Nothing}}},$ps:[{$nm:'set',$mt:'prm',$t:{t:Set,a:{Element$Set:'Other$complement'}},$an:function(){return[];}}],$cont:$dt,$tp:{Other$complement:{'satisfies':[{t:$Object}]}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','complement']};};$emptySet.subset=function ($dy){var $emptySet=this;return true;};$emptySet.superset=function ($dz){var $emptySet=this;return $dz.empty;};$emptySet.clone=function (){var $emptySet=this;return getEmptySet();};$emptySet.iterator=function (){var $emptySet=this;return getEmptyIterator();};$defat($emptySet,'size',function(){var $emptySet=this;return (0);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$dt,$an:function(){return[shared(),actual()];},d:['$','emptySet','$at','size']};});$defat($emptySet,'empty',function(){var $emptySet=this;return true;},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:$dt,$an:function(){return[shared(),actual()];},d:['$','emptySet','$at','empty']};});$emptySet.contains=function ($e0){var $emptySet=this;return false;};$emptySet.containsAny=function ($e1){var $emptySet=this;return false;};$emptySet.containsEvery=function ($e2){var $emptySet=this;return false;};$emptySet.count=function ($e3){var $emptySet=this;return (0);};$emptySet.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$dt,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','count']};};$emptySet.$map=function ($e4,$$$mptypes){var $emptySet=this;return getEmptySet();};$emptySet.$map.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:Nothing}}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$map',$an:function(){return[];}}],$cont:$dt,$tp:{Result$map:{}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','map']};};$emptySet.$filter=function ($e5){var $emptySet=this;return getEmptySet();};$emptySet.$filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Set,a:{Element$Set:{t:Nothing}}},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$dt,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','filter']};};$emptySet.fold=function ($e6,$e7,$$$mptypes){var $emptySet=this;return $e6;};$emptySet.fold.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$fold',$ps:[{$nm:'initial',$mt:'prm',$t:'Result$fold',$an:function(){return[];}},{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$fold',$an:function(){return[];}}],$cont:$dt,$tp:{Result$fold:{}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','fold']};};$emptySet.find=function ($e8){var $emptySet=this;return null;};$emptySet.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$dt,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','find']};};$emptySet.collect=function ($e9,$$$mptypes){var $emptySet=this;return getEmpty();};$emptySet.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[];}}],$cont:$dt,$tp:{Result$collect:{}},$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','collect']};};$emptySet.select=function ($ea){var $emptySet=this;return getEmpty();};$emptySet.select.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$dt,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','select']};};$emptySet.any=function ($eb){var $emptySet=this;return false;};$emptySet.any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$dt,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','any']};};$emptySet.$every=function ($ec){var $emptySet=this;return false;};$emptySet.$every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$dt,$an:function(){return[shared(),actual()];},d:['$','emptySet','$m','every']};};$emptySet.skipping=function ($ed){var $emptySet=this;return getEmptySet();};$emptySet.taking=function ($ee){var $emptySet=this;return getEmptySet();};$emptySet.by=function ($ef){var $emptySet=this;return getEmptySet();};})($dt.$$.prototype);}
return $dt;}
exports.$init$$dt=$init$$dt;$init$$dt();var $eg;function getEmptySet(){if($eg===undefined){$eg=$init$$dt()({Element$Set:{t:Nothing}});$eg.$crtmm$=getEmptySet.$crtmm$;}
return $eg;}
exports.getEmptySet=getEmptySet;getEmptySet.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$dt},$an:function(){return[doc("An immutable [[Set]] with no elements."),shared()];},d:['$','emptySet']};};$prop$getEmptySet={get:getEmptySet,$crtmm$:getEmptySet.$crtmm$};get$dt=getEmptySet;$prop$get$dt=getEmptySet;exports.$prop$getEmptySet=$prop$getEmptySet;function Range(first,last,$$targs$$,$range){$init$Range();if($range===undefined)$range=new Range.$$;
set_type_args($range,$$targs$$);$range.first_=first;$range.last_=last;$Object($range);Sequence({Element$Sequence:$$targs$$.Element$Range},$range);$range.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Range',$cont:Range,$an:function(){return[doc("The start of the range."),shared(),actual()];},d:['$','Range','$at','first']};}};$range.$prop$getFirst.get=function(){return first};$range.$prop$getLast={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Range',$cont:Range,$an:function(){return[doc("The end of the range."),shared(),actual()];},d:['$','Range','$at','last']};}};$range.$prop$getLast.get=function(){return last};$range.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$at','string']};}};$range.$prop$getString.get=function(){return string};$range.$prop$getDecreasing={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Range,$an:function(){return[doc("Determines if the range is decreasing."),shared()];},d:['$','Range','$at','decreasing']};}};$range.$prop$getDecreasing.get=function(){return decreasing};$range.$prop$getLastIndex={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Range,$an:function(){return[doc("The index of the end of the range."),shared(),actual()];},d:['$','Range','$at','lastIndex']};}};$range.$prop$getLastIndex.get=function(){return lastIndex};$range.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$cont:Range,$an:function(){return[doc("Reverse this range, returning a new range."),shared(),actual()];},d:['$','Range','$at','reversed']};}};$range.$prop$getReversed.get=function(){return reversed};$range.$prop$getCoalesced={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$at.coalesced.$an.doc[0]),shared(),actual()];},d:['$','Range','$at','coalesced']};}};$range.$prop$getCoalesced.get=function(){return coalesced};$range.$prop$getSequence={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$cont:Range,$an:function(){return[doc("Returns this range."),shared(),actual()];},d:['$','Range','$at','sequence']};}};$range.$prop$getSequence.get=function(){return sequence};return $range;}
Range.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$Object},$ps:[{$nm:'first',$mt:'prm',$t:'Element$Range',$an:function(){return[doc("The start of the range."),shared(),actual()];}},{$nm:'last',$mt:'prm',$t:'Element$Range',$an:function(){return[doc("The end of the range."),shared(),actual()];}}],$tp:{Element$Range:{'satisfies':[{t:Ordinal,a:{Other$Ordinal:'Element$Range'}},{t:Comparable,a:{Other$Comparable:'Element$Range'}}]}},satisfies:[{t:Sequence,a:{Element$Sequence:'Element$Range'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Range.$an.doc[0]),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Ordinal)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),$final()];},d:['$','Range']};};
exports.Range=Range;function $init$Range(){if(Range.$$===undefined){initTypeProto(Range,'ceylon.language::Range',$init$$Object(),$init$Sequence());
(function($range){$defat($range,'first',function(){return this.first_;},undefined,function(){return{mod:$CCMM$,$t:'Element$Range',$cont:Range,$an:function(){return[doc("The start of the range."),shared(),actual()];},d:['$','Range','$at','first']};});$defat($range,'last',function(){return this.last_;},undefined,function(){return{mod:$CCMM$,$t:'Element$Range',$cont:Range,$an:function(){return[doc("The end of the range."),shared(),actual()];},d:['$','Range','$at','last']};});$defat($range,'string',function(){var $range=this;return $range.first.string.plus("..").plus($range.last.string);},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$at','string']};});$defat($range,'decreasing',function(){var $range=this;return $range.last.compare($range.first).equals(getSmaller());},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Range,$an:function(){return[doc("Determines if the range is decreasing."),shared()];},d:['$','Range','$at','decreasing']};});$range.$eh=function ($ei){var $range=this;return ($ej=($range.decreasing?$ei.predecessor:null),$nn($ej)?$ej:$ei.successor);};$range.$eh.$crtmm$=function(){return{mod:$CCMM$,$t:'Element$Range',$ps:[{$nm:'x',$mt:'prm',$t:'Element$Range',$an:function(){return[];}}],$cont:Range,d:['$','Range','$m','next$2wbm2z']};};$defat($range,'size',function(){var $range=this;var $ek;var $el;if($is(($ek=$range.last),{t:Enumerable,a:{Other$Enumerable:{t:Anything}}})&&$is(($el=$range.first),{t:Enumerable,a:{Other$Enumerable:{t:Anything}}})){return $ek.integerValue.minus($el.integerValue).magnitude.plus((1));}else {var $em=(1);function set$em($en){return $em=$en;};$prop$get$em={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$range.$prop$getSize,$an:function(){return[variable()];},d:['$','Range','$at','size','$at','size$be6iyp']};}};$prop$get$em.get=function(){return $em};$prop$get$em.set=set$em;if(set$em.$crtmm$===undefined)set$em.$crtmm$=$prop$get$em.$crtmm$;var $eo=$range.first;function set$eo($ep){return $eo=$ep;};$prop$get$eo={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Range',$cont:$range.$prop$getSize,$an:function(){return[variable()];},d:['$','Range','$at','size','$at','current$5me7rd']};}};$prop$get$eo.get=function(){return $eo};$prop$get$eo.set=set$eo;if(set$eo.$crtmm$===undefined)set$eo.$crtmm$=$prop$get$eo.$crtmm$;while((!$eo.equals($range.last))){($eq=$em,$em=$eq.successor,$eq);var $eq;$eo=$range.$eh($eo);}return $em;}},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Range,$an:function(){return[doc("The nonzero number of elements in the range."),shared(),actual()];},d:['$','Range','$at','size']};});$defat($range,'lastIndex',function(){var $range=this;return $range.size.minus((1));},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Range,$an:function(){return[doc("The index of the end of the range."),shared(),actual()];},d:['$','Range','$at','lastIndex']};});$defat($range,'rest',function(){var $range=this;if(($range.size==(1))){return getEmpty();}var $er=$range.$eh($range.first);$prop$get$er={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Range',$cont:$range.$prop$getRest,d:['$','Range','$at','rest','$at','n$2m85jh']};}};$prop$get$er.get=function(){return $er};return Range($er,$range.last,{Element$Range:$range.$$targs$$.Element$Range});},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$Range'}},$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$at.rest.$an.doc[0]),shared(),actual()];},d:['$','Range','$at','rest']};});$range.$get=function $get($es){var $range=this;var $et=(0);function set$et($eu){return $et=$eu;};var $ev=$range.first;function set$ev($ew){return $ev=$ew;};while(($et<$es)){if($ev.equals($range.last)){return null;}else {($et=$et.successor);$ev=$range.$eh($ev);}}return $ev;};$range.$get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Range']},$ps:[{$nm:'n',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$m.get.$an.doc[0]),shared(),actual()];},d:['$','Range','$m','get']};};$range.iterator=function iterator(){var $range=this;function $ex($$targs$$){var $$ex=new $ex.$$;
$$ex.$$outer=$range;$$ex.$$targs$$=$$targs$$;Iterator({Element$Iterator:$range.$$targs$$.Element$Range},$$ex);$$ex.$ey_=$range.first;$$ex.$prop$get$ey={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Range',{t:Finished}]},$cont:$ex,$an:function(){return[variable()];},d:['$','Range','$m','iterator','$o','iterator$eyu6v7','$at','current$yist5d']};}};$$ex.$prop$get$ey.get=function(){return $ey};return $$ex;
};$ex.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Range'}}],d:['$','Range','$m','iterator','$o','iterator$eyu6v7']};};function $init$$ex(){if($ex.$$===undefined){initTypeProto($ex,'ceylon.language::Range.iterator',Basic,$init$Iterator());
(function($$ex){$defat($$ex,'$ey',function(){return this.$ey_;},function($ez){return this.$ey_=$ez;},function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Range',{t:Finished}]},$cont:$ex,$an:function(){return[variable()];},d:['$','Range','$m','iterator','$o','iterator$eyu6v7','$at','current$yist5d']};});$$ex.next=function next(){var $$ex=this;var $f0=$$ex.$ey;var $f1;if(!$is(($f1=$$ex.$ey),{t:Finished})){if(($f2=($range.decreasing?($f1.compare($range.last)!==getLarger()):null),$nn($f2)?$f2:($f1.compare($range.last)!==getSmaller()))){$$ex.$ey=getFinished();}else {$$ex.$ey=$range.$eh($f1);}var $f2;}return $f0;};$$ex.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Range',{t:Finished}]},$ps:[],$cont:$ex,$an:function(){return[shared(),actual()];},d:['$','Range','$m','iterator','$o','iterator$eyu6v7','$m','next']};};$defat($$ex,'string',function(){var $$ex=this;return "RangeIterator";},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:$ex,$an:function(){return[shared(),actual()];},d:['$','Range','$m','iterator','$o','iterator$eyu6v7','$at','string']};});})($ex.$$.prototype);}
return $ex;}
$init$$ex();var $f3;function get$f3(){if($f3===undefined){$f3=$init$$ex()({Element$Iterator:$range.$$targs$$.Element$Range});$f3.$crtmm$=get$f3.$crtmm$;}
return $f3;}
get$f3.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$ex},$cont:iterator,d:['$','Range','$m','iterator','$o','iterator$eyu6v8']};};$prop$get$f3={get:get$f3,$crtmm$:get$f3.$crtmm$};get$ex=get$f3;$prop$get$ex=get$f3;return get$f3();};$range.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Range'}},$ps:[],$cont:Range,$an:function(){return[doc("An iterator for the elements of the range."),shared(),actual()];},d:['$','Range','$m','iterator']};};$range.by=function by($f4){var $range=this;//assert at Range.ceylon (119:8-120:25)
if(!(($f4>(0)))) {throw wrapexc(AssertionError("step size must be greater than zero: \'step > 0\' at Range.ceylon (120:15-120:24)"),'119:8-120:25','Range.ceylon'); }
if(($f4==(1))){return $range;}else {var $f5;var $f6;if($is(($f5=$range.first),{t:Integer})&&$is(($f6=$range.last),{t:Integer})){//assert at Range.ceylon (125:12-126:56)
var $f7;if(!($is(($f7=IntegerRangeBy($f5,$f6,$f4)),{t:Iterable,a:{Element$Iterable:$range.$$targs$$.Element$Range,Absent$Iterable:{t:Nothing}}}))) {throw wrapexc(AssertionError("Assertion failed: \'is {Element+} result \n                    = IntegerRangeBy(first, last, step)\' at Range.ceylon (125:19-126:55)"),'125:12-126:56','Range.ceylon'); }
return $f7;}else {return $range.getT$all()['ceylon.language::Iterable'].$$.prototype.by.call(this,$f4);}}};$range.by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$Range',Absent$Iterable:{t:Nothing}}},$ps:[{$nm:'step',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','by']};};$range.shifted=function shifted($f8){var $range=this;if(($f8==(0))){return $range;}else {var $f9;var $fa;if($is(($f9=$range.first),{t:Integer})&&$is(($fa=$range.last),{t:Integer})){//assert at Range.ceylon (147:12-148:46)
var $fb;if(!($is(($fb=Range($f9.plus($f8),$fa.plus($f8),{Element$Range:{t:Integer}})),{t:Range,a:{Element$Range:$range.$$targs$$.Element$Range}}))) {throw wrapexc(AssertionError("Assertion failed: \'is Range<Element> shifted \n                    = first+shift..last+shift\' at Range.ceylon (147:19-148:45)"),'147:12-148:46','Range.ceylon'); }
return $fb;}else {var $fc=$range.first;function set$fc($fd){return $fc=$fd;};var $fe=$range.last;function set$fe($ff){return $fe=$ff;};var $fg=$f8.magnitude;var $fh=$f8.positive;var $fi=(0);function set$fi($fj){return $fi=$fj;};while((($fk=$fi,$fi=$fk.successor,$fk)<$fg)){if($fh){($fl=$fc,$fc=$fl.successor,$fl);var $fl;($fm=$fe,$fe=$fm.successor,$fm);var $fm;}else {($fn=$fc,$fc=$fn.predecessor,$fn);var $fn;($fo=$fe,$fe=$fo.predecessor,$fo);var $fo;}}var $fk;return Range($fc,$fe,{Element$Range:$range.$$targs$$.Element$Range});}}};$range.shifted.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$ps:[{$nm:'shift',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$m.shifted.$an.doc[0]),shared()];},d:['$','Range','$m','shifted']};};$range.count=function count($fp){var $range=this;var $fq=$range.first;function set$fq($fr){return $fq=$fr;};var $fs=(0);function set$fs($ft){return $fs=$ft;};while($range.containsElement($fq)){if($fp($fq)){($fu=$fs,$fs=$fu.successor,$fu);var $fu;}$fq=$range.$eh($fq);}return $fs;};$range.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','count']};};$range.contains=function contains($fv){var $range=this;var $fw;if($is(($fw=$fv),$range.$$targs$$.Element$Range)){return $range.containsElement($fw);}else {return false;}};$range.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc("Determines if this range includes the given object."),shared(),actual()];},d:['$','Range','$m','contains']};};$range.occurs=function occurs($fx){var $range=this;var $fy;if($is(($fy=$fx),$range.$$targs$$.Element$Range)){return $range.containsElement($fy);}else {return false;}};$range.occurs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc("Determines if this range includes the given value."),shared(),actual()];},d:['$','Range','$m','occurs']};};$range.containsElement=function ($fz){var $range=this;return ($g0=($range.decreasing?(($fz.compare($range.first)!==getLarger())&&($fz.compare($range.last)!==getSmaller())):null),$nn($g0)?$g0:(($fz.compare($range.first)!==getSmaller())&&($fz.compare($range.last)!==getLarger())));};$range.containsElement.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'x',$mt:'prm',$t:'Element$Range',$an:function(){return[];}}],$cont:Range,$an:function(){return[doc("Determines if the range includes the given value."),shared()];},d:['$','Range','$m','containsElement']};};$range.includes=function includes($g1){var $range=this;var $g2;if($is(($g2=$g1),{t:Range,a:{Element$Range:$range.$$targs$$.Element$Range}})){return $range.includesRange($g2);}else {return $range.getT$all()['ceylon.language::List'].$$.prototype.includes.call(this,$g1);}};$range.includes.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:List,a:{Element$List:{t:Anything}}},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','includes']};};$range.includesRange=function includesRange($g3){var $range=this;return (($g4=$g3.first,$g4.compare($range.first)!==getSmaller()&&$g4.compare($range.last)!==getLarger())&&($g5=$g3.last,$g5.compare($range.first)!==getSmaller()&&$g5.compare($range.last)!==getLarger()));};$range.includesRange.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'sublist',$mt:'prm',$t:{t:Range,a:{Element$Range:'Element$Range'}},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc("Determines if this range includes the given range."),shared()];},d:['$','Range','$m','includesRange']};};$range.equals=function equals($g6){var $range=this;var $g7;if($is(($g7=$g6),{t:Range,a:{Element$Range:{t:$Object}}})){return ($g7.first.equals($range.first)&&$g7.last.equals($range.last));}else {return $range.getT$all()['ceylon.language::List'].$$.prototype.equals.call(this,$g6);}};$range.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$m.equals.$an.doc[0]),shared(),actual()];},d:['$','Range','$m','equals']};};$range.clone=function (){var $range=this;return $range;};$range.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$ps:[],$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$m.clone.$an.doc[0]),shared(),actual()];},d:['$','Range','$m','clone']};};$range.segment=function segment($g8,$g9){var $range=this;if((($g9<=(0))||($g8>$range.lastIndex))){return getEmpty();}var $ga=$range.first;function set$ga($gb){return $ga=$gb;};var $gc=(0);function set$gc($gd){return $gc=$gd;};while((($ge=$gc,$gc=$ge.successor,$ge)<$g8)){$ga=$range.$eh($ga);}var $ge;var $gf=$ga;function set$gf($gg){return $gf=$gg;};var $gh=(1);function set$gh($gi){return $gh=$gi;};while(((($gj=$gh,$gh=$gj.successor,$gj)<$g9)&&$gf.compare($range.last).equals(getSmaller()))){$gf=$range.$eh($gf);}var $gj;return Range($ga,$gf,{Element$Range:$range.$$targs$$.Element$Range});};$range.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','segment']};};$range.span=function span($gk,$gl){var $range=this;var $gm=$gl;function set$gm($gn){return $gm=$gn;};var $go=$gk;function set$go($gp){return $go=$gp;};if(($gm<(0))){if(($go<(0))){return getEmpty();}$gm=(0);}else {if(($gm>$range.lastIndex)){if(($go>$range.lastIndex)){return getEmpty();}$gm=$range.lastIndex;}}if(($go<(0))){$go=(0);}else {if(($go>$range.lastIndex)){$go=$range.lastIndex;}}var $gq=$range.first;function set$gq($gr){return $gq=$gr;};var $gs=(0);function set$gs($gt){return $gs=$gt;};while((($gu=$gs,$gs=$gu.successor,$gu)<$go)){$gq=$range.$eh($gq);}var $gu;var $gv=$range.first;function set$gv($gw){return $gv=$gw;};var $gx=(0);function set$gx($gy){return $gx=$gy;};while((($gz=$gx,$gx=$gz.successor,$gz)<$gm)){$gv=$range.$eh($gv);}var $gz;return Range($gq,$gv,{Element$Range:$range.$$targs$$.Element$Range});};$range.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','span']};};$range.spanTo=function spanTo($h0){var $range=this;return ($h1=(($h0<(0))?getEmpty():null),$nn($h1)?$h1:$range.span((0),$h0));var $h1;};$range.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','spanTo']};};$range.spanFrom=function spanFrom($h2){var $range=this;return $range.span($h2,$range.size);};$range.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','spanFrom']};};$defat($range,'reversed',function(){var $range=this;return Range($range.last,$range.first,{Element$Range:$range.$$targs$$.Element$Range});},undefined,function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$cont:Range,$an:function(){return[doc("Reverse this range, returning a new range."),shared(),actual()];},d:['$','Range','$at','reversed']};});$range.skipping=function skipping($h3){var $range=this;var $h4=(0);function set$h4($h5){return $h4=$h5;};var $h6=$range.first;function set$h6($h7){return $h6=$h7;};while((($h8=$h4,$h4=$h8.successor,$h8)<$h3)){$h6=$range.$eh($h6);}var $h8;return ($h9=($range.containsElement($h6)?Range($h6,$range.last,{Element$Range:$range.$$targs$$.Element$Range}):null),$nn($h9)?$h9:getEmpty());var $h9;};$range.skipping.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'skip',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','skipping']};};$range.taking=function taking($ha){var $range=this;if(($ha==(0))){return getEmpty();}var $hb=(0);function set$hb($hc){return $hb=$hc;};var $hd=$range.first;function set$hd($he){return $hd=$he;};while((($hb=$hb.successor)<$ha)){$hd=$range.$eh($hd);}return ($hf=($range.containsElement($hd)?Range($range.first,$hd,{Element$Range:$range.$$targs$$.Element$Range}):null),$nn($hf)?$hf:$range);var $hf;};$range.taking.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Range,a:{Element$Range:'Element$Range'}},{t:Empty}]},$ps:[{$nm:'take',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Range,$an:function(){return[shared(),actual()];},d:['$','Range','$m','taking']};};$defat($range,'coalesced',function(){var $range=this;return $range;},undefined,function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$cont:Range,$an:function(){return[doc($CCMM$['ceylon.language'].Range.$at.coalesced.$an.doc[0]),shared(),actual()];},d:['$','Range','$at','coalesced']};});$defat($range,'sequence',function(){var $range=this;return $range;},undefined,function(){return{mod:$CCMM$,$t:{t:Range,a:{Element$Range:'Element$Range'}},$cont:Range,$an:function(){return[doc("Returns this range."),shared(),actual()];},d:['$','Range','$at','sequence']};});})(Range.$$.prototype);}
return Range;}
exports.$init$Range=$init$Range;$init$Range();var $ej,$g0;function IntegerRangeBy($hg,$hh,$hi,$integerRangeBy){$init$IntegerRangeBy();if($integerRangeBy===undefined)$integerRangeBy=new IntegerRangeBy.$$;
$integerRangeBy.$$targs$$={Element$Iterable:{t:Integer},Absent$Iterable:{t:Nothing}};$integerRangeBy.$hg_=$hg;$integerRangeBy.$hh_=$hh;$integerRangeBy.$hi_=$hi;Iterable({Element$Iterable:{t:Integer},Absent$Iterable:{t:Nothing}},$integerRangeBy);add_type_arg($integerRangeBy,'Element$Iterable',{t:Integer});return $integerRangeBy;}
IntegerRangeBy.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'first',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'last',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'step',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],satisfies:[{t:Iterable,a:{Element$Iterable:{t:Integer},Absent$Iterable:{t:Nothing}}}],d:['$','IntegerRangeBy']};};function $init$IntegerRangeBy(){if(IntegerRangeBy.$$===undefined){initTypeProto(IntegerRangeBy,'ceylon.language::IntegerRangeBy',Basic,$init$Iterable());
(function($integerRangeBy){$integerRangeBy.iterator=function iterator(){var $integerRangeBy=this;function $hj($$targs$$){var $$hj=new $hj.$$;
$$hj.$$outer=$integerRangeBy;$$hj.$$targs$$=$$targs$$;Iterator({Element$Iterator:{t:Integer}},$$hj);add_type_arg($$hj,'Element$Iterator',{t:Integer});$$hj.$hk_=$integerRangeBy.$hg;$$hj.$prop$get$hk={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$hj,$an:function(){return[variable()];},d:['$','IntegerRangeBy','$m','iterator','$o','iterator$yeyfho','$at','current$tetrdc']};}};$$hj.$prop$get$hk.get=function(){return $hk};return $$hj;
};$hj.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:{t:Integer}}}],d:['$','IntegerRangeBy','$m','iterator','$o','iterator$yeyfho']};};function $init$$hj(){if($hj.$$===undefined){initTypeProto($hj,'ceylon.language::IntegerRangeBy.iterator',Basic,$init$Iterator());
(function($$hj){$defat($$hj,'$hk',function(){return this.$hk_;},function($hl){return this.$hk_=$hl;},function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$hj,$an:function(){return[variable()];},d:['$','IntegerRangeBy','$m','iterator','$o','iterator$yeyfho','$at','current$tetrdc']};});$$hj.next=function next(){var $$hj=this;if(($integerRangeBy.$hh<$integerRangeBy.$hg)){if(($$hj.$hk<$integerRangeBy.$hh)){return getFinished();}var $hm=$$hj.$hk;($$hj.$hk=$$hj.$hk.minus($integerRangeBy.$hi));return $hm;}else {if(($$hj.$hk>$integerRangeBy.$hh)){return getFinished();}var $hn=$$hj.$hk;($$hj.$hk=$$hj.$hk.plus($integerRangeBy.$hi));return $hn;}};$$hj.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Integer},{t:Finished}]},$ps:[],$cont:$hj,$an:function(){return[shared(),actual()];},d:['$','IntegerRangeBy','$m','iterator','$o','iterator$yeyfho','$m','next']};};$defat($$hj,'string',function(){var $$hj=this;return "IntegerRangeByIterator";},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:$hj,$an:function(){return[shared(),actual()];},d:['$','IntegerRangeBy','$m','iterator','$o','iterator$yeyfho','$at','string']};});})($hj.$$.prototype);}
return $hj;}
$init$$hj();var $ho;function get$ho(){if($ho===undefined){$ho=$init$$hj()({Element$Iterator:{t:Integer}});$ho.$crtmm$=get$ho.$crtmm$;}
return $ho;}
get$ho.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$hj},$cont:iterator,d:['$','IntegerRangeBy','$m','iterator','$o','iterator$yeyfhn']};};$prop$get$ho={get:get$ho,$crtmm$:get$ho.$crtmm$};get$hj=get$ho;$prop$get$hj=get$ho;return get$ho();};$integerRangeBy.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:Integer}}},$ps:[],$cont:IntegerRangeBy,$an:function(){return[shared(),actual()];},d:['$','IntegerRangeBy','$m','iterator']};};$defat($integerRangeBy,'$hg',function(){return this.$hg_;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:IntegerRangeBy,d:['$','IntegerRangeBy','$at','first$kk22n3']};});$defat($integerRangeBy,'$hh',function(){return this.$hh_;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:IntegerRangeBy,d:['$','IntegerRangeBy','$at','last$kps9nt']};});$defat($integerRangeBy,'$hi',function(){return this.$hi_;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:IntegerRangeBy,d:['$','IntegerRangeBy','$at','step$fladk3']};});})(IntegerRangeBy.$$.prototype);}
return IntegerRangeBy;}
exports.$init$IntegerRangeBy=$init$IntegerRangeBy;$init$IntegerRangeBy();function Singleton($hp,$$targs$$,$singleton){$init$Singleton();if($singleton===undefined)$singleton=new Singleton.$$;
set_type_args($singleton,$$targs$$);$singleton.$hp_=$hp;$Object($singleton);Sequence({Element$Sequence:$$targs$$.Element$Singleton},$singleton);$singleton.$prop$getLastIndex={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[doc("Returns `0`."),shared(),actual()];},d:['$','Singleton','$at','lastIndex']};}};$singleton.$prop$getLastIndex.get=function(){return lastIndex};$singleton.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[doc("Returns `1`."),shared(),actual()];},d:['$','Singleton','$at','size']};}};$singleton.$prop$getSize.get=function(){return size};$singleton.$prop$getFirst={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Singleton',$cont:Singleton,$an:function(){return[doc("Returns the element contained in this `Singleton`."),shared(),actual()];},d:['$','Singleton','$at','first']};}};$singleton.$prop$getFirst.get=function(){return first};$singleton.$prop$getLast={$crtmm$:function(){return{mod:$CCMM$,$t:'Element$Singleton',$cont:Singleton,$an:function(){return[doc("Returns the element contained in this `Singleton`."),shared(),actual()];},d:['$','Singleton','$at','last']};}};$singleton.$prop$getLast.get=function(){return last};$singleton.$prop$getRest={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Singleton,$an:function(){return[doc("Returns `Empty`."),shared(),actual()];},d:['$','Singleton','$at','rest']};}};$singleton.$prop$getRest.get=function(){return rest};$singleton.$prop$getString={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$at','string']};}};$singleton.$prop$getString.get=function(){return string};$singleton.$prop$getReversed={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},$cont:Singleton,$an:function(){return[doc("Return this singleton."),shared(),actual()];},d:['$','Singleton','$at','reversed']};}};$singleton.$prop$getReversed.get=function(){return reversed};$singleton.$prop$getHash={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$at','hash']};}};$singleton.$prop$getHash.get=function(){return hash};return $singleton;}
Singleton.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$Object},$ps:[{$nm:'element',$mt:'prm',$t:'Element$Singleton',$an:function(){return[];}}],$tp:{Element$Singleton:{'var':'out'}},satisfies:[{t:Sequence,a:{Element$Sequence:'Element$Singleton'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$an.doc[0]),shared()];},d:['$','Singleton']};};
exports.Singleton=Singleton;function $init$Singleton(){if(Singleton.$$===undefined){initTypeProto(Singleton,'ceylon.language::Singleton',$init$$Object(),$init$Sequence());
(function($singleton){$defat($singleton,'lastIndex',function(){var $singleton=this;return (0);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[doc("Returns `0`."),shared(),actual()];},d:['$','Singleton','$at','lastIndex']};});$defat($singleton,'size',function(){var $singleton=this;return (1);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[doc("Returns `1`."),shared(),actual()];},d:['$','Singleton','$at','size']};});$defat($singleton,'first',function(){var $singleton=this;return $singleton.$hp;},undefined,function(){return{mod:$CCMM$,$t:'Element$Singleton',$cont:Singleton,$an:function(){return[doc("Returns the element contained in this `Singleton`."),shared(),actual()];},d:['$','Singleton','$at','first']};});$defat($singleton,'last',function(){var $singleton=this;return $singleton.$hp;},undefined,function(){return{mod:$CCMM$,$t:'Element$Singleton',$cont:Singleton,$an:function(){return[doc("Returns the element contained in this `Singleton`."),shared(),actual()];},d:['$','Singleton','$at','last']};});$defat($singleton,'rest',function(){var $singleton=this;return getEmpty();},undefined,function(){return{mod:$CCMM$,$t:{t:Empty},$cont:Singleton,$an:function(){return[doc("Returns `Empty`."),shared(),actual()];},d:['$','Singleton','$at','rest']};});$singleton.$get=function $get($hq){var $singleton=this;if(($hq==(0))){return $singleton.$hp;}else {return null;}};$singleton.$get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Singleton']},$ps:[{$nm:'index',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.get.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','get']};};$singleton.clone=function (){var $singleton=this;return $singleton;};$singleton.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},$ps:[],$cont:Singleton,$an:function(){return[doc("Returns a `Singleton` with the same element."),shared(),actual()];},d:['$','Singleton','$m','clone']};};$singleton.iterator=function iterator(){var $singleton=this;function $hr($$hr){$init$$hr();if($$hr===undefined)$$hr=new $hr.$$;
$$hr.$$outer=$singleton;$$hr.$$targs$$={Element$Iterator:$$hr.$$outer.$$targs$$.Element$Singleton};Iterator({Element$Iterator:$$hr.$$outer.$$targs$$.Element$Singleton},$$hr);$$hr.$hs_=false;$$hr.$prop$get$hs={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:$hr,$an:function(){return[variable()];},d:['$','Singleton','$m','iterator','$c','SingletonIterator$f6hqff','$at','done$wwj31e']};}};$$hr.$prop$get$hs.get=function(){return $hs};return $$hr;}
$hr.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Element$Singleton'}}],d:['$','Singleton','$m','iterator','$c','SingletonIterator$f6hqff']};};function $init$$hr(){if($hr.$$===undefined){initTypeProto($hr,'ceylon.language::Singleton.SingletonIterator',Basic,$init$Iterator());
(function($$hr){$defat($$hr,'$hs',function(){return this.$hs_;},function($ht){return this.$hs_=$ht;},function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:$hr,$an:function(){return[variable()];},d:['$','Singleton','$m','iterator','$c','SingletonIterator$f6hqff','$at','done$wwj31e']};});$$hr.next=function next(){var $$hr=this;if($$hr.$hs){return getFinished();}else {$$hr.$hs=true;return $singleton.$hp;}};$$hr.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Element$Singleton',{t:Finished}]},$ps:[],$cont:$hr,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','iterator','$c','SingletonIterator$f6hqff','$m','next']};};$defat($$hr,'string',function(){var $$hr=this;return "SingletonIterator";},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:$hr,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','iterator','$c','SingletonIterator$f6hqff','$at','string']};});})($hr.$$.prototype);}
return $hr;}
$init$$hr();return $hr();};$singleton.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Element$Singleton'}},$ps:[],$cont:Singleton,$an:function(){return[shared(),actual(),$default()];},d:['$','Singleton','$m','iterator']};};$defat($singleton,'string',function(){var $singleton=this;return StringBuilder(["[",($hu=($hv=$singleton.$hp,$nn($hv)?$hv.string:null),$nn($hu)?$hu:"null").string,"]"]).string;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$at','string']};});$singleton.segment=function ($hw,$hx){var $singleton=this;return ($hy=((($hw<=(0))&&($hw.plus($hx)>(0)))?$singleton:null),$nn($hy)?$hy:getEmpty());};$singleton.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Empty},{t:Singleton,a:{Element$Singleton:'Element$Singleton'}}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'length',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.segment.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','segment']};};$singleton.span=function ($hz,$i0){var $singleton=this;return ($i1=(((($hz<=(0))&&($i0>=(0)))||(($hz>=(0))&&($i0<=(0))))?$singleton:null),$nn($i1)?$i1:getEmpty());};$singleton.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Empty},{t:Singleton,a:{Element$Singleton:'Element$Singleton'}}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.span.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','span']};};$singleton.spanTo=function ($i2){var $singleton=this;return ($i3=(($i2<(0))?getEmpty():null),$nn($i3)?$i3:$singleton);};$singleton.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Empty},{t:Singleton,a:{Element$Singleton:'Element$Singleton'}}]},$ps:[{$nm:'to',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','spanTo']};};$singleton.spanFrom=function ($i4){var $singleton=this;return ($i5=(($i4>(0))?getEmpty():null),$nn($i5)?$i5:$singleton);};$singleton.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Empty},{t:Singleton,a:{Element$Singleton:'Element$Singleton'}}]},$ps:[{$nm:'from',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','spanFrom']};};$defat($singleton,'reversed',function(){var $singleton=this;return $singleton;},undefined,function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},$cont:Singleton,$an:function(){return[doc("Return this singleton."),shared(),actual()];},d:['$','Singleton','$at','reversed']};});$singleton.equals=function equals($i6){var $singleton=this;var $i7;if(($i7=$singleton.$hp)!==null){var $i8;if($is(($i8=$i6),{t:List,a:{Element$List:{t:Anything}}})){if(($i8.size==(1))){var $i9;if(($i9=$i8.first)!==null){return $i9.equals($i7);}}}return false;}return false;};$singleton.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.equals.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','equals']};};$defat($singleton,'hash',function(){var $singleton=this;return (31).plus(($ia=($ib=$singleton.$hp,$nn($ib)?$ib.hash:null),$nn($ia)?$ia:(0)));},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$at','hash']};});$singleton.contains=function contains($ic){var $singleton=this;var $id;if(($id=$singleton.$hp)!==null){return $id.equals($ic);}return false;};$singleton.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'element',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.contains.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','contains']};};$singleton.count=function ($ie){var $singleton=this;return ($if=($ie($singleton.$hp)?(1):null),$nn($if)?$if:(0));};$singleton.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[doc($CCMM$['ceylon.language'].Singleton.$m.count.$an.doc[0]),shared(),actual()];},d:['$','Singleton','$m','count']};};$singleton.$map=function ($ig,$$$mptypes){var $singleton=this;return Singleton($ig($singleton.$hp),{Element$Singleton:$$$mptypes.Result$map});};$singleton.$map.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Result$map'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$map',$an:function(){return[];}}],$cont:Singleton,$tp:{Result$map:{}},$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','map']};};$singleton.$filter=function ($ih){var $singleton=this;return ($ii=($ih($singleton.$hp)?$singleton:null),$nn($ii)?$ii:getEmpty());};$singleton.$filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},{t:Empty}]},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','filter']};};$singleton.fold=function ($ij,$ik,$$$mptypes){var $singleton=this;return $ik($ij,$singleton.$hp);};$singleton.fold.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$fold',$ps:[{$nm:'initial',$mt:'prm',$t:'Result$fold',$an:function(){return[];}},{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$fold',$an:function(){return[];}}],$cont:Singleton,$tp:{Result$fold:{}},$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','fold']};};$singleton.$reduce=function ($il,$$$mptypes){var $singleton=this;return $singleton.$hp;};$singleton.$reduce.$crtmm$=function(){return{mod:$CCMM$,$t:'Element$Singleton',$ps:[{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$reduce',$an:function(){return[];}}],$cont:Singleton,$tp:{Result$reduce:{}},$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','reduce']};};$singleton.collect=function ($im,$$$mptypes){var $singleton=this;return Singleton($im($singleton.$hp),{Element$Singleton:$$$mptypes.Result$collect});};$singleton.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Result$collect'}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[];}}],$cont:Singleton,$tp:{Result$collect:{}},$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','collect']};};$singleton.select=function ($in){var $singleton=this;return ($io=($in($singleton.$hp)?$singleton:null),$nn($io)?$io:getEmpty());};$singleton.select.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},{t:Empty}]},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','select']};};$singleton.find=function find($ip){var $singleton=this;if($ip($singleton.$hp)){return $singleton.$hp;}return null;};$singleton.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Singleton']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','find']};};$singleton.findLast=function ($iq){var $singleton=this;return $singleton.find($iq);};$singleton.findLast.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Element$Singleton']},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual(),$default()];},d:['$','Singleton','$m','findLast']};};$singleton.$sort=function ($ir){var $singleton=this;return $singleton;};$singleton.$sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','sort']};};$singleton.any=function ($is){var $singleton=this;return $is($singleton.$hp);};$singleton.any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','any']};};$singleton.$every=function ($it){var $singleton=this;return $it($singleton.$hp);};$singleton.$every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','every']};};$singleton.skipping=function ($iu){var $singleton=this;return ($iv=(($iu<(1))?$singleton:null),$nn($iv)?$iv:getEmpty());};$singleton.skipping.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},{t:Empty}]},$ps:[{$nm:'skip',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','skipping']};};$singleton.taking=function ($iw){var $singleton=this;return ($ix=(($iw>(0))?$singleton:null),$nn($ix)?$ix:getEmpty());};$singleton.taking.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Singleton,a:{Element$Singleton:'Element$Singleton'}},{t:Empty}]},$ps:[{$nm:'take',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','taking']};};$defat($singleton,'coalesced',function(){var $singleton=this;var $iy;if(($iy=$singleton.$hp)!==null){return Singleton($iy,{Element$Singleton:{t:'i',l:[$singleton.$$targs$$.Element$Singleton,{t:$Object}]}});}else {return getEmpty();}},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Singleton,a:{Element$Singleton:{t:'i',l:['Element$Singleton',{t:$Object}]}}},{t:Empty}]},$cont:Singleton,$an:function(){return[shared(),actual()];},d:['$','Singleton','$at','coalesced']};});$singleton.chain=function ($iz,$$$mptypes){var $singleton=this;return $iz.following($singleton.$hp,{Other$following:$singleton.$$targs$$.Element$Singleton});};$singleton.chain.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:'u',l:['Element$Singleton','Other$chain']},Absent$Iterable:{t:Nothing}}},$ps:[{$nm:'other',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Other$chain',Absent$Iterable:'OtherAbsent$chain'}},$an:function(){return[];}}],$cont:Singleton,$tp:{Other$chain:{},OtherAbsent$chain:{'satisfies':[{t:Null}]}},$an:function(){return[shared(),actual()];},d:['$','Singleton','$m','chain']};};$defat($singleton,'$hp',function(){return this.$hp_;},undefined,function(){return{mod:$CCMM$,$t:'Element$Singleton',$cont:Singleton,d:['$','Singleton','$at','element$9sweay']};});})(Singleton.$$.prototype);}
return Singleton;}
exports.$init$Singleton=$init$Singleton;$init$Singleton();var $hu,$hv,$hy,$i1,$i3,$i5,$ia,$ib,$if,$ii,$io,$iv,$ix;function AssertionError($j0,$assertionError){$init$AssertionError();if($assertionError===undefined)$assertionError=new AssertionError.$$;
$assertionError.$j0_=$j0;$Error($assertionError.$j0,undefined,$assertionError);return $assertionError;}
AssertionError.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$Error},$ps:[{$nm:'message',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].AssertionError.$an.doc[0]),shared()];},d:['$','AssertionError']};};
exports.AssertionError=AssertionError;function $init$AssertionError(){if(AssertionError.$$===undefined){initTypeProto(AssertionError,'ceylon.language::AssertionError',$init$$Error());
(function($assertionError){$defat($assertionError,'$j0',function(){return this.$j0_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:AssertionError,d:['$','AssertionError','$at','message$1aatzk']};});})(AssertionError.$$.prototype);}
return AssertionError;}
exports.$init$AssertionError=$init$AssertionError;$init$AssertionError();
function Map($$targs$$,$map){Collection({Element$Collection:{t:Entry,a:{Item$Entry:$$targs$$.Item$Map,Key$Entry:$$targs$$.Key$Map}}},$map);add_type_arg($map,'Element$Collection',{t:Entry,a:{Item$Entry:$map.$$targs$$.Item$Map,Key$Entry:$map.$$targs$$.Key$Map}});Correspondence({Key$Correspondence:{t:$Object},Item$Correspondence:$$targs$$.Item$Map},$map);add_type_arg($map,'Key$Correspondence',{t:$Object});set_type_args($map,$$targs$$);}
Map.$crtmm$=function(){return{mod:$CCMM$,$tp:{Key$Map:{'var':'out','satisfies':[{t:$Object}]},Item$Map:{'var':'out','satisfies':[{t:$Object}]}},satisfies:[{t:Collection,a:{Element$Collection:{t:Entry,a:{Item$Entry:'Item$Map',Key$Entry:'Key$Map'}}}},{t:Correspondence,a:{Key$Correspondence:{t:$Object},Item$Correspondence:'Item$Map'}}],$an:function(){return[doc($CCMM$['ceylon.language'].Map.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Entry),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),forKey),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),forItem),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byItem),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byKey)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared()];},d:['$','Map']};};
exports.Map=Map;function $init$Map(){if(Map.$$===undefined){initTypeProtoI(Map,'ceylon.language::Map',$init$Collection(),$init$Correspondence());
(function($map){$map.contains=function contains($j1){var $map=this;var $j2;var $j3;if($is(($j2=$j1),{t:Entry,a:{Item$Entry:{t:$Object},Key$Entry:$map.$$targs$$.Key$Map}})&&($j3=$map.$get($j2.key))!==null){return $j3.equals($j2.item);}else {return false;}};$map.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'entry',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Map,$an:function(){return[shared(),actual(),$default()];},d:['$','Map','$m','contains']};};$map.clone={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:'Key$Map',Item$Map:'Item$Map'}},$ps:[],$cont:Map,$an:function(){return[shared(),actual(),formal()];},d:['$','Map','$m','clone']};}};$map.equals=function equals($j4){var $map=this;var $j5;if($is(($j5=$j4),{t:Map,a:{Key$Map:{t:$Object},Item$Map:{t:$Object}}})&&($j5.size==$map.size)){;var $j7;for(var $j6=$map.iterator();($j7=$j6.next())!==getFinished();){var $j8;if(($j8=$j5.$get($j7.key))!==null&&$j8.equals($j7.item)){continue;}else {return false;}}
if(getFinished() === $j7){return true;}}else {return false;}};$map.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'that',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Map,$an:function(){return[doc($CCMM$['ceylon.language'].Map.$m.equals.$an.doc[0]),shared(),actual(),$default()];},d:['$','Map','$m','equals']};};$defat($map,'hash',function(){var $map=this;var $j9=(0);function set$j9($ja){return $j9=$ja;};$prop$get$j9={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$map.$prop$getHash,$an:function(){return[variable()];},d:['$','Map','$at','hash','$at','hashCode$v3442r']};}};$prop$get$j9.get=function(){return $j9};$prop$get$j9.set=set$j9;if(set$j9.$crtmm$===undefined)set$j9.$crtmm$=$prop$get$j9.$crtmm$;;var $jc;for(var $jb=$map.iterator();($jc=$jb.next())!==getFinished();){($j9=$j9.plus($jc.hash));}return $j9;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Map,$an:function(){return[shared(),actual(),$default()];},d:['$','Map','$at','hash']};});$defat($map,'keys',function(){var $map=this;function $jd($$targs$$){var $$jd=new $jd.$$;
$$jd.$$outer=$map;$$jd.$$targs$$=$$targs$$;Collection({Element$Collection:$map.$$targs$$.Key$Map},$$jd);return $$jd;
};$jd.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:$map.$prop$getKeys,satisfies:[{t:Collection,a:{Element$Collection:'Key$Map'}}],d:['$','Map','$at','keys','$o','keys$2rvhme']};};function $init$$jd(){if($jd.$$===undefined){initTypeProto($jd,'ceylon.language::Map.keys',Basic,$init$Collection());
(function($$jd){$$jd.contains=function ($je){var $$jd=this;return $map.defines($je);};$$jd.iterator=function (){var $$jd=this;return $sarg(function($jf){switch($jf){}return getFinished();},function(){return Comprehension(function(){var $jg=$map.iterator();var $jh,$ji;var next$ji=function(){var $jj;if(($jj=$jg.next())!==getFinished()){$jh=$jj.key;$ji=$jj.item;return $jj;}
$ji=undefined;return getFinished();}
next$ji();return function(){if($ji!==undefined){var $jk=$jh;var $jl=$ji;var $jm=$jk;next$ji();return $jm;}
return getFinished();}
},{Element$Iterable:$map.$$targs$$.Key$Map,Absent$Iterable:{t:Null}});},{Element$Iterable:$map.$$targs$$.Key$Map,Absent$Iterable:{t:Null}}).iterator();};$$jd.clone=function (){var $$jd=this;return $map.clone().keys;};$defat($$jd,'size',function(){var $$jd=this;return $map.size;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$jd,$an:function(){return[shared(),actual()];},d:['$','Map','$at','keys','$o','keys$2rvhme','$at','size']};});})($jd.$$.prototype);}
return $jd;}
$init$$jd();var $jn;function get$jn(){if($jn===undefined){$jn=$init$$jd()({Element$Collection:$map.$$targs$$.Key$Map});$jn.$crtmm$=get$jn.$crtmm$;}
return $jn;}
get$jn.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$jd},$cont:$map.$prop$getKeys,d:['$','Map','$at','keys','$o','keys$2rvhmf']};};$prop$get$jn={get:get$jn,$crtmm$:get$jn.$crtmm$};get$jd=get$jn;$prop$get$jd=get$jn;return get$jn();},undefined,function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:'Key$Map'}},$cont:Map,$an:function(){return[doc("A [[Collection]] containing the keys of this map."),actual(),shared(),$default()];},d:['$','Map','$at','keys']};});$defat($map,'values',function(){var $map=this;function $jo($$targs$$){var $$jo=new $jo.$$;
$$jo.$$outer=$map;$$jo.$$targs$$=$$targs$$;Collection({Element$Collection:$map.$$targs$$.Item$Map},$$jo);return $$jo;
};$jo.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:$map.$prop$getValues,satisfies:[{t:Collection,a:{Element$Collection:'Item$Map'}}],d:['$','Map','$at','values','$o','values$42snvy']};};function $init$$jo(){if($jo.$$===undefined){initTypeProto($jo,'ceylon.language::Map.values',Basic,$init$Collection());
(function($$jo){$$jo.contains=function contains($jp){var $$jo=this;;var $jr;for(var $jq=$map.iterator();($jr=$jq.next())!==getFinished();){var $js=$jr.key;var $jt=$jr.item;if($jt.equals($jp)){return true;}}return false;};$$jo.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'item',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:$jo,$an:function(){return[shared(),actual()];},d:['$','Map','$at','values','$o','values$42snvy','$m','contains']};};$$jo.iterator=function (){var $$jo=this;return $sarg(function($ju){switch($ju){}return getFinished();},function(){return Comprehension(function(){var $jv=$map.iterator();var $jw,$jx;var next$jx=function(){var $jy;if(($jy=$jv.next())!==getFinished()){$jw=$jy.key;$jx=$jy.item;return $jy;}
$jx=undefined;return getFinished();}
next$jx();return function(){if($jx!==undefined){var $jz=$jw;var $k0=$jx;var $k1=$k0;next$jx();return $k1;}
return getFinished();}
},{Element$Iterable:$map.$$targs$$.Item$Map,Absent$Iterable:{t:Null}});},{Element$Iterable:$map.$$targs$$.Item$Map,Absent$Iterable:{t:Null}}).iterator();};$$jo.clone=function (){var $$jo=this;return $map.clone().values;};$defat($$jo,'size',function(){var $$jo=this;return $map.size;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$jo,$an:function(){return[shared(),actual()];},d:['$','Map','$at','values','$o','values$42snvy','$at','size']};});})($jo.$$.prototype);}
return $jo;}
$init$$jo();var $k2;function get$k2(){if($k2===undefined){$k2=$init$$jo()({Element$Collection:$map.$$targs$$.Item$Map});$k2.$crtmm$=get$k2.$crtmm$;}
return $k2;}
get$k2.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$jo},$cont:$map.$prop$getValues,d:['$','Map','$at','values','$o','values$42snvx']};};$prop$get$k2={get:get$k2,$crtmm$:get$k2.$crtmm$};get$jo=get$k2;$prop$get$jo=get$k2;return get$k2();},undefined,function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:'Item$Map'}},$cont:Map,$an:function(){return[doc($CCMM$['ceylon.language'].Map.$at.values.$an.doc[0]),shared(),$default()];},d:['$','Map','$at','values']};});$map.mapItems=function mapItems($k3,$$$mptypes){var $map=this;function $k4($$targs$$){var $$k4=new $k4.$$;
$$k4.$$outer=$map;$$k4.$$targs$$=$$targs$$;Map({Key$Map:$map.$$targs$$.Key$Map,Item$Map:$$$mptypes.Result$mapItems},$$k4);return $$k4;
};$k4.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:mapItems,satisfies:[{t:Map,a:{Key$Map:'Key$Map',Item$Map:'Result$mapItems'}}],d:['$','Map','$m','mapItems','$o','map$5vl2m']};};function $init$$k4(){if($k4.$$===undefined){initTypeProto($k4,'ceylon.language::Map.map',Basic,$init$Map());
(function($$k4){$$k4.$get=function $get($k5){var $$k4=this;var $k6;var $k7;if($is(($k6=$k5),$map.$$targs$$.Key$Map)&&($k7=$map.$get($k6))!==null){return $k3($k6,$k7);}else {return null;}};$$k4.$get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Result$mapItems']},$ps:[{$nm:'key',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:$k4,$an:function(){return[shared(),actual()];},d:['$','Map','$m','mapItems','$o','map$5vl2m','$m','get']};};$$k4.defines=function ($k8){var $$k4=this;return $map.defines($k8);};$$k4.iterator=function (){var $$k4=this;return $map.$map($JsCallable((function ($k9){return Entry($k9.key,$k3($k9.key,$k9.item),{Item$Entry:$$$mptypes.Result$mapItems,Key$Entry:$map.$$targs$$.Key$Map});}),[{$nm:'entry',$mt:'prm',$t:{t:Entry,a:{Item$Entry:'Item$Map',Key$Entry:'Key$Map'}},$an:function(){return[];}}],{Return$Callable:{t:Entry,a:{Item$Entry:$$$mptypes.Result$mapItems,Key$Entry:$map.$$targs$$.Key$Map}},Arguments$Callable:{t:'T',l:[{t:Entry,a:{Item$Entry:$map.$$targs$$.Item$Map,Key$Entry:$map.$$targs$$.Key$Map}}]}}),{Result$map:{t:Entry,a:{Item$Entry:$$$mptypes.Result$mapItems,Key$Entry:$map.$$targs$$.Key$Map}}}).iterator();};$defat($$k4,'size',function(){var $$k4=this;return $map.size;},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$k4,$an:function(){return[shared(),actual()];},d:['$','Map','$m','mapItems','$o','map$5vl2m','$at','size']};});$$k4.equals=function ($ka){var $$k4=this;return $$k4.getT$all()['ceylon.language::Map'].$$.prototype.equals.call(this,$ka);};$defat($$k4,'hash',function(){var $$k4=this;return attrGetter($$k4.getT$all()['ceylon.language::Map'],'hash').call(this);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$k4,$an:function(){return[shared(),actual()];},d:['$','Map','$m','mapItems','$o','map$5vl2m','$at','hash']};});$$k4.clone=function (){var $$k4=this;return $$k4;};$$k4.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:'Key$Map',Item$Map:'Result$mapItems'}},$ps:[],$cont:$k4,$an:function(){return[shared(),actual()];},d:['$','Map','$m','mapItems','$o','map$5vl2m','$m','clone']};};})($k4.$$.prototype);}
return $k4;}
$init$$k4();var $kb;function get$kb(){if($kb===undefined){$kb=$init$$k4()({Key$Map:$map.$$targs$$.Key$Map,Item$Map:$$$mptypes.Result$mapItems});$kb.$crtmm$=get$kb.$crtmm$;}
return $kb;}
get$kb.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$k4},$cont:mapItems,d:['$','Map','$m','mapItems','$o','map$5vl2n']};};$prop$get$kb={get:get$kb,$crtmm$:get$kb.$crtmm$};get$k4=get$kb;$prop$get$k4=get$kb;return get$kb();};$map.mapItems.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:'Key$Map',Item$Map:'Result$mapItems'}},$ps:[{$nm:'mapping',$mt:'prm',$pt:'f',$t:'Result$mapItems',$an:function(){return[doc($CCMM$['ceylon.language'].Map.$m.mapItems.$m.mapping$4maorz.$an.doc[0])];}}],$cont:Map,$tp:{Result$mapItems:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].Map.$m.mapItems.$an.doc[0]),shared(),$default()];},d:['$','Map','$m','mapItems']};};})(Map.$$.prototype);}
return Map;}
exports.$init$Map=$init$Map;$init$Map();function $kc($$targs$$){var $emptyMap=new $kc.$$;
$emptyMap.$$targs$$=$$targs$$;$Object($emptyMap);Map({Key$Map:{t:Nothing},Item$Map:{t:Nothing}},$emptyMap);$emptyMap.$prop$getKeys={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:{t:Nothing}}},$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','keys']};}};$emptyMap.$prop$getKeys.get=function(){return keys};$emptyMap.$prop$getValues={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:{t:Nothing}}},$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','values']};}};$emptyMap.$prop$getValues.get=function(){return values};return $emptyMap;
};$kc.$crtmm$=function(){return{mod:$CCMM$,'super':{t:$Object},satisfies:[{t:Map,a:{Key$Map:{t:Nothing},Item$Map:{t:Nothing}}}],$an:function(){return[doc("An immutable [[Map]] with no entries."),shared()];},d:['$','emptyMap']};};function $init$$kc(){if($kc.$$===undefined){initTypeProto($kc,'ceylon.language::emptyMap',$init$$Object(),$init$Map());
(function($emptyMap){$emptyMap.$get=function ($kd){var $emptyMap=this;return null;};$emptyMap.$get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'key',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','get']};};$defat($emptyMap,'keys',function(){var $emptyMap=this;return getEmptySet();},undefined,function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:{t:Nothing}}},$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','keys']};});$defat($emptyMap,'values',function(){var $emptyMap=this;return getEmpty();},undefined,function(){return{mod:$CCMM$,$t:{t:Collection,a:{Element$Collection:{t:Nothing}}},$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','values']};});$emptyMap.clone=function (){var $emptyMap=this;return getEmptyMap();};$emptyMap.iterator=function (){var $emptyMap=this;return getEmptyIterator();};$defat($emptyMap,'size',function(){var $emptyMap=this;return (0);},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','size']};});$defat($emptyMap,'empty',function(){var $emptyMap=this;return true;},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$at','empty']};});$emptyMap.defines=function ($ke){var $emptyMap=this;return false;};$emptyMap.contains=function ($kf){var $emptyMap=this;return false;};$emptyMap.containsAny=function ($kg){var $emptyMap=this;return false;};$emptyMap.containsEvery=function ($kh){var $emptyMap=this;return false;};$emptyMap.mapItems=function ($ki,$$$mptypes){var $emptyMap=this;return getEmptyMap();};$emptyMap.mapItems.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:{t:Nothing},Item$Map:{t:Nothing}}},$ps:[{$nm:'mapping',$mt:'prm',$pt:'f',$t:'Result$mapItems',$an:function(){return[];}}],$cont:$kc,$tp:{Result$mapItems:{'satisfies':[{t:$Object}]}},$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','mapItems']};};$emptyMap.count=function ($kj){var $emptyMap=this;return (0);};$emptyMap.count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','count']};};$emptyMap.$map=function ($kk,$$$mptypes){var $emptyMap=this;return getEmpty();};$emptyMap.$map.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$map',$an:function(){return[];}}],$cont:$kc,$tp:{Result$map:{}},$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','map']};};$emptyMap.$filter=function ($kl){var $emptyMap=this;return getEmptyMap();};$emptyMap.$filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:{t:Nothing},Item$Map:{t:Nothing}}},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','filter']};};$emptyMap.fold=function ($km,$kn,$$$mptypes){var $emptyMap=this;return $km;};$emptyMap.fold.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$fold',$ps:[{$nm:'initial',$mt:'prm',$t:'Result$fold',$an:function(){return[];}},{$nm:'accumulating',$mt:'prm',$pt:'f',$t:'Result$fold',$an:function(){return[];}}],$cont:$kc,$tp:{Result$fold:{}},$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','fold']};};$emptyMap.find=function ($ko){var $emptyMap=this;return null;};$emptyMap.find.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Null},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','find']};};$emptyMap.collect=function ($kp,$$$mptypes){var $emptyMap=this;return getEmpty();};$emptyMap.collect.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$collect',$an:function(){return[];}}],$cont:$kc,$tp:{Result$collect:{}},$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','collect']};};$emptyMap.select=function ($kq){var $emptyMap=this;return getEmpty();};$emptyMap.select.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Empty},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','select']};};$emptyMap.any=function ($kr){var $emptyMap=this;return false;};$emptyMap.any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','any']};};$emptyMap.$every=function ($ks){var $emptyMap=this;return true;};$emptyMap.$every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'selecting',$mt:'prm',$pt:'f',$t:{t:$Boolean},$an:function(){return[];}}],$cont:$kc,$an:function(){return[shared(),actual()];},d:['$','emptyMap','$m','every']};};$emptyMap.skipping=function ($kt){var $emptyMap=this;return getEmptyMap();};$emptyMap.taking=function ($ku){var $emptyMap=this;return getEmptyMap();};$emptyMap.by=function ($kv){var $emptyMap=this;return getEmptyMap();};})($kc.$$.prototype);}
return $kc;}
exports.$init$$kc=$init$$kc;$init$$kc();var $kw;function getEmptyMap(){if($kw===undefined){$kw=$init$$kc()({Key$Map:{t:Nothing},Item$Map:{t:Nothing}});$kw.$crtmm$=getEmptyMap.$crtmm$;}
return $kw;}
exports.getEmptyMap=getEmptyMap;getEmptyMap.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$kc},$an:function(){return[doc("An immutable [[Map]] with no entries."),shared()];},d:['$','emptyMap']};};$prop$getEmptyMap={get:getEmptyMap,$crtmm$:getEmptyMap.$crtmm$};get$kc=getEmptyMap;$prop$get$kc=getEmptyMap;exports.$prop$getEmptyMap=$prop$getEmptyMap;
function any($kx){;var $kz;for(var $ky=$kx.iterator();($kz=$ky.next())!==getFinished();){if($kz){return true;}}return false;}
exports.any=any;any.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:$Boolean},Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].any.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),every)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','any']};};var byDecreasing=function ($l0,$$$mptypes){return function($l1,$l2){{return $l0($l2).compare($l0($l1));}}}
;byDecreasing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'comparable',$mt:'prm',$pt:'f',$t:'Value$byDecreasing',$an:function(){return[];}}],$tp:{Element$byDecreasing:{},Value$byDecreasing:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Value$byDecreasing'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].byDecreasing.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byIncreasing)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','byDecreasing']};};
exports.byDecreasing=byDecreasing;var byIncreasing=function ($l3,$$$mptypes){return function($l4,$l5){{return $l3($l4).compare($l3($l5));}}}
;byIncreasing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'comparable',$mt:'prm',$pt:'f',$t:'Value$byIncreasing',$an:function(){return[];}}],$tp:{Element$byIncreasing:{},Value$byIncreasing:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Value$byIncreasing'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].byIncreasing.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byDecreasing)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','byIncreasing']};};
exports.byIncreasing=byIncreasing;var byItem=function ($l6,$$$mptypes){return function($l7,$l8){{return $l6($l7.item,$l8.item);}}}
;byItem.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[];}}],$tp:{Item$byItem:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].byItem.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byKey)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','byItem']};};
exports.byItem=byItem;var byKey=function ($l9,$$$mptypes){return function($la,$lb){{return $l9($la.key,$lb.key);}}}
;byKey.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},$ps:[{$nm:'comparing',$mt:'prm',$pt:'f',$t:{t:Comparison},$an:function(){return[];}}],$tp:{Key$byKey:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].byKey.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),byItem)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','byKey']};};
exports.byKey=byKey;var coalesce=function ($lc,$$$mptypes){return $lc.coalesced;};coalesce.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:'i',l:['Element$coalesce',{t:$Object}]},Absent$Iterable:{t:Null}}},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Element$coalesce',Absent$Iterable:{t:Null}}},$an:function(){return[doc("The values, some of which may be null.")];}}],$tp:{Element$coalesce:{}},$an:function(){return[doc($CCMM$['ceylon.language'].coalesce.$an.doc[0]),shared()];},d:['$','coalesce']};};
exports.coalesce=coalesce;function count($ld){var $le=(0);function set$le($lf){return $le=$lf;};;var $lh;for(var $lg=$ld.iterator();($lh=$lg.next())!==getFinished();){if($lh){($li=$le,$le=$li.successor,$li);var $li;}}return $le;}
exports.count=count;count.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Integer},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:$Boolean},Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].count.$an.doc[0]),shared()];},d:['$','count']};};function emptyOrSingleton($lj,$$$mptypes){var $lk;if(($lk=$lj)!==null){return Tuple($lk,getEmpty(),{Rest$Tuple:{t:Empty},Element$Tuple:$$$mptypes.Element$emptyOrSingleton,First$Tuple:$$$mptypes.Element$emptyOrSingleton});}else {return getEmpty();}}
exports.emptyOrSingleton=emptyOrSingleton;emptyOrSingleton.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:'Element$emptyOrSingleton',$def:1}]},$ps:[{$nm:'element',$mt:'prm',$t:{t:'u',l:[{t:Null},'Element$emptyOrSingleton']},$an:function(){return[];}}],$tp:{Element$emptyOrSingleton:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].emptyOrSingleton.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Tuple),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Empty)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:InterfaceDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared()];},d:['$','emptyOrSingleton']};};var curry=function ($ll,$$$mptypes){return function($lm){{return flatten($JsCallable((function ($ln){return unflatten($ll,{Return$unflatten:$$$mptypes.Return$curry,Args$unflatten:{t:'T',l:[$$$mptypes.First$curry]}})(Tuple($lm,$ln,{Rest$Tuple:$$$mptypes.Rest$curry,First$Tuple:$$$mptypes.First$curry,Element$Tuple:$$$mptypes.Argument$curry}));}),[{$nm:'args',$mt:'prm',$t:'Rest$curry',$an:function(){return[];}}],{Return$Callable:$$$mptypes.Return$curry,Arguments$Callable:{t:'T',l:[$$$mptypes.Rest$curry]}}),{Args$flatten:$$$mptypes.Rest$curry,Return$flatten:$$$mptypes.Return$curry});}}}
;curry.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Callable,a:{Return$Callable:'Return$curry',Arguments$Callable:'Rest$curry'}},$ps:[{$nm:'f',$mt:'prm',$t:{t:Callable,a:{Return$Callable:'Return$curry',Arguments$Callable:{t:'T',l:[{$t:'First$curry'}]}}},$an:function(){return[];}}],$tp:{Return$curry:{},Argument$curry:{},First$curry:{'satisfies':['Argument$curry']},Rest$curry:{'satisfies':[{t:Sequential,a:{Element$Sequential:'Argument$curry'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].curry.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),uncurry),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),compose)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','curry']};};
exports.curry=curry;var uncurry=function ($lo,$$$mptypes){return flatten($JsCallable((function ($lp){return unflatten($JsCallable($lo($lp.first),[],{Return$Callable:$$$mptypes.Return$uncurry,Arguments$Callable:$$$mptypes.Rest$uncurry}),{Return$unflatten:$$$mptypes.Return$uncurry,Args$unflatten:$$$mptypes.Rest$uncurry})($lp.rest);}),[{$nm:'args',$mt:'prm',$t:{t:'T',l:[{$t:'First$uncurry'}]},$an:function(){return[];}}],{Return$Callable:$$$mptypes.Return$uncurry,Arguments$Callable:{t:'T',l:[{t:'T',l:[$$$mptypes.First$uncurry]}]}}),{Args$flatten:{t:'T',l:[$$$mptypes.First$uncurry]},Return$flatten:$$$mptypes.Return$uncurry});};uncurry.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Callable,a:{Return$Callable:'Return$uncurry',Arguments$Callable:{t:'T',l:[{$t:'First$uncurry'}]}}},$ps:[{$nm:'f',$mt:'prm',$pt:'f',$t:{t:Callable,a:{Return$Callable:'Return$uncurry',Arguments$Callable:'Rest$uncurry'}},$an:function(){return[];}}],$tp:{Return$uncurry:{},Argument$uncurry:{},First$uncurry:{'satisfies':['Argument$uncurry']},Rest$uncurry:{'satisfies':[{t:Sequential,a:{Element$Sequential:'Argument$uncurry'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].uncurry.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),curry),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),compose)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','uncurry']};};
exports.uncurry=uncurry;var entries=function ($lq,$$$mptypes){return $lq.indexed;};entries.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:Entry,a:{Item$Entry:{t:'i',l:['Element$entries',{t:$Object}]},Key$Entry:{t:Integer}}},Absent$Iterable:{t:Null}}},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Element$entries',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$tp:{Element$entries:{}},$an:function(){return[doc($CCMM$['ceylon.language'].entries.$an.doc[0]),see([$init$OpenValue()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),$init$Iterable().$$.prototype.$prop$getIndexed)].reifyCeylonType({Element$Iterable:{t:ValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','entries']};};
exports.entries=entries;var equalTo=function ($lr,$$$mptypes){return function($ls){{return $ls.equals($lr);}}}
;equalTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'val',$mt:'prm',$t:'Element$equalTo',$an:function(){return[];}}],$tp:{Element$equalTo:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].equalTo.$an.doc[0]),shared()];},d:['$','equalTo']};};
exports.equalTo=equalTo;var $apply=function ($lt,$lu,$$$mptypes){return unflatten($lt,{Return$unflatten:$$$mptypes.Return$apply,Args$unflatten:$$$mptypes.Args$apply})($lu);};$apply.$crtmm$=function(){return{mod:$CCMM$,$t:'Return$apply',$ps:[{$nm:'f',$mt:'prm',$t:{t:Callable,a:{Return$Callable:'Return$apply',Arguments$Callable:'Args$apply'}},$an:function(){return[];}},{$nm:'args',$mt:'prm',$t:'Args$apply',$an:function(){return[];}}],$tp:{Return$apply:{},Args$apply:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].apply.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),unflatten)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','apply']};};
exports.$apply=$apply;
function every($lv){;var $lx;for(var $lw=$lv.iterator();($lx=$lw.next())!==getFinished();){if(!$lx){return false;}}return true;}
exports.every=every;every.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:$Boolean},Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].every.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),any)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','every']};};function first($ly,$$$mptypes){var $lz;var $m0;if(!$is(($m0=$ly.iterator().next()),{t:Finished})){$lz=$m0;}else {$lz=null;}//assert at first.ceylon (12:4-12:34)
var $m1;if(!($is(($m1=$lz),{t:'u',l:[$$$mptypes.Absent$first,$$$mptypes.Value$first]}))) {throw wrapexc(AssertionError("Assertion failed: \'is Absent|Value first\' at first.ceylon (12:11-12:33)"),'12:4-12:34','first.ceylon'); }
return $m1;}
exports.first=first;first.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$first','Value$first']},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Value$first',Absent$Iterable:'Absent$first'}},$an:function(){return[];}}],$tp:{Value$first:{},Absent$first:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].first.$an.doc[0]),shared()];},d:['$','first']};};var forItem=function ($m2,$$$mptypes){return function($m3){{return $m2($m3.item);}}}
;forItem.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$forItem',$ps:[{$nm:'resulting',$mt:'prm',$pt:'f',$t:'Result$forItem',$an:function(){return[];}}],$tp:{Item$forItem:{'satisfies':[{t:$Object}]},Result$forItem:{}},$an:function(){return[doc($CCMM$['ceylon.language'].forItem.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),forKey)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','forItem']};};
exports.forItem=forItem;var forKey=function ($m4,$$$mptypes){return function($m5){{return $m4($m5.key);}}}
;forKey.$crtmm$=function(){return{mod:$CCMM$,$t:'Result$forKey',$ps:[{$nm:'resulting',$mt:'prm',$pt:'f',$t:'Result$forKey',$an:function(){return[];}}],$tp:{Key$forKey:{'satisfies':[{t:$Object}]},Result$forKey:{}},$an:function(){return[doc($CCMM$['ceylon.language'].forKey.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),forItem)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','forKey']};};
exports.forKey=forKey;var greaterThan=function ($m6,$$$mptypes){return function($m7){{return $m7.compare($m6).equals(getLarger());}}}
;greaterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'val',$mt:'prm',$t:'Element$greaterThan',$an:function(){return[];}}],$tp:{Element$greaterThan:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$greaterThan'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].greaterThan.$an.doc[0]),deprecated("use [[Comparable.smallerThan]]"),shared()];},d:['$','greaterThan']};};
exports.greaterThan=greaterThan;var concatenate=function ($m8,$$$mptypes){if($m8===undefined){$m8=getEmpty();}
return Comprehension(function(){var $m9=$m8.iterator();var $ma=getFinished();var next$ma=function(){if(($ma=$m9.next())!==getFinished()){$mb=$ma.iterator();next$mc();return $ma;}
return getFinished();}
var $mb;var $mc=getFinished();var next$mc=function(){return $mc=$mb.next();}
next$ma();return function(){do{if($mc!==getFinished()){var $md=$mc;var $me=$md;next$mc();return $me;}
}while(next$ma()!==getFinished());return getFinished();}
},{Element$Iterable:$$$mptypes.Element$concatenate,Absent$Iterable:{t:Null}}).sequence;};concatenate.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$concatenate'}},$ps:[{$nm:'iterables',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Iterable,a:{Element$Iterable:'Element$concatenate',Absent$Iterable:{t:Null}}}}},$an:function(){return[doc("The iterable objects to concatenate.")];}}],$tp:{Element$concatenate:{}},$an:function(){return[doc($CCMM$['ceylon.language'].concatenate.$an.doc[0]),see([$init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),SequenceBuilder),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),expand)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared()];},d:['$','concatenate']};};
exports.concatenate=concatenate;var expand=function ($mf,$$$mptypes){return $sarg(function($mg){switch($mg){}return getFinished();},function(){return Comprehension(function(){var $mh=$mf.iterator();var $mi=getFinished();var next$mi=function(){if(($mi=$mh.next())!==getFinished()){$mj=$mi.iterator();next$mk();return $mi;}
return getFinished();}
var $mj;var $mk=getFinished();var next$mk=function(){return $mk=$mj.next();}
next$mi();return function(){do{if($mk!==getFinished()){var $ml=$mk;var $mm=$ml;next$mk();return $mm;}
}while(next$mi()!==getFinished());return getFinished();}
},{Element$Iterable:$$$mptypes.Element$expand,Absent$Iterable:{t:Null}});},{Element$Iterable:$$$mptypes.Element$expand,Absent$Iterable:{t:'u',l:[$$$mptypes.InnerAbsent$expand,$$$mptypes.OuterAbsent$expand]}});};expand.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Element$expand',Absent$Iterable:{t:'u',l:['OuterAbsent$expand','InnerAbsent$expand']}}},$ps:[{$nm:'iterables',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:Iterable,a:{Element$Iterable:'Element$expand',Absent$Iterable:'InnerAbsent$expand'}},Absent$Iterable:'OuterAbsent$expand'}},$an:function(){return[];}}],$tp:{Element$expand:{},OuterAbsent$expand:{'satisfies':[{t:Null}]},InnerAbsent$expand:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].expand.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),concatenate)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','expand']};};
exports.expand=expand;var largest=function ($mn,$mo,$$$mptypes){return ($mp=($mn.compare($mo).equals(getLarger())?$mn:null),$nn($mp)?$mp:$mo);};largest.$crtmm$=function(){return{mod:$CCMM$,$t:'Element$largest',$ps:[{$nm:'x',$mt:'prm',$t:'Element$largest',$an:function(){return[];}},{$nm:'y',$mt:'prm',$t:'Element$largest',$an:function(){return[];}}],$tp:{Element$largest:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$largest'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].largest.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),smallest),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),max)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared()];},d:['$','largest']};};
exports.largest=largest;var $mp;var lessThan=function ($mq,$$$mptypes){return function($mr){{return $mr.compare($mq).equals(getSmaller());}}}
;lessThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'val',$mt:'prm',$t:'Element$lessThan',$an:function(){return[];}}],$tp:{Element$lessThan:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$lessThan'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].lessThan.$an.doc[0]),deprecated("use [[Comparable.largerThan]]"),shared()];},d:['$','lessThan']};};
exports.lessThan=lessThan;function max($ms,$$$mptypes){var $mt=$ms.iterator();var $mu;if(!$is(($mu=$mt.next()),{t:Finished})){var $mv=$mu;function set$mv($mw){return $mv=$mw;};var $mx;while(!$is(($mx=$mt.next()),{t:Finished})){if($mx.compare($mv).equals(getLarger())){$mv=$mx;}}return $mv;}else {//assert at max.ceylon (20:8-21:31)
var $my;if(!($is(($my=null),$$$mptypes.Absent$max))) {throw wrapexc(AssertionError("iterable must be empty: \'is Absent null\' at max.ceylon (21:15-21:30)"),'20:8-21:31','max.ceylon'); }
return null;}}
exports.max=max;max.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$max','Value$max']},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Value$max',Absent$Iterable:'Absent$max'}},$an:function(){return[];}}],$tp:{Value$max:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Value$max'}}]},Absent$max:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].max.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),min),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),largest)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared()];},d:['$','max']};};function min($mz,$$$mptypes){var $n0=$mz.iterator();var $n1;if(!$is(($n1=$n0.next()),{t:Finished})){var $n2=$n1;function set$n2($n3){return $n2=$n3;};var $n4;while(!$is(($n4=$n0.next()),{t:Finished})){if($n4.compare($n2).equals(getSmaller())){$n2=$n4;}}return $n2;}else {//assert at min.ceylon (20:8-21:31)
var $n5;if(!($is(($n5=null),$$$mptypes.Absent$min))) {throw wrapexc(AssertionError("iterable must be empty: \'is Absent null\' at min.ceylon (21:15-21:30)"),'20:8-21:31','min.ceylon'); }
return null;}}
exports.min=min;min.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Absent$min','Value$min']},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Value$min',Absent$Iterable:'Absent$min'}},$an:function(){return[];}}],$tp:{Value$min:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Value$min'}}]},Absent$min:{'satisfies':[{t:Null}]}},$an:function(){return[doc($CCMM$['ceylon.language'].min.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),max),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),smallest)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared()];},d:['$','min']};};var smallest=function ($n6,$n7,$$$mptypes){return ($n8=($n6.compare($n7).equals(getSmaller())?$n6:null),$nn($n8)?$n8:$n7);};smallest.$crtmm$=function(){return{mod:$CCMM$,$t:'Element$smallest',$ps:[{$nm:'x',$mt:'prm',$t:'Element$smallest',$an:function(){return[];}},{$nm:'y',$mt:'prm',$t:'Element$smallest',$an:function(){return[];}}],$tp:{Element$smallest:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$smallest'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].smallest.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),largest),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),min)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared()];},d:['$','smallest']};};
exports.smallest=smallest;var $n8;function sum($n9,$$$mptypes){var $na=$n9.iterator();//assert at sum.ceylon (7:4-7:43)
var $nb;if(!(!$is(($nb=$na.next()),{t:Finished}))) {throw wrapexc(AssertionError("Assertion failed: \'!is Finished first = it.next()\' at sum.ceylon (7:11-7:42)"),'7:4-7:43','sum.ceylon'); }
var $nc=$nb;function set$nc($nd){return $nc=$nd;};var $ne;while(!$is(($ne=$na.next()),{t:Finished})){($nc=$nc.plus($ne));}return $nc;}
exports.sum=sum;sum.$crtmm$=function(){return{mod:$CCMM$,$t:'Value$sum',$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Value$sum',Absent$Iterable:{t:Nothing}}},$an:function(){return[];}}],$tp:{Value$sum:{'satisfies':[{t:Summable,a:{Other$Summable:'Value$sum'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].sum.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),product)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','sum']};};function product($nf,$$$mptypes){var $ng=$nf.first;function set$ng($nh){return $ng=$nh;};;var $nj;for(var $ni=$nf.rest.iterator();($nj=$ni.next())!==getFinished();){($ng=$ng.times($nj));}return $ng;}
exports.product=product;product.$crtmm$=function(){return{mod:$CCMM$,$t:'Value$product',$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Value$product',Absent$Iterable:{t:Nothing}}},$an:function(){return[];}}],$tp:{Value$product:{'satisfies':[{t:Numeric,a:{Other$Numeric:'Value$product'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].product.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),sum)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','product']};};var zipEntries=function ($nk,$nl,$$$mptypes){return mapPairs(Entry,$nk,$nl,{Result$mapPairs:{t:Entry,a:{Item$Entry:$$$mptypes.Item$zipEntries,Key$Entry:$$$mptypes.Key$zipEntries}},FirstArgument$mapPairs:$$$mptypes.Key$zipEntries,SecondArgument$mapPairs:$$$mptypes.Item$zipEntries});};zipEntries.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:Entry,a:{Item$Entry:'Item$zipEntries',Key$Entry:'Key$zipEntries'}},Absent$Iterable:{t:Null}}},$ps:[{$nm:'keys',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Key$zipEntries',Absent$Iterable:{t:Null}}},$an:function(){return[];}},{$nm:'items',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Item$zipEntries',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$tp:{Key$zipEntries:{'satisfies':[{t:$Object}]},Item$zipEntries:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].zipEntries.$an.doc[0]),shared()];},d:['$','zipEntries']};};
exports.zipEntries=zipEntries;var zipPairs=function ($nm,$nn,$$$mptypes){return mapPairs($JsCallable((function ($no,$np){return Tuple($no,Tuple($np,getEmpty(),{Rest$Tuple:{t:Empty},Element$Tuple:$$$mptypes.Second$zipPairs,First$Tuple:$$$mptypes.Second$zipPairs}),{Rest$Tuple:{t:'T',l:[$$$mptypes.Second$zipPairs]},Element$Tuple:{t:'u',l:[$$$mptypes.First$zipPairs,$$$mptypes.Second$zipPairs]},First$Tuple:$$$mptypes.First$zipPairs});}),[{$nm:'first',$mt:'prm',$t:'First$zipPairs',$an:function(){return[];}},{$nm:'second',$mt:'prm',$t:'Second$zipPairs',$an:function(){return[];}}],{Return$Callable:{t:'T',l:[$$$mptypes.First$zipPairs,$$$mptypes.Second$zipPairs]},Arguments$Callable:{t:'T',l:[$$$mptypes.First$zipPairs,$$$mptypes.Second$zipPairs]}}),$nm,$nn,{Result$mapPairs:{t:'T',l:[$$$mptypes.First$zipPairs,$$$mptypes.Second$zipPairs]},FirstArgument$mapPairs:$$$mptypes.First$zipPairs,SecondArgument$mapPairs:$$$mptypes.Second$zipPairs});};zipPairs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:'T',l:[{$t:'First$zipPairs'},{$t:'Second$zipPairs'}]},Absent$Iterable:{t:Null}}},$ps:[{$nm:'firstElements',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'First$zipPairs',Absent$Iterable:{t:Null}}},$an:function(){return[];}},{$nm:'secondElements',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Second$zipPairs',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$tp:{First$zipPairs:{},Second$zipPairs:{}},$an:function(){return[doc($CCMM$['ceylon.language'].zipPairs.$an.doc[0]),shared()];},d:['$','zipPairs']};};
exports.zipPairs=zipPairs;var zip=function ($nq,$nr,$$$mptypes){return mapPairs(Tuple,$nq,$nr,{Result$mapPairs:{t:'T',l:[$$$mptypes.Head$zip]},FirstArgument$mapPairs:$$$mptypes.Head$zip,SecondArgument$mapPairs:$$$mptypes.Tail$zip});};zip.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:{t:'T',l:[{$t:'Head$zip'}]},Absent$Iterable:{t:Null}}},$ps:[{$nm:'heads',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Head$zip',Absent$Iterable:{t:Null}}},$an:function(){return[];}},{$nm:'tails',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Tail$zip',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$tp:{Element$zip:{},Head$zip:{},Tail$zip:{'satisfies':[{t:Sequential,a:{Element$Sequential:'Element$zip'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].zip.$an.doc[0]),shared()];},d:['$','zip']};};
exports.zip=zip;var unzip=function ($ns,$$$mptypes){return Tuple($ns.$map($JsCallable((function ($nt){return $nt.first;}),[{$nm:'tuple',$mt:'prm',$t:{t:'T',l:[{$t:'Head$unzip'}]},$an:function(){return[];}}],{Return$Callable:$$$mptypes.Head$unzip,Arguments$Callable:{t:'T',l:[{t:'T',l:[$$$mptypes.Head$unzip]}]}}),{Result$map:$$$mptypes.Head$unzip}),Tuple($ns.$map($JsCallable((function ($nu){return $nu.rest;}),[{$nm:'tuple',$mt:'prm',$t:{t:'T',l:[{$t:'Head$unzip'}]},$an:function(){return[];}}],{Return$Callable:$$$mptypes.Tail$unzip,Arguments$Callable:{t:'T',l:[{t:'T',l:[$$$mptypes.Head$unzip]}]}}),{Result$map:$$$mptypes.Tail$unzip}),getEmpty(),{Rest$Tuple:{t:Empty},Element$Tuple:{t:Iterable,a:{Element$Iterable:$$$mptypes.Tail$unzip,Absent$Iterable:{t:Null}}},First$Tuple:{t:Iterable,a:{Element$Iterable:$$$mptypes.Tail$unzip,Absent$Iterable:{t:Null}}}}),{Rest$Tuple:{t:'T',l:[{t:Iterable,a:{Element$Iterable:$$$mptypes.Tail$unzip,Absent$Iterable:{t:Null}}}]},Element$Tuple:{t:'u',l:[{t:Iterable,a:{Element$Iterable:$$$mptypes.Head$unzip,Absent$Iterable:{t:Null}}},{t:Iterable,a:{Element$Iterable:$$$mptypes.Tail$unzip,Absent$Iterable:{t:Null}}}]},First$Tuple:{t:Iterable,a:{Element$Iterable:$$$mptypes.Head$unzip,Absent$Iterable:{t:Null}}}});};unzip.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:{t:Iterable,a:{Element$Iterable:'Head$unzip',Absent$Iterable:{t:Null}}}},{$t:{t:Iterable,a:{Element$Iterable:'Tail$unzip',Absent$Iterable:{t:Null}}}}]},$ps:[{$nm:'tuples',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:'T',l:[{$t:'Head$unzip'}]},Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$tp:{Element$unzip:{},Head$unzip:{},Tail$unzip:{'satisfies':[{t:Sequential,a:{Element$Sequential:'Element$unzip'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].unzip.$an.doc[0]),shared()];},d:['$','unzip']};};
exports.unzip=unzip;var unzipPairs=function ($nv,$$$mptypes){return Tuple($nv.$map($JsCallable((function ($nw){return $nw.$get((0));}),[{$nm:'pair',$mt:'prm',$t:{t:'T',l:[{$t:'First$unzipPairs'},{$t:'Second$unzipPairs'}]},$an:function(){return[];}}],{Return$Callable:$$$mptypes.First$unzipPairs,Arguments$Callable:{t:'T',l:[{t:'T',l:[$$$mptypes.First$unzipPairs,$$$mptypes.Second$unzipPairs]}]}}),{Result$map:$$$mptypes.First$unzipPairs}),Tuple($nv.$map($JsCallable((function ($nx){return $nx.$get((1));}),[{$nm:'pair',$mt:'prm',$t:{t:'T',l:[{$t:'First$unzipPairs'},{$t:'Second$unzipPairs'}]},$an:function(){return[];}}],{Return$Callable:$$$mptypes.Second$unzipPairs,Arguments$Callable:{t:'T',l:[{t:'T',l:[$$$mptypes.First$unzipPairs,$$$mptypes.Second$unzipPairs]}]}}),{Result$map:$$$mptypes.Second$unzipPairs}),getEmpty(),{Rest$Tuple:{t:Empty},Element$Tuple:{t:Iterable,a:{Element$Iterable:$$$mptypes.Second$unzipPairs,Absent$Iterable:{t:Null}}},First$Tuple:{t:Iterable,a:{Element$Iterable:$$$mptypes.Second$unzipPairs,Absent$Iterable:{t:Null}}}}),{Rest$Tuple:{t:'T',l:[{t:Iterable,a:{Element$Iterable:$$$mptypes.Second$unzipPairs,Absent$Iterable:{t:Null}}}]},Element$Tuple:{t:'u',l:[{t:Iterable,a:{Element$Iterable:$$$mptypes.First$unzipPairs,Absent$Iterable:{t:Null}}},{t:Iterable,a:{Element$Iterable:$$$mptypes.Second$unzipPairs,Absent$Iterable:{t:Null}}}]},First$Tuple:{t:Iterable,a:{Element$Iterable:$$$mptypes.First$unzipPairs,Absent$Iterable:{t:Null}}}});};unzipPairs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:{t:Iterable,a:{Element$Iterable:'First$unzipPairs',Absent$Iterable:{t:Null}}}},{$t:{t:Iterable,a:{Element$Iterable:'Second$unzipPairs',Absent$Iterable:{t:Null}}}}]},$ps:[{$nm:'pairs',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:'T',l:[{$t:'First$unzipPairs'},{$t:'Second$unzipPairs'}]},Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$tp:{First$unzipPairs:{},Second$unzipPairs:{}},$an:function(){return[doc($CCMM$['ceylon.language'].unzipPairs.$an.doc[0]),shared()];},d:['$','unzipPairs']};};
exports.unzipPairs=unzipPairs;var unzipEntries=function ($ny,$$$mptypes){return Tuple($ny.$map($JsCallable(function($O$) {return $O$.key;},[],{Return$Callable:$$$mptypes.Key$unzipEntries,Arguments$Callable:{t:'T',l:[{t:Entry,a:{Item$Entry:$$$mptypes.Item$unzipEntries,Key$Entry:$$$mptypes.Key$unzipEntries}}]}}),{Result$map:$$$mptypes.Key$unzipEntries}),Tuple($ny.$map($JsCallable(function($O$) {return $O$.item;},[],{Return$Callable:$$$mptypes.Item$unzipEntries,Arguments$Callable:{t:'T',l:[{t:Entry,a:{Item$Entry:$$$mptypes.Item$unzipEntries,Key$Entry:$$$mptypes.Key$unzipEntries}}]}}),{Result$map:$$$mptypes.Item$unzipEntries}),getEmpty(),{Rest$Tuple:{t:Empty},Element$Tuple:{t:Iterable,a:{Element$Iterable:$$$mptypes.Item$unzipEntries,Absent$Iterable:{t:Null}}},First$Tuple:{t:Iterable,a:{Element$Iterable:$$$mptypes.Item$unzipEntries,Absent$Iterable:{t:Null}}}}),{Rest$Tuple:{t:'T',l:[{t:Iterable,a:{Element$Iterable:$$$mptypes.Item$unzipEntries,Absent$Iterable:{t:Null}}}]},Element$Tuple:{t:'u',l:[{t:Iterable,a:{Element$Iterable:$$$mptypes.Key$unzipEntries,Absent$Iterable:{t:Null}}},{t:Iterable,a:{Element$Iterable:$$$mptypes.Item$unzipEntries,Absent$Iterable:{t:Null}}}]},First$Tuple:{t:Iterable,a:{Element$Iterable:$$$mptypes.Key$unzipEntries,Absent$Iterable:{t:Null}}}});};unzipEntries.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'T',l:[{$t:{t:Iterable,a:{Element$Iterable:'Key$unzipEntries',Absent$Iterable:{t:Null}}}},{$t:{t:Iterable,a:{Element$Iterable:'Item$unzipEntries',Absent$Iterable:{t:Null}}}}]},$ps:[{$nm:'entries',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:Entry,a:{Item$Entry:'Item$unzipEntries',Key$Entry:'Key$unzipEntries'}},Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$tp:{Key$unzipEntries:{'satisfies':[{t:$Object}]},Item$unzipEntries:{'satisfies':[{t:$Object}]}},$an:function(){return[doc($CCMM$['ceylon.language'].unzipEntries.$an.doc[0]),shared()];},d:['$','unzipEntries']};};
exports.unzipEntries=unzipEntries;function mapPairs($nz,$o0,$o1,$$$mptypes){function $o2($$targs$$){var $$o2=new $o2.$$;
$$o2.$$targs$$=$$targs$$;Iterable({Element$Iterable:$$$mptypes.Result$mapPairs,Absent$Iterable:{t:Null}},$$o2);add_type_arg($$o2,'Absent$Iterable',{t:Null});return $$o2;
};$o2.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:mapPairs,satisfies:[{t:Iterable,a:{Element$Iterable:'Result$mapPairs',Absent$Iterable:{t:Null}}}],d:['$','mapPairs','$o','iterable$r9g8u6']};};function $init$$o2(){if($o2.$$===undefined){initTypeProto($o2,'ceylon.language::iterable',Basic,$init$Iterable());
(function($$o2){$$o2.iterator=function iterator(){var $$o2=this;var $o3=$o0.iterator();var $o4=$o1.iterator();function $o5($$targs$$){var $$o5=new $o5.$$;
$$o5.$$outer=$$o2;$$o5.$$targs$$=$$targs$$;Iterator({Element$Iterator:$$$mptypes.Result$mapPairs},$$o5);return $$o5;
};$o5.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'Result$mapPairs'}}],d:['$','mapPairs','$o','iterable$r9g8u6','$m','iterator','$o','iterator$b0lkj8']};};function $init$$o5(){if($o5.$$===undefined){initTypeProto($o5,'ceylon.language::iterable.iterator',Basic,$init$Iterator());
(function($$o5){$$o5.next=function next(){var $$o5=this;var $o6;var $o7;if(!$is(($o6=$o3.next()),{t:Finished})&&!$is(($o7=$o4.next()),{t:Finished})){return $nz($o6,$o7);}else {return getFinished();}};$$o5.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['Result$mapPairs',{t:Finished}]},$ps:[],$cont:$o5,$an:function(){return[shared(),actual()];},d:['$','mapPairs','$o','iterable$r9g8u6','$m','iterator','$o','iterator$b0lkj8','$m','next']};};})($o5.$$.prototype);}
return $o5;}
$init$$o5();var $o8;function get$o8(){if($o8===undefined){$o8=$init$$o5()({Element$Iterator:$$$mptypes.Result$mapPairs});$o8.$crtmm$=get$o8.$crtmm$;}
return $o8;}
get$o8.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$o5},$cont:iterator,d:['$','mapPairs','$o','iterable$r9g8u6','$m','iterator','$o','iterator$b0lkj7']};};$prop$get$o8={get:get$o8,$crtmm$:get$o8.$crtmm$};get$o5=get$o8;$prop$get$o5=get$o8;return get$o8();};$$o2.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'Result$mapPairs'}},$ps:[],$cont:$o2,$an:function(){return[shared(),actual()];},d:['$','mapPairs','$o','iterable$r9g8u6','$m','iterator']};};})($o2.$$.prototype);}
return $o2;}
$init$$o2();var $o9;function get$o9(){if($o9===undefined){$o9=$init$$o2()({Element$Iterable:$$$mptypes.Result$mapPairs,Absent$Iterable:{t:Null}});$o9.$crtmm$=get$o9.$crtmm$;}
return $o9;}
get$o9.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$o2},$cont:mapPairs,d:['$','mapPairs','$o','iterable$r9g8u7']};};$prop$get$o9={get:get$o9,$crtmm$:get$o9.$crtmm$};get$o2=get$o9;$prop$get$o2=get$o9;return get$o9();}
exports.mapPairs=mapPairs;mapPairs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Element$Iterable:'Result$mapPairs',Absent$Iterable:{t:Null}}},$ps:[{$nm:'collecting',$mt:'prm',$pt:'f',$t:'Result$mapPairs',$an:function(){return[];}},{$nm:'firstArguments',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'FirstArgument$mapPairs',Absent$Iterable:{t:Null}}},$an:function(){return[];}},{$nm:'secondArguments',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'SecondArgument$mapPairs',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$tp:{Result$mapPairs:{},FirstArgument$mapPairs:{},SecondArgument$mapPairs:{}},$an:function(){return[doc($CCMM$['ceylon.language'].mapPairs.$an.doc[0]),shared()];},d:['$','mapPairs']};};var print=function ($oa){return getProcess().writeLine(stringify($oa));};print.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'val',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].print.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),getProcess().writeLine)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];},d:['$','print']};};
exports.print=print;function printAll($ob,$oc){if($oc===undefined){$oc=", ";}
var $od;if(($od=$ob.first)!==null){getProcess().write(stringify($od));;var $of;for(var $oe=$ob.rest.iterator();($of=$oe.next())!==getFinished();){getProcess().write($oc);getProcess().write(stringify($of));}}getProcess().write(getOperatingSystem().newline);}
exports.printAll=printAll;printAll.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'values',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:Anything},Absent$Iterable:{t:Null}}},$an:function(){return[];}},{$nm:'separator',$mt:'prm',$def:1,$t:{t:String$},$an:function(){return[doc("A character sequence to use to separate the values")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].printAll.$an.doc[0]),by(["Gavin"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),getProcess().write)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','printAll']};};var stringify=function ($og){return ($oh=($oi=$og,$nn($oi)?$oi.string:null),$nn($oh)?$oh:"<null>");};stringify.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},$ps:[{$nm:'val',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],d:['$','stringify']};};var $oh,$oi;function getNothing(){//assert at nothing.ceylon (10:4-11:18)
if(!(false)) {throw wrapexc(AssertionError("nothing may not be evaluated: \'false\' at nothing.ceylon (11:11-11:17)"),'10:4-11:18','nothing.ceylon'); }
}
getNothing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Nothing},$an:function(){return[doc($CCMM$['ceylon.language'].nothing.$an.doc[0]),$throws("AssertionError","when evaluated"),shared()];},d:['$','nothing']};}
exports.getNothing=getNothing;var $prop$getNothing={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Nothing},$an:function(){return[doc($CCMM$['ceylon.language'].nothing.$an.doc[0]),$throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),AssertionError),"when evaluated"),shared()];},d:['$','nothing']};}};exports.$prop$getNothing=$prop$getNothing;$prop$getNothing.get=getNothing;getNothing.$crtmm$=$prop$getNothing.$crtmm$;
var identical=function ($oj,$ok){return ($oj===$ok);};identical.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'x',$mt:'prm',$t:{t:Identifiable},$an:function(){return[doc("An object with well-defined identity.")];}},{$nm:'y',$mt:'prm',$t:{t:Identifiable},$an:function(){return[doc("A second object with well-defined identity.")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].identical.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),identityHash)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','identical']};};
exports.identical=identical;var compose=function ($ol,$om,$$$mptypes){return flatten($JsCallable((function ($on){return $ol(unflatten($om,{Return$unflatten:$$$mptypes.Y$compose,Args$unflatten:$$$mptypes.Args$compose})($on));}),[{$nm:'args',$mt:'prm',$t:'Args$compose',$an:function(){return[];}}],{Return$Callable:$$$mptypes.X$compose,Arguments$Callable:{t:'T',l:[$$$mptypes.Args$compose]}}),{Args$flatten:$$$mptypes.Args$compose,Return$flatten:$$$mptypes.X$compose});};compose.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Callable,a:{Return$Callable:'X$compose',Arguments$Callable:'Args$compose'}},$ps:[{$nm:'x',$mt:'prm',$t:{t:Callable,a:{Return$Callable:'X$compose',Arguments$Callable:{t:'T',l:[{$t:'Y$compose'}]}}},$an:function(){return[];}},{$nm:'y',$mt:'prm',$t:{t:Callable,a:{Return$Callable:'Y$compose',Arguments$Callable:'Args$compose'}},$an:function(){return[];}}],$tp:{X$compose:{},Y$compose:{},Args$compose:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].compose.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),curry),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),uncurry)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','compose']};};
exports.compose=compose;var shuffle=function ($oo,$$$mptypes){return flatten($JsCallable((function ($op){return flatten($JsCallable((function ($oq){return unflatten($JsCallable(unflatten($oo,{Return$unflatten:{t:Callable,a:{Return$Callable:$$$mptypes.Result$shuffle,Arguments$Callable:$$$mptypes.SecondArgs$shuffle}},Args$unflatten:$$$mptypes.FirstArgs$shuffle})($oq),[],{Return$Callable:$$$mptypes.Result$shuffle,Arguments$Callable:$$$mptypes.SecondArgs$shuffle}),{Return$unflatten:$$$mptypes.Result$shuffle,Args$unflatten:$$$mptypes.SecondArgs$shuffle})($op);}),[{$nm:'firstArgs',$mt:'prm',$t:'FirstArgs$shuffle',$an:function(){return[];}}],{Return$Callable:$$$mptypes.Result$shuffle,Arguments$Callable:{t:'T',l:[$$$mptypes.FirstArgs$shuffle]}}),{Args$flatten:$$$mptypes.FirstArgs$shuffle,Return$flatten:$$$mptypes.Result$shuffle});}),[{$nm:'secondArgs',$mt:'prm',$t:'SecondArgs$shuffle',$an:function(){return[];}}],{Return$Callable:{t:Callable,a:{Return$Callable:$$$mptypes.Result$shuffle,Arguments$Callable:$$$mptypes.FirstArgs$shuffle}},Arguments$Callable:{t:'T',l:[$$$mptypes.SecondArgs$shuffle]}}),{Args$flatten:$$$mptypes.SecondArgs$shuffle,Return$flatten:{t:Callable,a:{Return$Callable:$$$mptypes.Result$shuffle,Arguments$Callable:$$$mptypes.FirstArgs$shuffle}}});};shuffle.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Callable,a:{Return$Callable:{t:Callable,a:{Return$Callable:'Result$shuffle',Arguments$Callable:'FirstArgs$shuffle'}},Arguments$Callable:'SecondArgs$shuffle'}},$ps:[{$nm:'f',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:Callable,a:{Return$Callable:'Result$shuffle',Arguments$Callable:'SecondArgs$shuffle'}},Arguments$Callable:'FirstArgs$shuffle'}},$an:function(){return[];}}],$tp:{Result$shuffle:{},FirstArgs$shuffle:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]},SecondArgs$shuffle:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].shuffle.$an.doc[0]),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),curry)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','shuffle']};};
exports.shuffle=shuffle;var plus=function ($or,$os,$$$mptypes){return $or.plus($os);};plus.$crtmm$=function(){return{mod:$CCMM$,$t:'Value$plus',$ps:[{$nm:'x',$mt:'prm',$t:'Value$plus',$an:function(){return[];}},{$nm:'y',$mt:'prm',$t:'Value$plus',$an:function(){return[];}}],$tp:{Value$plus:{'satisfies':[{t:Summable,a:{Other$Summable:'Value$plus'}}]}},$an:function(){return[doc("Add the given `Summable` values."),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),times),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),sum)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','plus']};};
exports.plus=plus;var times=function ($ot,$ou,$$$mptypes){return $ot.times($ou);};times.$crtmm$=function(){return{mod:$CCMM$,$t:'Value$times',$ps:[{$nm:'x',$mt:'prm',$t:'Value$times',$an:function(){return[];}},{$nm:'y',$mt:'prm',$t:'Value$times',$an:function(){return[];}}],$tp:{Value$times:{'satisfies':[{t:Numeric,a:{Other$Numeric:'Value$times'}}]}},$an:function(){return[doc("Multiply the given `Numeric` values."),see([$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),plus),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),product)].reifyCeylonType({Element$Iterable:{t:FunctionDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','times']};};
exports.times=times;var sort=function ($ov,$$$mptypes){return internalSort($JsCallable(byIncreasing($JsCallable((function ($ow){return $ow;}),[{$nm:'e',$mt:'prm',$t:'Element$sort',$an:function(){return[];}}],{Return$Callable:$$$mptypes.Element$sort,Arguments$Callable:{t:'T',l:[$$$mptypes.Element$sort]}}),{Element$byIncreasing:$$$mptypes.Element$sort,Value$byIncreasing:$$$mptypes.Element$sort}),[{$nm:'p2',$mt:'prm',$t:'Element$sort'},{$nm:'p3',$mt:'prm',$t:'Element$sort'}],{Return$Callable:{t:Comparison},Arguments$Callable:{t:'T',l:[$$$mptypes.Element$sort,$$$mptypes.Element$sort]}}),$ov,{Element$internalSort:$$$mptypes.Element$sort});};sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Element$sort'}},$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:'Element$sort',Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$tp:{Element$sort:{'satisfies':[{t:Comparable,a:{Other$Comparable:'Element$sort'}}]}},$an:function(){return[doc($CCMM$['ceylon.language'].sort.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Comparable)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','sort']};};
exports.sort=sort;function Array$(elems,$$targs$$) {
var e=[];
if (!(elems === null || elems === undefined)) {
var iter=elems.iterator();
var item;while((item=iter.next())!==getFinished()) {
e.push(item);
}
}
e.$$targs$$=$$targs$$;
List({Element$List:$$targs$$.Element$Array}, e);
return e;
}
Array$.$crtmm$={$ps:[{$nm:'elements',$mt:'prm',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$Array'}}}],$an:function(){return[shared(),$final(),$native()];},mod:$CCMM$,d:['ceylon.language','Array'],
'super':{t:Object$}, $tp:{Element$Array:{}}, satisfies:[{t:List,a:{Element$List:'Element$Array'}},
{t:Ranged,a:{Index$Ranged:{t:Integer},Span$Ranged:{t:Array$,a:{Element$Array:'Element$Array'}}}}]};
initExistingType(Array$, Array, 'ceylon.language::Array', Object$,
Ranged, $init$List());
var Array$proto = Array.prototype;
var origArrToString = Array$proto.toString;
inheritProto(Array$, Object$, Ranged, $init$List());
Array$proto.toString = origArrToString;
Array$proto.reifyCeylonType = function(typeParameters) {
this.$$targs$$ = typeParameters;
return this;
}
exports.$Array=Array$;
function ArraySequence(/* js array */value, $$targs$$) {
if (value.length===0)return getEmpty();
value.$seq = true;
var t=$$targs$$.Element$Iterable;
if (t===undefined)t=$$targs$$.Element$ArraySequence;
if (t===undefined)t=$$targs$$.Element$Array;
if (t===undefined)t=$$targs$$.Element$Sequence;
if (t===undefined)t=$$targs$$.Element$Sequential;
if (t===undefined)t=$$targs$$.Element$List;
if (t===undefined)throw new Error("Invalid type arguments for ArraySequence: "+/*require('util').inspect(*/$$targs$$);
value.$$targs$$={Element$Iterable:t, Element$ArraySequence:t, Element$Sequence:t, Element$Sequential:t, Element$List:t, Element$Collection:t, Item$Correspondence:t, Key$Correspondence:{t:Integer},Absent$Iterable:{t:Nothing}, Element$Array:t};
return value;
}
ArraySequence.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language','ArraySequence'],$ps:[{$nm:'elements',$t:{t:Sequence,a:{Element$Sequence:'Element$ArraySequence'}}}],$tp:{Element$ArraySequence:{'var':'out'}},satisfies:[{t:Sequence,a:{Element$Sequence:'Element$ArraySequence'}}]};};
initTypeProto(ArraySequence, 'ceylon.language::ArraySequence', $init$Basic(), $init$Sequence());
Array$proto.getT$name = function() {
return (this.$seq ? ArraySequence : Array$).$$.T$name;
}
Array$proto.getT$all = function() {
return (this.$seq ? ArraySequence : Array$).$$.T$all;
}
$defat(Array$proto, 'size', function(){ return this.length; },undefined,function(){return{mod:$CCMM$,d:['ceylon.language','Iterable','$at','size'],$cont:Array$proto,$t:{t:Integer}};});
$defat(Array$proto,'string',function(){
return (opt$181=(this.empty?String$("[]",2):null),opt$181!==null?opt$181:StringBuilder().appendAll([String$("[",1),commaList(this).string,String$("]",1)]).string);
},undefined,function(){return{mod:$CCMM$,d:['ceylon.language','Object','$at','string'],$t:{t:String},$cont:Array$proto};});
Array$proto.set = function(idx,elem) {
if (idx >= 0 && idx < this.length) {
this[idx] = elem;
}
}
Array$proto.set.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language','Array','$m','set'],$t:{t:Anything},$ps:[{$nm:'index',$t:{t:Integer},$mt:'prm'},{$nm:'element',$mt:'prm',$t:'Element$Array'}]};}
Array$proto.$get = function(idx) {
var result = this[idx];
return result!==undefined ? result:null;
}
Array$proto.$get.$crtmm$=function(){
return{mod:$CCMM$,d:['ceylon.language','List','$m','get'],$t:{t:'u',l:[{t:Null},'Element$Array']},$ps:[{$nm:'index',$t:{t:Integer},$mt:'prm'}]};
}
$defat(Array$proto, 'lastIndex', function() {
return this.length>0 ? (this.length-1) : null;
},undefined,function(){return{mod:$CCMM$,d:['ceylon.language','List','$at','lastIndex'],$t:{t:'u',l:[{t:Null},{t:Integer}]}};});
$defat(Array$proto, 'reversed', function() {
if (this.length === 0) { return this; }
var arr = this.slice(0);
arr.reverse();
return this.$seq ? ArraySequence(arr,this.$$targs$$||{Element$Iterable:{t:Anything}}) : arr.reifyCeylonType(this.$$targs$$);
},undefined,function(){return{mod:$CCMM$,d:['ceylon.language','List','$at','reversed'],$t:{t:List,a:{Element$List:'Element$Array'}}};});
Array$proto.chain = function(other, $$$mptypes) {
if (this.length === 0) { return other; }
return Iterable.$$.prototype.chain.call(this, other, $$$mptypes);
}
$defat(Array$proto, 'first', function(){ return this.length>0 ? this[0] : null; },
undefined,function(){return{mod:$CCMM$,d:['ceylon.language','Iterable','$at','first'],$t:{t:'u',l:[{t:Null},'Element$Array']}};});
$defat(Array$proto, 'last', function() { return this.length>0 ? this[this.length-1] : null; },
undefined,function(){return{mod:$CCMM$,d:['ceylon.language','List','$at','last'],$t:{t:'u',l:[{t:Null},'Element$Array']}};});
Array$proto.segment = function(from, len) {
if (len <= 0) { return getEmpty(); }
var stop = from + len;
var seq = this.slice((from>=0)?from:0, (stop>=0)?stop:0);
return (seq.length > 0) ? ArraySequence(seq,this.$$targs$$||{Element$Iterable:{t:Anything}}) : getEmpty();
}
Array$proto.span = function(from, to) {
if (from > to) {
var arr = this.segment(to, from-to+1);
arr.reverse();
return arr.reifyCeylonType(this.$$targs$$);
}
return this.segment(from, to-from+1);
}
Array$proto.spanTo = function(to) {
return to < 0 ? getEmpty() : this.span(0, to);
}
Array$proto.spanFrom = function(from) {
return this.span(from, 0x7fffffff);
}
$defat(Array$proto, 'rest', function() {
return this.length<=1 ? getEmpty() : ArraySequence(this.slice(1),this.$$targs$$||{Element$Iterable:{t:Anything}});
});
Array$proto.items = function(keys) {
if (keys === undefined) return getEmpty();
var seq = [];
for (var i = 0; i < keys.size; i++) {
var key = keys.$get(i);
seq.push(this.$get(key));
}
return ArraySequence(seq,this.$$targs$$||{Element$Iterable:{t:Anything}});
}
$defat(Array$proto, 'keys', function(){ return TypeCategory(this, {t:Integer}); });
Array$proto.contains = function(elem) {
for (var i=0; i<this.length; i++) {
if (elem.equals(this[i])) {
return true;
}
}
return false;
}
Array$proto.iterator = function() {
var $idx$=0;
var $arr$=this;
return new ComprehensionIterator(function() {
return ($idx$===$arr$.length) ? getFinished() : $arr$[$idx$++];
}, this.$$targs$$);
}
Array$proto.copyTo = function(other,srcpos,dstpos,length){
if(srcpos===undefined)srcpos=0;
if(length===undefined)length=this.size-srcpos;
if (length===0)return;
if(dstpos===undefined)dstpos=0;
var endpos=srcpos+length-1;
if (srcpos<0||srcpos>=this.size||length<1||dstpos+length>other.size||endpos>=this.size)throw Exception("Array index out of bounds");
if (other===this && dstpos>srcpos) {
dstpos+=length-1;
for (var i=endpos; i>=srcpos; i--) {
other[dstpos--]=this[i];
}
} else {
for (var i=srcpos;i<=endpos;i++) {
other[dstpos++]=this[i];
}
}
}
Array$proto.shorterThan = function(len) {
return this.size < len;
}
Array$proto.shorterThan.$crtmm$={mod:$CCMM$,d:['ceylon.language','Iterable','$m','shorterThan']};
Array$proto.longerThan = function(len) {
return this.size > len;
}
Array$proto.longerThan.$crtmm$={mod:$CCMM$,d:['ceylon.language','Iterable','$m','longerThan']};
exports.arrayOfSize=function(size, elem, $$$mptypes) {
if (size > 0) {
var elems = [];
for (var i = 0; i < size; i++) {
elems.push(elem);
}
elems.$$targs$$=$$$mptypes;
return elems;
} else return [];
}
exports.arrayOfSize.$crtmm$={$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language','arrayOfSize']};
function TypeCategory(seq, type) {
var that = new TypeCategory.$$;
that.type = type;
that.seq = seq;
return that;
}
initTypeProto(TypeCategory, 'ceylon.language::TypeCategory', $init$Basic(), Category);
var TypeCategory$proto = TypeCategory.$$.prototype;
TypeCategory$proto.contains = function(k) {
return $is(k, this.type) && this.seq.defines(k);
}
function SequenceBuilder($$targs$$,that) {
if(that===undefined)that=new SequenceBuilder.$$;
that.seq = [];
that.$$targs$$=$$targs$$;
return that;
}
SequenceBuilder.$crtmm$=function(){return{$ps:[],$an:function(){return[shared()];},
$tp:{Element$SequenceBuilder:{}}, mod:$CCMM$,d:['ceylon.language','SequenceBuilder']};}
initTypeProto(SequenceBuilder, 'ceylon.language::SequenceBuilder', $init$Basic());
var SequenceBuilder$proto = SequenceBuilder.$$.prototype;
$defat(SequenceBuilder$proto, 'sequence', function() {
return (this.seq.length > 0) ? ArraySequence(this.seq,{Element$Iterable:this.$$targs$$.Element$SequenceBuilder}) : getEmpty();
},undefined,function(){return{
$t:{t:Sequential,a:{Element$Sequential:'Element$SequenceBuilder'}},mod:$CCMM$,d:['ceylon.language','SequenceBuilder','$at','sequence']};});
SequenceBuilder$proto.append=function(e){
this.seq.push(e);
return this;
}
SequenceBuilder$proto.appendAll = function(/*Iterable*/arr) {
if (arr === undefined) return;
var iter = arr.iterator();
var e; while ((e = iter.next()) !== getFinished()) {
this.seq.push(e);
}
return this;
}
$defat(SequenceBuilder$proto, 'size', function(){ return this.seq.length; },undefined,function(){return{
$t:{t:Integer},mod:$CCMM$,d:['ceylon.language','SequenceBuilder','$at','size']
};});
$defat(SequenceBuilder$proto, 'empty', function() { return this.seq.length===0 },function(){return{
$t:{t:Boolean$},mod:$CCMM$,d:['ceylon.language','SequenceBuilder','$at','empty']
};});
function SequenceAppender(other, $$targs$$,that) {
if (that===undefined)that=new SequenceAppender.$$;
SequenceBuilder({Element$SequenceBuilder:$$targs$$.Element$SequenceAppender},that);
that.appendAll(other);
return that;
}
SequenceAppender.$crtmm$=function(){return{$ps:[{$nm:'elements',$t:{t:Sequence,a:{Element$Sequence:'Element$SequenceAppender'}},$mt:'prm'}],$an:function(){return[shared()];},
'super':{t:SequenceBuilder,a:{Element$SequenceBuilder:'Element$SequenceAppender'}},$tp:{Element$SequenceAppender:{}},mod:$CCMM$,d:['ceylon.language','SequenceAppender']};}
initTypeProto(SequenceAppender, 'ceylon.language::SequenceAppender', SequenceBuilder);
exports.Sequence=Sequence;
exports.SequenceBuilder=SequenceBuilder;
exports.SequenceAppender=SequenceAppender;
exports.ArraySequence=ArraySequence;
function $sarg(elems,spread,$$targs$$){
$init$sarg();
that=new $sarg.$$;
set_type_args(that,$$targs$$);
Iterable($$targs$$,that);
that.e=elems;
that.s=spread;
return that;
}
$sarg.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$tp:{T$LazyIterable:{'var':'out'}},satisfies:[{t:Iterable,a:{Element$Iterable:'T$LazyIterable',Absent$Iterable:{t:Null}}}],$an:function(){return[shared()];},d:['$','LazyIterable']};};
exports.$sarg=$sarg;
function $init$sarg(){if($sarg.$$===undefined){
initTypeProto($sarg,'ceylon.language::LazyIterable',Basic,Iterable);
(function(that){
that.iterator=function (){
var sarg=this;
function iter($$targs$$){
var $$4=new iter.$$;
$$4.$$outer=sarg;
$$4.$$targs$$=$$targs$$;
Iterator({Element$Iterator:sarg.$$targs$$.T$LazyIterable},$$4);
$$4.i=0;
return $$4;
};iter.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$cont:iterator,satisfies:[{t:Iterator,a:{Element$Iterator:'T$LazyIterable'}}],d:['$','LazyIterable','$m','iterator','$o','it']};};
if(iter.$$===undefined){
initTypeProto(iter,'LazyIterable.it',Basic,Iterator);
iter.$$.prototype.next=function(){
if (this.sp)return this.sp.next();
var e=sarg.e(this.i);
if (e===getFinished() && sarg.s) {
this.sp=sarg.s().iterator();
e=this.sp.next();
} else {
this.i++;
}
return e;
};
iter.$$.prototype.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:['T$LazyIterable',{t:Finished}]},$ps:[],$cont:iter,$an:function(){return[shared(),actual()];},d:['$','LazyIterable','$m','iterator','$o','it','$m','next']};};
}
return iter({Element$Iterator:sarg.$$targs$$.T$LazyIterable});
};
that.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:'T$LazyIterable'}},$ps:[],$cont:$sarg,$an:function(){return[shared(),actual()];},d:['$','LazyIterable','$m','iterator']};};
})($sarg.$$.prototype);
}
return $sarg;
}
$init$sarg();
exports.$init$sarg=$init$sarg;
$init$sarg();
function String$(/*{Character*}*/value,size) {
if (value && value.getT$name && value.getT$name() == 'ceylon.language::String') {
return value;
}
else if (typeof(value) === 'string') {
var that = new String(value);
that.codePoints = size;
return that;
}
var _sb = StringBuilder();
var _iter = value.iterator();
var _c; while ((_c = _iter.next()) !== getFinished()) {
_sb.appendCharacter(_c);
}
var that = _sb.string;
if (size !== undefined) that.codePoints=size;
return that;
}
String$.$crtmm$=function(){return{'super':{t:Object$},
$ps:[{$nm:'characters',$t:{t:Iterable,a:{Element$Iterable:{t:Character},Absent$Iterable:{t:Null}}},$mt:'prm'}],
'satisfies':[{t:List,a:{Element$List:{t:Character}}}, {t:Comparable,a:{Other$Comparable:{t:String$}}},
{t:Summable,a:{Other$Summable:{t:String$}}}, {t:Ranged,a:{Index$Ranged:{t:Integer},Span$Ranged:{t:String$}}}],
$an:function(){return[shared(),$native(),$final()];},
mod:$CCMM$,d:['$','String']};};
initExistingType(String$, String, 'ceylon.language::String', Object$, Sequential, Comparable,
Ranged, Summable);
var origStrToString = String.prototype.toString;
inheritProto(String$, Object$, Sequential, Comparable, Ranged, Summable);
var String$proto = String$.$$.prototype;
String$proto.$$targs$$={Element$Iterable:{t:Character}, Absent$Iterable:{t:Null}};
String$proto.getT$name = function() {
return String$.$$.T$name;
}
String$proto.getT$all = function() {
return String$.$$.T$all;
}
String$proto.toString = origStrToString;
$defat(String$proto, 'string', function(){ return this; },undefined,function(){return{mod:$CCMM$,
$t:{t:String$},d:['$','Object','$at','string']}});
String$proto.plus = function(other) {
var size = this.codePoints + other.codePoints;
return String$(this+other, isNaN(size)?undefined:size);
}
String$proto.plus.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','plus'],
$ps:[{$nm:'other',$t:{t:String$},$mt:'prm'}]};}
String$proto.equals = function(other) {
if (other.constructor===String) {
return other.valueOf()===this.valueOf();
} else if ($is(other, {t:Iterable, a:{Element$Iterable:{t:Character}}})) {
if (other.size===this.size) {
for (var i=0;i<this.size;i++) {
if (!this.$get(i).equals(other.$get(i))) return false;
}
return true;
}
}
return false;
}
String$proto.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},d:['$','String','$m','equals'],
$ps:[{$nm:'other',$t:{t:String$},$mt:'prm'}]};}
String$proto.compare = function(other) {
var cmp = this.localeCompare(other);
return cmp===0 ? equal : (cmp<0 ? smaller:larger);
}
String$proto.compare.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Comparison},d:['$','String','$m','compare'],
$ps:[{$nm:'other',$t:{t:String$}}]};}
$defat(String$proto, 'uppercased', function(){ return String$(this.toUpperCase()); },undefined,function(){return{
mod:$CCMM$,$t:{t:String$},d:['$','String','$at','uppercased']}});
$defat(String$proto, 'lowercased', function(){ return String$(this.toLowerCase()); },undefined,function(){return{
mod:$CCMM$,$t:{t:String$},d:['$','String','$at','lowercased']}});
$defat(String$proto, 'size', function() {
if (this.codePoints===undefined) {
this.codePoints = countCodepoints(this);
}
return this.codePoints;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','Iterable','$at','size']}});
$defat(String$proto, 'lastIndex', function(){ return this.size.equals(0) ? null : this.size.predecessor; },undefined,function(){return{
mod:$CCMM$,$t:{t:Integer},d:['$','List','$at','lastIndex']}});
String$proto.span = function(from, to) {
if (from > to) {
return this.segment(to, from-to+1).reversed;
}
return this.segment(from, to-from+1);
}
String$proto.span.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','span'],
$ps:[{$nm:'from',$t:{t:Integer}},{$nm:'to',$t:{t:Integer}}]};}
String$proto.spanFrom = function(from) {
return this.span(from, 0x7fffffff);
}
String$proto.spanFrom.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','spanFrom'],
$ps:[{$nm:'from',$t:{t:Integer}}]};}
String$proto.spanTo = function(to) {
return to < 0 ? String$('', 0) : this.span(0, to);
}
String$proto.spanTo.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','spanTo'],
$ps:[{$nm:'to',$t:{t:Integer}}]};}
String$proto.segment = function(from, len) {
var fromIndex = from;
var maxCount = len + fromIndex;
if (fromIndex < 0) {fromIndex = 0;}
var i1 = 0;
var count = 0;
for (; i1<this.length && count<fromIndex; ++i1, ++count) {
if ((this.charCodeAt(i1)&0xfc00) === 0xd800) {++i1}
}
var i2 = i1;
for (; i2<this.length && count<maxCount; ++i2, ++count) {
if ((this.charCodeAt(i2)&0xfc00) === 0xd800) {++i2}
}
if (i2 >= this.length) {
this.codePoints = count;
if (fromIndex === 0) {return this;}
}
return String$(this.substring(i1, i2), count-fromIndex);
}
String$proto.segment.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','segment'],
$ps:[{$nm:'from',$t:{t:Integer}},{$nm:'length',$t:{t:Integer}}]};}
$defat(String$proto, 'empty', function() {
return this.length===0;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},d:['$','Sequential','$at','empty']}});
String$proto.longerThan = function(length) {
if (this.codePoints!==undefined) {return this.codePoints>length}
if (this.length <= length) {return false}
if (this.length<<1 > length) {return true}
this.codePoints = countCodepoints(this);
return this.codePoints>length;
}
String$proto.longerThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},d:['$','String','$m','longerThan'],
$ps:[{$nm:'length',$t:{t:Integer}}]};}
String$proto.shorterThan = function(length) {
if (this.codePoints!==undefined) {return this.codePoints<length}
if (this.length < length) {return true}
if (this.length<<1 >= length) {return false}
this.codePoints = countCodepoints(this);
return this.codePoints<length;
}
String$proto.shorterThan.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},d:['$','String','$m','shorterThan'],
$ps:[{$nm:'length',$t:{t:Integer}}]};}
String$proto.iterator= function() {
return this.length === 0 ? getEmptyIterator() : StringIterator(this);
}
String$proto.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:Character}}},d:['$','String','$m','iterator']};}
String$proto.$get=function(index){
if (index<0 || index>=this.length) {return null;}
if (this._bumps===undefined)this._bumps=[];
var cnt=0;
var mb=0;
for (var i=0;i<this._bumps.length;i++) {
mb=this._bumps[i];
if (mb<index)cnt++;
}
if (index<=this._maxidx) {
index+=cnt;
return Character(codepointFromString(this, index));
}
if (this._maxidx>mb)mb=this._maxidx;
for (cnt=mb; cnt<index; cnt++) {
if ((this.charCodeAt(mb)&0xfc00) === 0xd800) {
this._bumps.push(mb);
++mb;
}
if (++mb >= this.length) {return null;}
}
if (this._maxidx===undefined || mb>this._maxidx)this._maxidx=mb;
return Character(codepointFromString(this, mb));
}
String$proto.$get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Character}]},d:['$','String','$m','get'],
$ps:[{$nm:'index',$t:{t:Integer}}]};}
$defat(String$proto, 'trimmed', function() {
var from = 0;
while (from<this.length && (this.charCodeAt(from) in $WS)) {++from}
var to = this.length;
if (from < to) {
do {--to} while (from<to && (this.charCodeAt(to) in $WS));
++to;
}
if (from===0 && to===this.length) {return this;}
var result = String$(this.substring(from, to));
if (this.codePoints !== undefined) {
result.codePoints = this.codePoints - from - this.length + to;
}
return result;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$at','trimmed']}});
String$proto.trim = function(/*Category*/chars) {
var from = 0;
while (from<this.length && chars(this.$get(from))) {++from}
var to = this.length;
if (from < to) {
do {--to} while (from<to && chars(this.$get(to)));
++to;
}
if (from===0 && to===this.length) {return this;}
var result = String$(this.substring(from, to));
if (this.codePoints !== undefined) {
result.codePoints = this.codePoints - from - this.length + to;
}
return result;
}
String$proto.trim.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','trim']};}
String$proto.trimLeading = function(/*Category*/chars) {
var from = 0;
while (from<this.length && chars(this.$get(from))) {++from}
if (from===0) {return this;}
var result = String$(this.substring(from, this.length));
if (this.codePoints !== undefined) {
result.codePoints = this.codePoints - from;
}
return result;
}
String$proto.trimLeading.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','trimLeading']};}
String$proto.trimTrailing = function(/*Category*/chars) {
var to = this.length;
if (to > 0) {
do {--to} while (to>=0 && chars(this.$get(to)));
++to;
}
if (to===this.length) {return this;}
else if (to===0) { return String$("",0); }
var result = String$(this.substring(0, to));
if (this.codePoints !== undefined) {
result.codePoints = this.codePoints - this.length + to;
}
return result;
}
String$proto.trimTrailing.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','trimTrailing']};}
String$proto.initial = function(length) {
if (length >= this.codePoints) {return this}
var count = 0;
var i = 0;
for (; i<this.length && count<length; ++i, ++count) {
if ((this.charCodeAt(i)&0xfc00) === 0xd800) {++i}
}
if (i >= this.length) {
this.codePoints = count;
return this;
}
return String$(this.substr(0, i), count);
}
String$proto.initial.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','initial'],
$ps:[{$nm:'length',$t:{t:Integer}}]};}
String$proto.terminal = function(length) {
if (length >= this.codePoints) {return this}
var count = 0;
var i = this.length;
for (; i>0 && count<length; ++count) {
if ((this.charCodeAt(--i)&0xfc00) === 0xdc00) {--i}
}
if (i <= 0) {
this.codePoints = count;
return this;
}
return String$(this.substr(i), count);
}
String$proto.terminal.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','terminal'],
$ps:[{$nm:'length',$t:{t:Integer}}]};}
$defat(String$proto, 'hash', function() {
if (this._hash === undefined) {
var h=0;
for (var i = 0; i < this.length; i++) {
var c = this.charCodeAt(i);
h=(31*h+c)&0xffffffff;
}
this._hash=h;
}
return this._hash;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$an:function(){return[shared(),actual()];},d:['$','Object','$at','hash']}});
function cmpSubString(str, subStr, offset) {
for (var i=0; i<subStr.length; ++i) {
if (str.charCodeAt(offset+i)!==subStr.charCodeAt(i)) {return false}
}
return true;
}
String$proto.startsWith = function(str) {
if (str.length > this.length) {return false}
return cmpSubString(this, str, 0);
}
String$proto.startsWith.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},d:['$','String','$m','startsWith'],
$ps:[{$nm:'string',$t:{t:String$}}]};}
String$proto.endsWith = function(str) {
var start = this.length - str.length
if (start < 0) {return false}
return cmpSubString(this, str, start);
}
String$proto.endsWith.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},d:['$','String','$m','endsWith'],
$ps:[{$nm:'string',$t:{t:String$}}]};}
String$proto.contains = function(sub) {
var str;
if (sub.constructor === String) {str = sub}
else if (sub.constructor !== Character.$$) {return false}
else {str = codepointToString(sub.value)}
return this.indexOf(str) >= 0;
}
String$proto.contains.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},d:['$','String','$m','contains'],
$ps:[{$nm:'substring',$t:{t:String$}}]};}
$defat(String$proto, 'normalized', function() {
var result = "";
var len = 0;
var first = true;
var i1 = 0;
while (i1 < this.length) {
while (this.charCodeAt(i1) in $WS) {
if (++i1 >= this.length) {return String$(result)}
}
var i2 = i1;
var cc = this.charCodeAt(i2);
do {
++i2;
if ((cc&0xfc00) === 0xd800) {++i2}
++len;
cc = this.charCodeAt(i2);
} while (i2<this.length && !(cc in $WS));
if (!first) {
result += " ";
++len;
}
first = false;
result += this.substring(i1, i2);
i1 = i2+1;
}
return String$(result, len);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$at','normalized']}});
String$proto.firstOccurrence = function(subc) {
for (var i=0, count=0; i<this.length; count++) {
var cp = this.charCodeAt(i++);
if (((cp&0xfc00) === 0xd800) && i<this.length) {
cp = (cp<<10) + this.charCodeAt(i++) - 0x35fdc00;
}
if (cp === subc.value) {return count;}
}
this.codePoints = count;
return null;
}
String$proto.firstOccurrence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},d:['$','String','$m','firstOccurrence']};}
String$proto.lastOccurrence = function(subc) {
for (var i=this.length-1, count=0; i>=0; count++) {
var cp = this.charCodeAt(i--);
if (((cp%0xfc00) === 0xdc00) && i>=0) {
cp = (this.charCodeAt(i--)<<10) + cp - 0x35fdc00;
}
if (cp === subc.value) {
if (this.codePoints === undefined) {this.codePoints = countCodepoints(this);}
return this.codePoints - count - 1;
}
}
this.codePoints = count;
return null;
}
String$proto.lastOccurrence.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},d:['$','String','$m','lastOccurrence']};}
$defat(String$proto, 'characters', function() {
return this.size>0 ? this:getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Character}}},d:['$','String','$at','characters']}});
$defat(String$proto, 'first', function() { return this.$get(0); },undefined,function(){return{
mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Character}]},d:['$','Iterable','$at','first']}});
$defat(String$proto, 'last', function(){ return this.size>0?this.$get(this.size.predecessor):null; },undefined,function(){return{
mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Character}]},d:['$','Iterable','$at','last']}});
$defat(String$proto, 'keys', function() {
return this.size > 0 ? Range(0, this.size.predecessor, {Element$Range:{t:Integer}}) : getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Category},d:['$','Category','$at','keys']}});
String$proto.join = function(strings) {
var it = strings.iterator();
var str = it.next();
if (str === getFinished()) {return String$("", 0);}
if (this.codePoints === undefined) {this.codePoints = countCodepoints(this)}
var result = str;
var len = str.codePoints;
while ((str = it.next()) !== getFinished()) {
result += this;
result += str;
len += this.codePoints + str.codePoints;
}
return String$(result, isNaN(len)?undefined:len);
}
String$proto.join.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','join'],
$ps:[{$nm:'strings',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:String$}}}}]};}
function isWhitespace(c) { return c.value in $WS; }
String$proto.$split = function(sep, discard, group) {
if (this.length === 0) {return Singleton(this, {Element$Singleton:{t:String$}}); }
if (sep === undefined) {sep = isWhitespace}
if (discard === undefined) {discard = true}
if (group === undefined) {group = true}
var tokens = [];
var tokenBegin = 0;
var tokenBeginCount = 0;
var count = 0;
var value = this;
var separator = true;
function pushToken(tokenEnd) {
tokens.push(String$(value.substring(tokenBegin, tokenEnd), count-tokenBeginCount));
}
if ($is(sep, {t:Iterable})) {
var sepChars = {}
var it = sep.iterator();
var c; while ((c=it.next()) !== getFinished()) {sepChars[c.value] = true}
for (var i=0; i<this.length;) {
var j = i;
var cp = this.charCodeAt(i++);
if ((cp&0xfc00)===0xd800 && i<this.length) {
cp = (cp<<10) + this.charCodeAt(i++) - 0x35fdc00;
}
if (cp in sepChars) {
if (!group) {
pushToken(j);
if (!discard) {
tokens.push(String$(this.substring(j, i), 1));
}
tokenBegin = i;
tokenBeginCount = count + 1;
} else if (!separator || (j == 0)) {
pushToken(j);
tokenBegin = j;
tokenBeginCount = count;
}
separator = true;
} else if (separator) {
if (!discard && (tokenBegin != j)) {
pushToken(j);
}
tokenBegin = j;
tokenBeginCount = count;
separator = false;
}
}
if (tokenBegin != i) {
pushToken(i);
}
} else {
for (var i=0; i<this.length; ++count) {
var j = i;
var cp = this.charCodeAt(i++);
if ((cp&0xfc00)===0xd800 && i<this.length) {
cp = (cp<<10) + this.charCodeAt(i++) - 0x35fdc00;
}
if (sep(Character(cp))) {
if (!group) {
pushToken(j);
if (!discard) {
tokens.push(String$(this.substring(j, i), 1));
}
tokenBegin = i;
tokenBeginCount = count + 1;
} else if (!separator || (j == 0)) {
pushToken(j);
tokenBegin = j;
tokenBeginCount = count;
}
separator = true;
} else if (separator) {
if (!discard && (tokenBegin != j)) {
pushToken(j);
}
tokenBegin = j;
tokenBeginCount = count;
separator = false;
}
}
if ((tokenBegin != i) && !(separator && discard)) {
pushToken(i);
}
if (separator) {
tokens.push(String$("", 0));
}
}
this.codePoints = count;
return tokens.reifyCeylonType({Absent$Iterable:{t:Null},Element$Iterable:{t:String$}});
}
String$proto.$split.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:String$}}},d:['$','String','$m','split']};}
$defat(String$proto, 'reversed', function() {
var result = "";
for (var i=this.length; i>0;) {
var cc = this.charCodeAt(--i);
if ((cc&0xfc00)!==0xdc00 || i===0) {
result += this.charAt(i);
} else {
result += this.substr(--i, 2);
}
}
return String$(result);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$at','reversed']}});
String$proto.$replace = function(sub, repl) {
if (this.indexOf(sub) < 0) {
return this;
}
var ns = this.replace(sub, repl);
while (ns.indexOf(sub) >= 0) {
ns = ns.replace(sub, repl);
}
return String$(ns);
}
String$proto.$replace.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','replace'],
$ps:[{$nm:'substring',$t:{t:String$}},{$nm:'replacement',$t:{t:String$}}]};}
String$proto.replaceFirst = function(sub, repl) {
return String$(this.replace(sub, repl));
}
String$proto.replaceFirst.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','replaceFirst'],
$ps:[{$nm:'substring',$t:{t:String$}},{$nm:'replacement',$t:{t:String$}}]};}
String$proto.repeat = function(times) {
var sb = StringBuilder();
for (var i = 0; i < times; i++) {
sb.append(this);
}
return sb.string;
}
String$proto.repeat.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','repeat'],
$ps:[{$nm:'times',$t:{t:Integer}}]};}
function isNewline(c) { return c.value===10; }
$defat(String$proto, 'lines', function() {
return this.$split(isNewline, true);
},undefined,function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:String$}}},d:['$','String','$at','lines']}});
String$proto.occurrences = function(sub) {
if (sub.length == 0) {return 0}
var ocs = [];
var bound = this.length - sub.length;
for (var i=0, count=0; i<=bound; ++count) {
if (cmpSubString(this, sub, i)) {
ocs.push(count);
i+=sub.length;
} else if ((this.charCodeAt(i++)&0xfc00) === 0xd800) {++i;}
}
return ocs.length > 0 ? ocs : getEmpty();
}
String$proto.occurrences.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Integer}}},d:['$','List','$m','occurrences']};}
String$proto.$filter = function(f) {
var r = Iterable.$$.prototype.$filter.call(this, f);
return String$(r);
}
String$proto.following=function(o,$mpt) {
return Iterable.$$.prototype.following.call(this,o,$mpt);
}
String$proto.$filter.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','filter']};}
String$proto.skipping = function(skip) {
if (skip==0) return this;
return this.segment(skip, this.size);
}
String$proto.skipping.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','skipping'],
$ps:[{$nm:'skip',$t:{t:Integer}}]};}
String$proto.taking = function(take) {
if (take==0) return getEmpty();
return this.segment(0, take);
}
String$proto.taking.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','taking'],
$ps:[{$nm:'take',$t:{t:Integer}}]};}
String$proto.by = function(step) {
var r = Iterable.$$.prototype.by.call(this, step);
return String$(r);
}
String$proto.by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','by'],
$ps:[{$nm:'step',$t:{t:Integer}}]};}
String$proto.$sort = function(f) {
var r = Iterable.$$.prototype.$sort.call(this, f);
return String$(r);
}
String$proto.$sort.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},d:['$','String','$m','sort']};}
$defat(String$proto, 'coalesced', function(){ return this; },undefined,function(){return{
mod:$CCMM$,$t:{t:String$},d:['$','String','$at','coalesced']}});
String$proto.$slice=function(idx) {
var s1 = idx>0 ? this.segment(0,idx) : String$('',0);
if (idx<0)idx=0;
var s2 = idx<this.size ? this.segment(idx,this.size) : String$('',0);
return Tuple(s1, Tuple(s2, getEmpty(), {Element$Tuple:{t:String$},First$Tuple:{t:String$},Rest$Tuple:{t:Empty}}),
{Element$Tuple:{t:String$}, First$Tuple:{t:String$}, Rest$Tuple:{t:Tuple,a:{Element$Tuple:{t:String$},First$Tuple:{t:String$},Rest$Tuple:{t:Empty}}}});
}
String$proto.$slice.$crtmm$=function(){return{mod:$CCMM$,d:['$','String','$m','slice'],
$t:{t:Tuple,a:{Element$Tuple:{t:String$}, First$Tuple:{t:String$}, Rest$Tuple:{t:Tuple,a:{Element$Tuple:{t:String$},First$Tuple:{t:String$},Rest$Tuple:{t:Empty}}}}}};}
function StringIterator(string) {
var that = new StringIterator.$$;
that.str = string;
that.index = 0;
return that;
}
StringIterator.$crtmm$=function(){return{$nm:'StringIterator',$mt:'c',$ps:[{$nm:'string',$t:{t:String$}}],$an:function(){return[shared()];},mod:$CCMM$,d:['$','Iterator']}};
initTypeProto(StringIterator, 'ceylon.language::StringIterator', $init$Basic(), Iterator);
var StringIterator$proto = StringIterator.$$.prototype;
StringIterator$proto.$$targs$$={Element$Iterator:{t:Character}, Absent$Iterator:{t:Null}};
StringIterator$proto.next = function() {
if (this.index >= this.str.length) { return getFinished(); }
var first = this.str.charCodeAt(this.index++);
if ((first&0xfc00) !== 0xd800 || this.index >= this.str.length) {
return Character(first);
}
return Character((first<<10) + this.str.charCodeAt(this.index++) - 0x35fdc00);
}
function countCodepoints(str) {
var count = 0;
for (var i=0; i<str.length; ++i) {
++count;
if ((str.charCodeAt(i)&0xfc00) === 0xd800) {++i}
}
return count;
}
function codepointToString(cp) {
if (cp <= 0xffff) {
return String.fromCharCode(cp);
}
return String.fromCharCode((cp>>10)+0xd7c0, (cp&0x3ff)+0xdc00);
}
function codepointFromString(str, index) {
var first = str.charCodeAt(index);
if ((first&0xfc00) !== 0xd800) {return first}
var second = str.charCodeAt(index+1);
return isNaN(second) ? first : ((first<<10) + second - 0x35fdc00);
}
exports.codepointFromString=codepointFromString;
var _cacheChr={};
function Character(value,cache) {
if (cache) {
var that = _cacheChr[value];
if (that === undefined) {
that = new Character.$$;
that.value = value;
_cacheChr[value] = that;
}
return that;
}
if (value && value.getT$name && value.getT$name() === 'ceylon.language::Character') {
return value;
}
var that = new Character.$$;
that.value = value;
return that;
}
Character.$crtmm$=function(){return{'super':{t:Object$}, 'satisfies':[
{t:Comparable,a:{Other:{t:Character}}}, {t:Enumerable,a:{Other:{t:Character}}}],
$an:function(){return[shared(),$native(),$final()];},mod:$CCMM$,d:['$','Character']};}
initTypeProto(Character, 'ceylon.language::Character', Object$, Comparable, $init$Enumerable());
var Character$proto = Character.$$.prototype;
$defat(Character$proto, 'string', function(){
if (this._str===undefined) {
this._str=String$(codepointToString(this.value));
}
return this._str;
},undefined,function(){return{
mod:$CCMM$,$t:{t:String$},d:['$','Character','$at','string']}});
Character$proto.equals = function(other) {
return other.constructor===Character.$$ && other.value===this.value;
}
$defat(Character$proto, 'hash', function(){ return this.value; },undefined,function(){return{
mod:$CCMM$,$t:{t:Integer},d:['$','Character','$at','hash']}});
Character$proto.compare = function(other) {
return this.value===other.value ? equal
: (this.value<other.value ? smaller:larger);
}
$defat(Character$proto, 'uppercased', function() {
var ucstr = codepointToString(this.value).toUpperCase();
return Character(codepointFromString(ucstr, 0));
},undefined,function(){return{mod:$CCMM$,$t:{t:Character},d:['$','Character','$at','uppercased']}});
$defat(Character$proto, 'lowercased', function() {
var lcstr = codepointToString(this.value).toLowerCase();
return Character(codepointFromString(lcstr, 0));
},undefined,function(){return{mod:$CCMM$,$t:{t:Character},d:['$','Character','$at','lowercased']}});
$defat(Character$proto, 'titlecased', function() {
var tc = $toTitlecase[this.value];
return tc===undefined ? this.uppercased : Character(tc);
},undefined,function(){return{mod:$CCMM$,$t:{t:Character},d:['$','Character','$at','titlecased']}});
var $WS={0x9:true, 0xa:true, 0xb:true, 0xc:true, 0xd:true, 0x20:true, 0x85:true,
0x1680:true, 0x180e:true, 0x2028:true, 0x2029:true, 0x205f:true, 0x3000:true,
0x1c:true, 0x1d:true, 0x1e:true, 0x1f:true};
for (var i=0x2000; i<0x2007; i++) { $WS[i]=true; }
for (var i=0x2008; i<=0x200a; i++) { $WS[i]=true; }
var $digit={0x30:true, 0x660:true, 0x6f0:true, 0x7c0:true, 0x966:true, 0x9e6:true, 0xa66:true,
0xae6:true, 0xb66:true, 0xbe6:true, 0xc66:true, 0xce6:true, 0xd66:true, 0xe50:true,
0xed0:true, 0xf20:true, 0x1040:true, 0x1090:true, 0x17e0:true, 0x1810:true, 0x1946:true,
0x19d0:true, 0x1a80:true, 0x1a90:true, 0x1b50:true, 0x1bb0:true, 0x1c40:true, 0x1c50:true,
0xa620:true, 0xa8d0:true, 0xa900:true, 0xa9d0:true, 0xaa50:true, 0xabf0:true, 0xff10:true,
0x104a0:true, 0x11066:true, 0x110f0:true, 0x11136:true, 0x111d0:true, 0x116c0:true}
var $titlecase={
0x1c5: [0x1c4, 0x1c6], 0x1c8: [0x1c7, 0x1c9], 0x1cb: [0x1ca, 0x1cc], 0x1f2: [0x1f1, 0x1f3],
0x1f88: [undefined, 0x1f80], 0x1f89: [undefined, 0x1f81], 0x1f8a: [undefined, 0x1f82],
0x1f8b: [undefined, 0x1f83], 0x1f8c: [undefined, 0x1f84], 0x1f8d: [undefined, 0x1f85],
0x1f8e: [undefined, 0x1f86], 0x1f8f: [undefined, 0x1f87], 0x1f98: [undefined, 0x1f90],
0x1f99: [undefined, 0x1f91], 0x1f9a: [undefined, 0x1f92], 0x1f9b: [undefined, 0x1f93],
0x1f9c: [undefined, 0x1f94], 0x1f9d: [undefined, 0x1f95], 0x1f9e: [undefined, 0x1f96],
0x1f9f: [undefined, 0x1f97], 0x1fa8: [undefined, 0x1fa0], 0x1fa9: [undefined, 0x1fa1],
0x1faa: [undefined, 0x1fa2], 0x1fab: [undefined, 0x1fa3], 0x1fac: [undefined, 0x1fa4],
0x1fad: [undefined, 0x1fa5], 0x1fae: [undefined, 0x1fa6], 0x1faf: [undefined, 0x1fa7],
0x1fbc: [undefined, 0x1fb3], 0x1fcc: [undefined, 0x1fc3], 0x1ffc: [undefined, 0x1ff3]
}
var $toTitlecase={
0x1c6:0x1c5, 0x1c7:0x1c8, 0x1ca:0x1cb, 0x1f1:0x1f2,
0x1c4:0x1c5, 0x1c9:0x1c8, 0x1cc:0x1cb, 0x1f3:0x1f2, 0x1f80:0x1f88, 0x1f81:0x1f89, 0x1f82:0x1f8a,
0x1f83:0x1f8b, 0x1f84:0x1f8c, 0x1f85:0x1f8d, 0x1f86:0x1f8e, 0x1f87:0x1f8f, 0x1f90:0x1f98,
0x1f91:0x1f99, 0x1f92:0x1f9a, 0x1f93:0x1f9b, 0x1f94:0x1f9c, 0x1f95:0x1f9d, 0x1f96:0x1f9e,
0x1f97:0x1f9f, 0x1fa0:0x1fa8, 0x1fa1:0x1fa9, 0x1fa2:0x1faa, 0x1fa3:0x1fab, 0x1fa4:0x1fac,
0x1fa5:0x1fad, 0x1fa6:0x1fae, 0x1fa7:0x1faf, 0x1fb3:0x1fbc, 0x1fc3:0x1fcc, 0x1ff3:0x1ffc
}
$defat(Character$proto, 'whitespace', function(){ return this.value in $WS; },undefined,function(){return{
mod:$CCMM$,$t:{t:Boolean$},d:['$','Character','$at','whitespace']}});
$defat(Character$proto, 'control', function(){ return this.value<32 || this.value===127; },undefined,function(){return{
mod:$CCMM$,$t:{t:Boolean$},d:['$','Character','$at','control']}});
$defat(Character$proto, 'digit', function() {
var check = this.value & 0xfffffff0;
if (check in $digit) {
return (this.value&0xf) <= 9;
}
if ((check|6) in $digit) {
return (this.value&0xf) >= 6;
}
return this.value>=0x1d7ce && this.value<=0x1d7ff;
},undefined,function(){return{
mod:$CCMM$,$t:{t:Boolean$},d:['$','Character','$at','digit']}});
$defat(Character$proto, 'integerValue', function(){ return this.value; },undefined,function(){return{
mod:$CCMM$,$t:{t:Integer},d:['$','Enumerable','$at','integerValue']}});
$defat(Character$proto, 'integer',function(){ return this.value; },undefined,function(){return{
mod:$CCMM$,$t:{t:Integer},d:['$','Character','$at','integer']}});
$defat(Character$proto, 'uppercase', function() {
var str = codepointToString(this.value);
return str.toLowerCase()!==str && !(this.value in $titlecase);
},undefined,function(){return{
mod:$CCMM$,$t:{t:Boolean$},d:['$','Character','$at','uppercase']}});
$defat(Character$proto, 'lowercase', function() {
var str = codepointToString(this.value);
return str.toUpperCase()!==str && !(this.value in $titlecase);
},undefined,function(){return{
mod:$CCMM$,$t:{t:Boolean$},d:['$','Character','$at','lowercase']}});
$defat(Character$proto, 'titlecase', function(){ return this.value in $titlecase; },undefined,function(){return{
mod:$CCMM$,$t:{t:Boolean$},d:['$','Character','$at','titlecase']}});
$defat(Character$proto, 'letter', function() {
var str = codepointToString(this.value);
return str.toUpperCase()!==str || str.toLowerCase()!==str || (this.value in $titlecase);
},undefined,function(){return{
mod:$CCMM$,$t:{t:Boolean$},d:['$','Character','$at','letter']}});
$defat(Character$proto, 'successor', function() {
var succ = this.value+1;
if ((succ&0xf800) === 0xd800) {return Character(0xe000)}
return Character((succ<=0x10ffff) ? succ:0);
},undefined,function(){return{mod:$CCMM$,$t:{t:Character},d:['$','Ordinal','$at','successor']}});
$defat(Character$proto, 'predecessor', function() {
var succ = this.value-1;
if ((succ&0xf800) === 0xd800) {return Character(0xd7ff)}
return Character((succ>=0) ? succ:0x10ffff);
},undefined,function(){return{mod:$CCMM$,$t:{t:Character},d:['$','Ordinal','$at','predecessor']}});
Character$proto.distanceFrom = function(other) {
return this.value - other.value;
}
function StringBuilder(/*String...*/comps) {
var that = new StringBuilder.$$;
if (comps === undefined){
that.value="";
} else if (comps.length===1){
that.value=comps[0];
} else {
that.value=String.prototype.concat.apply("",comps);
}
return that;
}
StringBuilder.$crtmm$=function(){return{'super':{t:Basic},$ps:[],
$an:function(){return[shared(),$native()];},mod:$CCMM$,d:['$','StringBuilder']};};
initTypeProto(StringBuilder, 'ceylon.language::StringBuilder', $init$Basic());
var StringBuilder$proto = StringBuilder.$$.prototype;
$defat(StringBuilder$proto, 'string', function(){ return String$(this.value, this.size); },undefined,function(){return{
mod:$CCMM$,$t:{t:String$},d:['$','StringBuilder','$at','string'],$cont:StringBuilder}});
StringBuilder$proto.append = function(s) {
this.value = this.value.concat(s);
return this;
}
StringBuilder$proto.append.$crtmm$=function(){return{mod:$CCMM$,d:['$','StringBuilder','$m','append'],
$t:{t:StringBuilder},$cont:StringBuilder,$ps:[{$nm:'string',$t:{t:String$},$mt:'prm'}]};};
StringBuilder$proto.appendAll = function(strings) {
var iter = strings.iterator();
var _s; while ((_s = iter.next()) !== getFinished()) {
this.append(_s||"null");
}
return this;
}
StringBuilder$proto.appendAll.$crtmm$=function(){return{mod:$CCMM$,d:['$','StringBuilder','$m','appendAll'],
$t:{t:StringBuilder},$ps:[{$nm:'strings',$t:{t:Iterable,a:{Element$Iterable:{t:String$},Absent$Iterable:{t:Null}}},$mt:'prm'}],$cont:StringBuilder
};};
StringBuilder$proto.appendCharacter=function(c){return this.append(c.string);}
StringBuilder$proto.appendCharacter.$crtmm$=function(){return{mod:$CCMM$,d:['$','StringBuilder','$m','appendCharacter'],
$cont:StringBuilder,$t:{t:StringBuilder},$ps:[{$nm:'character',$t:{t:Character},$mt:'prm'}]
};};
StringBuilder$proto.appendNewline=function(){return this.append("\n");}
StringBuilder$proto.appendNewline.$crtmm$=function(){return{mod:$$CCMM$,d:['$','StringBuilder','$m','appendNewline'],
$t:{t:StringBuilder},$ps:[],$cont:StringBuilder
};};
StringBuilder$proto.appendSpace=function(){return this.append(" ");}
StringBuilder$proto.appendSpace.$crtmm$=function(){return{mod:$$CCMM$,d:['$','StringBuilder','$m','appendSpace'],
$t:{t:StringBuilder},$ps:[],$cont:StringBuilder
};};
$defat(StringBuilder$proto, 'size', function() {
return countCodepoints(this.value);
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','StringBuilder','$at','size'],$cont:StringBuilder}});
StringBuilder$proto.reset = function() {
this.value = "";
return this;
}
StringBuilder$proto.reset.$crtmm$=function(){return{mod:$$CCMM$,d:['$','StringBuilder','$m','reset'],
$cont:StringBuilder,$t:{t:StringBuilder},$ps:[]};};
StringBuilder$proto.insert = function(pos, content) {
if (pos <= 0) {
this.value = content + this.value;
} else if (pos >= this.size) {
this.value = this.value + content;
} else {
this.value = this.value.slice(0, pos).concat(content,this.value.slice(pos));
}
return this;
}
StringBuilder$proto.insert.$crtmm$=function(){return{mod:$CCMM$,d:['$','StringBuilder','$m','insert'],
$cont:StringBuilder,$t:{t:StringBuilder},$ps:[{$nm:'pos',$t:{t:Integer},$mt:'prm'},{$nm:'content',$t:{t:String$},$mt:'prm'}]
};};
StringBuilder$proto.insertCharacter = function(pos, c) {
if (pos <= 0) {
this.value = c.string + this.value;
} else if (pos >= this.size) {
this.value = this.value + c.string;
} else {
this.value = this.value.slice(0, pos).concat(c.string,this.value.slice(pos));
}
return this;
}
StringBuilder$proto.insertCharacter.$crtmm$=function(){return{mod:$CCMM$,d:['$','StringBuilder','$m','insertCharacter'],
$cont:StringBuilder,$t:{t:StringBuilder},$ps:[{$nm:'pos',$t:{t:Integer},$mt:'prm'},{$nm:'character',$t:{t:Character},$mt:'prm'}]
};};
StringBuilder$proto.$delete = function(pos, count) {
if (pos < 0) pos=0; else if (pos>this.size) return this;
if (count > 0) {
this.value = this.value.slice(0, pos) + this.value.slice(pos+count);
}
return this;
}
StringBuilder$proto.$delete.$crtmm$=function(){return{mod:$CCMM$,d:['$','StringBuilder','$m','delete'],
$cont:StringBuilder,$t:{t:StringBuilder},$ps:[{$nm:'pos',$t:{t:Integer},$mt:'prm'},{$nm:'count',$t:{t:Integer},$mt:'prm'}]
};};
StringBuilder$proto.deleteInitial=function(c){
return this.$delete(0,c);
}
StringBuilder$proto.deleteInitial.$crtmm$=function(){return{mod:$CCMM$,d:['$','StringBuilder','$m','deleteInitial']};};
StringBuilder$proto.deleteTerminal=function(c){
return this.$delete(this.size-c,c);
}
StringBuilder$proto.deleteTerminal.$crtmm$=function(){return{mod:$CCMM$,d:['$','StringBuilder','$m','deleteTerminal']};};
exports.String=String$;
exports.Character=Character;
exports.StringBuilder=StringBuilder;
var $ox;function $valinit$$ox(){if($ox===undefined)$ox=(2);return $ox;};$valinit$$ox();function getMinRadix(){return $valinit$$ox();}

exports.getMinRadix=getMinRadix;var $prop$getMinRadix={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','minRadix']};}};exports.$prop$getMinRadix=$prop$getMinRadix;$prop$getMinRadix.get=getMinRadix;getMinRadix.$crtmm$=$prop$getMinRadix.$crtmm$;var $oy;function $valinit$$oy(){if($oy===undefined)$oy=(36);return $oy;};$valinit$$oy();function getMaxRadix(){return $valinit$$oy();}

exports.getMaxRadix=getMaxRadix;var $prop$getMaxRadix={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','maxRadix']};}};exports.$prop$getMaxRadix=$prop$getMaxRadix;$prop$getMaxRadix.get=getMaxRadix;getMaxRadix.$crtmm$=$prop$getMaxRadix.$crtmm$;function parseInteger($oz,$p0){if($p0===undefined){$p0=(10);}
//assert at parseInteger.ceylon (32:4-32:49)
if(!(($p0>=getMinRadix())&&($p0<=getMaxRadix()))) {throw wrapexc(AssertionError("Assertion failed: \'radix >= minRadix, radix <= maxRadix\' at parseInteger.ceylon (32:11-32:48)"),'32:4-32:49','parseInteger.ceylon'); }
var $p1=(0);function set$p1($p2){return $p1=$p2;};var $p3=getRuntime().minIntegerValue.divided($p0);var $p4;var $p5;if(($p5=$oz.$get($p1))!==null){if($p5.equals(Character(45,true))){$p4=true;($p6=$p1,$p1=$p6.successor,$p6);var $p6;}else {if($p5.equals(Character(43,true))){$p4=false;($p7=$p1,$p1=$p7.successor,$p7);var $p7;}else {$p4=false;}}}else {return null;}var $p8=($p9=($p4?getRuntime().minIntegerValue:null),$nn($p9)?$p9:(-getRuntime().maxIntegerValue));var $p9;var $pa=$oz.size;var $pb=(0);function set$pb($pc){return $pb=$pc;};var $pd=(-(1));function set$pd($pe){return $pd=$pe;};var $pf=(0);function set$pf($pg){return $pf=$pg;};var $ph=(-(1));function set$ph($pi){return $ph=$pi;};while(($p1<$pa)){var $pj;var $pk;if(($pk=$oz.$get($p1))!==null){$pj=$pk;}else {return null;}if($pj.equals(Character(95,true))){if(($pd==(-(1)))){var $pl;if(($pl=computeDigitGroupingSize($p0,$pf,$oz,$p1))!==null&&($pf<=$pl)){$ph=$pl;$pd=$pf;}else {return null;}}else {if(($pf.minus($pd)==$ph)){return null;}else {$pd=$pf;}}}else {if((!($pd==(-(1)))&&($pf.minus($pd)==$ph.plus((1))))){return null;}if(((($p1.plus((1))==$pa)&&($p0==(10)))&&"kMGTP".contains($pj))){var $pm;if(($pm=computeMagnitude($p0,$oz.$get(($pn=$p1,$p1=$pn.successor,$pn))))!==null){if(($p8.divided($pm)<$pb)){($pb=$pb.times($pm));break;}else {return null;}}else {return null;}var $pn;}else {var $po;if(($po=parseDigit($pj,$p0))!==null){if(($pb<$p3)){return null;}($pb=$pb.times($p0));if(($pb<$p8.plus($po))){return null;}($pb=$pb.minus($po));}else {return null;}}}($pp=$p1,$p1=$pp.successor,$pp);var $pp;($pq=$pf,$pf=$pq.successor,$pq);var $pq;}if((!($pd==(-(1)))&&!($pf.minus($pd)==$ph.plus((1))))){return null;}if(($pf==(0))){return null;}return ($pr=($p4?$pb:null),$nn($pr)?$pr:(-$pb));var $pr;}
exports.parseInteger=parseInteger;parseInteger.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'string',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'radix',$mt:'prm',$def:1,$t:{t:Integer},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].parseInteger.$an.doc[0]),$throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),AssertionError),"if `radix` is not between `minRadix` and `maxRadix`"),shared()];},d:['$','parseInteger']};};function computeDigitGroupingSize($ps,$pt,$pu,$pv){var $pw;if(($ps==(2))){$pw=(4);}else {if(($ps==(10))){$pw=(3);}else {if(($ps==(16))){var $px;if(($pt<=(2))&&($px=$pu.$get($pv.plus((3))))!==null&&$px.equals(Character(95,true))){$pw=(2);}else {$pw=(4);}}else {$pw=null;}}}return $pw;};computeDigitGroupingSize.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'radix',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'digitIndex',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'string',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'ii',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],d:['$','computeDigitGroupingSize']};};function computeMagnitude($py,$pz){var $q0;var $q1;if(($q1=$pz)!==null){if($q1.equals(Character(80,true))){$q0=(15);}else {if($q1.equals(Character(84,true))){$q0=(12);}else {if($q1.equals(Character(71,true))){$q0=(9);}else {if($q1.equals(Character(77,true))){$q0=(6);}else {if($q1.equals(Character(107,true))){$q0=(3);}else {$q0=null;}}}}}}else {$q0=null;}var $q2;if(($q2=$q0)!==null){return $py.power($q2);}return null;};computeMagnitude.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'radix',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'char',$mt:'prm',$t:{t:'u',l:[{t:Null},{t:Character}]},$an:function(){return[];}}],d:['$','computeMagnitude']};};var $q3;function $valinit$$q3(){if($q3===undefined)$q3=Character(97,true).integer;return $q3;};$valinit$$q3();function getAInt(){return $valinit$$q3();}

exports.getAInt=getAInt;var $prop$getAInt={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','aInt']};}};exports.$prop$getAInt=$prop$getAInt;$prop$getAInt.get=getAInt;getAInt.$crtmm$=$prop$getAInt.$crtmm$;var $q4;function $valinit$$q4(){if($q4===undefined)$q4=Character(48,true).integer;return $q4;};$valinit$$q4();function getZeroInt(){return $valinit$$q4();}

exports.getZeroInt=getZeroInt;var $prop$getZeroInt={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','zeroInt']};}};exports.$prop$getZeroInt=$prop$getZeroInt;$prop$getZeroInt.get=getZeroInt;getZeroInt.$crtmm$=$prop$getZeroInt.$crtmm$;function parseDigit($q5,$q6){var $q7;var $q8=$q5.integer;if(($q9=$q8.minus(getZeroInt()),$q9.compare((0))!==getSmaller()&&$q9.compare((10))===getSmaller())){$q7=$q8.minus(getZeroInt());}else {if(($qa=$q8.minus(getAInt()),$qa.compare((0))!==getSmaller()&&$qa.compare((26))===getSmaller())){$q7=$q8.minus(getAInt()).plus((10));}else {return null;}}return (($q7<$q6)?$q7:null);};parseDigit.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Integer}]},$ps:[{$nm:'digit',$mt:'prm',$t:{t:Character},$an:function(){return[];}},{$nm:'radix',$mt:'prm',$t:{t:Integer},$an:function(){return[];}}],d:['$','parseDigit']};};function formatInteger($qb,$qc){if($qc===undefined){$qc=(10);}
//assert at parseInteger.ceylon (198:4-198:49)
if(!(($qc>=getMinRadix())&&($qc<=getMaxRadix()))) {throw wrapexc(AssertionError("Assertion failed: \'radix >= minRadix, radix <= maxRadix\' at parseInteger.ceylon (198:11-198:48)"),'198:4-198:49','parseInteger.ceylon'); }
if(($qb==(0))){return "0";}var $qd=StringBuilder();var $qe;var $qf;function set$qf($qg){return $qf=$qg;};if(($qb<(0))){$qd.append("-");$qe=(1);$qf=$qb;}else {$qe=(0);$qf=(-$qb);}while(!($qf==(0))){var $qh=(-$qf.remainder($qc));var $qi;if(($qj=$qh,$qj.compare((0))!==getSmaller()&&$qj.compare((10))===getSmaller())){$qi=$qh.plus(getZeroInt()).character;}else {if(($qk=$qh,$qk.compare((10))!==getSmaller()&&$qk.compare((36))===getSmaller())){$qi=$qh.minus((10)).plus(getAInt()).character;}else {//assert at parseInteger.ceylon (223:12-223:26)
if(!(false)) {throw wrapexc(AssertionError("Assertion failed: \'false\' at parseInteger.ceylon (223:19-223:25)"),'223:12-223:26','parseInteger.ceylon'); }
}}$qd.insertCharacter($qe,$qi);$qf=$qf.plus($qh).divided($qc);}return $qd.string;}
exports.formatInteger=formatInteger;formatInteger.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},$ps:[{$nm:'integer',$mt:'prm',$t:{t:Integer},$an:function(){return[];}},{$nm:'radix',$mt:'prm',$def:1,$t:{t:Integer},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].formatInteger.$an.doc[0]),$throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),AssertionError),"if `radix` is not between `minRadix` and `maxRadix`"),shared()];},d:['$','formatInteger']};};function parseBoolean($ql){var $qm=$ql;if($qm.equals("true")) {return true;}else if($qm.equals("false")) {return false;}else {return null;}}
exports.parseBoolean=parseBoolean;parseBoolean.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:$Boolean}]},$ps:[{$nm:'string',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language'].parseBoolean.$an.doc[0]),shared()];},d:['$','parseBoolean']};};var and=function ($qn,$qo,$$$mptypes){return function($qp){{return ($qn($qp)&&$qo($qp));}}}
;and.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'p',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$Boolean},Arguments$Callable:{t:'T',l:[{$t:'T$and'}]}}},$an:function(){return[];}},{$nm:'q',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$Boolean},Arguments$Callable:{t:'T',l:[{$t:'T$and'}]}}},$an:function(){return[];}}],$tp:{T$and:{}},$an:function(){return[doc($CCMM$['ceylon.language'].and.$an.doc[0]),shared()];},d:['$','and']};};
exports.and=and;var or=function ($qq,$qr,$$$mptypes){return function($qs){{return ($qq($qs)||$qr($qs));}}}
;or.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'p',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$Boolean},Arguments$Callable:{t:'T',l:[{$t:'T$or'}]}}},$an:function(){return[];}},{$nm:'q',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$Boolean},Arguments$Callable:{t:'T',l:[{$t:'T$or'}]}}},$an:function(){return[];}}],$tp:{T$or:{}},$an:function(){return[doc($CCMM$['ceylon.language'].or.$an.doc[0]),shared()];},d:['$','or']};};
exports.or=or;var not=function ($qt,$$$mptypes){return function($qu){{return !$qt($qu);}}}
;not.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'p',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$Boolean},Arguments$Callable:{t:'T',l:[{$t:'T$not'}]}}},$an:function(){return[doc("The predicate function to negate")];}}],$tp:{T$not:{}},$an:function(){return[doc($CCMM$['ceylon.language'].not.$an.doc[0]),shared()];},d:['$','not']};};
exports.not=not;function xor($qv,$qw,$$$mptypes){return function($qx){if($qv($qx)){return !$qw($qx);}else {return $qw($qx);}}}
exports.xor=xor;xor.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'p',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$Boolean},Arguments$Callable:{t:'T',l:[{$t:'T$xor'}]}}},$an:function(){return[];}},{$nm:'q',$mt:'prm',$t:{t:Callable,a:{Return$Callable:{t:$Boolean},Arguments$Callable:{t:'T',l:[{$t:'T$xor'}]}}},$an:function(){return[];}}],$tp:{T$xor:{}},$an:function(){return[doc($CCMM$['ceylon.language'].xor.$an.doc[0]),shared()];},d:['$','xor']};};
function Annotated($annotated){}
Annotated.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc("A program element that can\nbe annotated."),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Annotation)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','Annotated']};};
exports.Annotated=Annotated;function $init$Annotated(){if(Annotated.$$===undefined){initTypeProtoI(Annotated,'ceylon.language::Annotated');
}
return Annotated;}
exports.$init$Annotated=$init$Annotated;$init$Annotated();function Annotation($annotation){}
Annotation.$crtmm$=function(){return{mod:$CCMM$,of:[{t:ConstrainedAnnotation,a:{ProgramElement$ConstrainedAnnotation:{t:Nothing},Value$ConstrainedAnnotation:{t:Annotation},Values$ConstrainedAnnotation:{t:Anything}}}],$an:function(){return[doc($CCMM$['ceylon.language'].Annotation.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),OptionalAnnotation),$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),SequencedAnnotation),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta'),annotations$meta),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta'),optionalAnnotation$meta),$init$OpenFunction()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta'),sequencedAnnotations$meta)].reifyCeylonType({Element$Iterable:{t:'u',l:[{t:InterfaceDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Absent$Iterable:{t:Null}})),shared()];},d:['$','Annotation']};};
exports.Annotation=Annotation;function $init$Annotation(){if(Annotation.$$===undefined){initTypeProtoI(Annotation,'ceylon.language::Annotation');
}
return Annotation;}
exports.$init$Annotation=$init$Annotation;$init$Annotation();function ConstrainedAnnotation($$targs$$,$constrainedAnnotation){Annotation($constrainedAnnotation);set_type_args($constrainedAnnotation,$$targs$$);}
ConstrainedAnnotation.$crtmm$=function(){return{mod:$CCMM$,$tp:{Value$ConstrainedAnnotation:{'var':'out','satisfies':[{t:Annotation}],'def':{t:Annotation}},Values$ConstrainedAnnotation:{'var':'out','def':{t:Anything}},ProgramElement$ConstrainedAnnotation:{'var':'in','satisfies':[{t:Annotated}],'def':{t:Nothing}}},satisfies:[{t:Annotation}],of:['Value$ConstrainedAnnotation'],$an:function(){return[doc($CCMM$['ceylon.language'].ConstrainedAnnotation.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Annotation)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','ConstrainedAnnotation']};};
exports.ConstrainedAnnotation=ConstrainedAnnotation;function $init$ConstrainedAnnotation(){if(ConstrainedAnnotation.$$===undefined){initTypeProtoI(ConstrainedAnnotation,'ceylon.language::ConstrainedAnnotation',$init$Annotation());
(function($constrainedAnnotation){$constrainedAnnotation.occurs=function ($qy){var $constrainedAnnotation=this;return $is($qy,$constrainedAnnotation.$$targs$$.ProgramElement$ConstrainedAnnotation);};$constrainedAnnotation.occurs.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'programElement',$mt:'prm',$t:{t:Annotated},$an:function(){return[];}}],$cont:ConstrainedAnnotation,$an:function(){return[doc("Can this annotation occur on the given program \nelement?"),shared()];},d:['$','ConstrainedAnnotation','$m','occurs']};};})(ConstrainedAnnotation.$$.prototype);}
return ConstrainedAnnotation;}
exports.$init$ConstrainedAnnotation=$init$ConstrainedAnnotation;$init$ConstrainedAnnotation();function OptionalAnnotation($$targs$$,$optionalAnnotation){ConstrainedAnnotation({ProgramElement$ConstrainedAnnotation:$$targs$$.ProgramElement$OptionalAnnotation,Value$ConstrainedAnnotation:$$targs$$.Value$OptionalAnnotation,Values$ConstrainedAnnotation:{t:'u',l:[{t:Null},$$targs$$.Value$OptionalAnnotation]}},$optionalAnnotation);set_type_args($optionalAnnotation,$$targs$$);}
OptionalAnnotation.$crtmm$=function(){return{mod:$CCMM$,$tp:{Value$OptionalAnnotation:{'var':'out','satisfies':[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:'ProgramElement$OptionalAnnotation',Value$OptionalAnnotation:'Value$OptionalAnnotation'}}]},ProgramElement$OptionalAnnotation:{'var':'in','satisfies':[{t:Annotated}],'def':{t:Annotated}}},satisfies:[{t:ConstrainedAnnotation,a:{ProgramElement$ConstrainedAnnotation:'ProgramElement$OptionalAnnotation',Value$ConstrainedAnnotation:'Value$OptionalAnnotation',Values$ConstrainedAnnotation:{t:'u',l:[{t:Null},'Value$OptionalAnnotation']}}}],of:['Value$OptionalAnnotation'],$an:function(){return[doc($CCMM$['ceylon.language'].OptionalAnnotation.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Annotation)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','OptionalAnnotation']};};
exports.OptionalAnnotation=OptionalAnnotation;function $init$OptionalAnnotation(){if(OptionalAnnotation.$$===undefined){initTypeProtoI(OptionalAnnotation,'ceylon.language::OptionalAnnotation',$init$ConstrainedAnnotation());
}
return OptionalAnnotation;}
exports.$init$OptionalAnnotation=$init$OptionalAnnotation;$init$OptionalAnnotation();function SequencedAnnotation($$targs$$,$sequencedAnnotation){ConstrainedAnnotation({ProgramElement$ConstrainedAnnotation:$$targs$$.ProgramElement$SequencedAnnotation,Value$ConstrainedAnnotation:$$targs$$.Value$SequencedAnnotation,Values$ConstrainedAnnotation:{t:Sequential,a:{Element$Sequential:$$targs$$.Value$SequencedAnnotation}}},$sequencedAnnotation);add_type_arg($sequencedAnnotation,'Values$ConstrainedAnnotation',{t:Sequential,a:{Element$Sequential:$sequencedAnnotation.$$targs$$.Value$SequencedAnnotation}});set_type_args($sequencedAnnotation,$$targs$$);}
SequencedAnnotation.$crtmm$=function(){return{mod:$CCMM$,$tp:{Value$SequencedAnnotation:{'var':'out','satisfies':[{t:SequencedAnnotation,a:{ProgramElement$SequencedAnnotation:'ProgramElement$SequencedAnnotation',Value$SequencedAnnotation:'Value$SequencedAnnotation'}}]},ProgramElement$SequencedAnnotation:{'var':'in','satisfies':[{t:Annotated}],'def':{t:Annotated}}},satisfies:[{t:ConstrainedAnnotation,a:{ProgramElement$ConstrainedAnnotation:'ProgramElement$SequencedAnnotation',Value$ConstrainedAnnotation:'Value$SequencedAnnotation',Values$ConstrainedAnnotation:{t:Sequential,a:{Element$Sequential:'Value$SequencedAnnotation'}}}}],of:['Value$SequencedAnnotation'],$an:function(){return[doc($CCMM$['ceylon.language'].SequencedAnnotation.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Annotation)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared()];},d:['$','SequencedAnnotation']};};
exports.SequencedAnnotation=SequencedAnnotation;function $init$SequencedAnnotation(){if(SequencedAnnotation.$$===undefined){initTypeProtoI(SequencedAnnotation,'ceylon.language::SequencedAnnotation',$init$ConstrainedAnnotation());
}
return SequencedAnnotation;}
exports.$init$SequencedAnnotation=$init$SequencedAnnotation;$init$SequencedAnnotation();
function optionalAnnotation$meta($qz,$r0,$$$mptypes){return annotations$meta($qz,$r0,{Value$annotations:$$$mptypes.Value$optionalAnnotation,Values$annotations:{t:'u',l:[{t:Null},$$$mptypes.Value$optionalAnnotation]},ProgramElement$annotations:$$$mptypes.ProgramElement$optionalAnnotation});}
exports.optionalAnnotation$meta=optionalAnnotation$meta;optionalAnnotation$meta.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Value$optionalAnnotation']},$ps:[{$nm:'annotationType',$mt:'prm',$t:{t:Class$meta$model,a:{Type$Class:{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:'ProgramElement$optionalAnnotation',Value$OptionalAnnotation:'Value$optionalAnnotation'}},Arguments$Class:{t:Nothing}}},$an:function(){return[];}},{$nm:'programElement',$mt:'prm',$t:'ProgramElement$optionalAnnotation',$an:function(){return[];}}],$tp:{Value$optionalAnnotation:{'satisfies':[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:'ProgramElement$optionalAnnotation',Value$OptionalAnnotation:'Value$optionalAnnotation'}}]},ProgramElement$optionalAnnotation:{'var':'in','satisfies':[{t:Annotated}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta'].optionalAnnotation.$an.doc[0]),shared()];},d:['ceylon.language.meta','optionalAnnotation']};};function sequencedAnnotations$meta($r1,$r2,$$$mptypes){return annotations$meta($r1,$r2,{Value$annotations:$$$mptypes.Value$sequencedAnnotations,Values$annotations:{t:Sequential,a:{Element$Sequential:$$$mptypes.Value$sequencedAnnotations}},ProgramElement$annotations:$$$mptypes.ProgramElement$sequencedAnnotations});}
exports.sequencedAnnotations$meta=sequencedAnnotations$meta;sequencedAnnotations$meta.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Value$sequencedAnnotations'}},$ps:[{$nm:'annotationType',$mt:'prm',$t:{t:Class$meta$model,a:{Type$Class:{t:SequencedAnnotation,a:{ProgramElement$SequencedAnnotation:'ProgramElement$sequencedAnnotations',Value$SequencedAnnotation:'Value$sequencedAnnotations'}},Arguments$Class:{t:Nothing}}},$an:function(){return[];}},{$nm:'programElement',$mt:'prm',$t:'ProgramElement$sequencedAnnotations',$an:function(){return[];}}],$tp:{Value$sequencedAnnotations:{'satisfies':[{t:SequencedAnnotation,a:{ProgramElement$SequencedAnnotation:'ProgramElement$sequencedAnnotations',Value$SequencedAnnotation:'Value$sequencedAnnotations'}}]},ProgramElement$sequencedAnnotations:{'var':'in','satisfies':[{t:Annotated}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta'].sequencedAnnotations.$an.doc[0]),shared()];},d:['ceylon.language.meta','sequencedAnnotations']};};function $r3$meta(){var $modules=new $r3$meta.$$;
$modules.$prop$getList={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Module$meta$declaration}}},$cont:$r3$meta,$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$at.list.$an.doc[0]),shared(),$native()];},d:['ceylon.language.meta','modules','$at','list']};}};$modules.$prop$getDefault={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Module$meta$declaration}]},$cont:$r3$meta,$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$at.default.$an.doc[0]),shared(),$native()];},d:['ceylon.language.meta','modules','$at','default']};}};return $modules;
};$r3$meta.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$an.doc[0]),shared(),$native()];},d:['ceylon.language.meta','modules']};};function $init$$r3$meta(){if($r3$meta.$$===undefined){initTypeProto($r3$meta,'ceylon.language.meta::modules',Basic);
(function($modules){})($r3$meta.$$.prototype);}
return $r3$meta;}
exports.$init$$r3$meta=$init$$r3$meta;$init$$r3$meta();var $r4$meta;function getModules$meta(){if($r4$meta===undefined){$r4$meta=$init$$r3$meta()();$r4$meta.$crtmm$=getModules$meta.$crtmm$;}
return $r4$meta;}
exports.getModules$meta=getModules$meta;getModules$meta.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$r3$meta},$an:function(){return[doc($CCMM$['ceylon.language.meta'].modules.$an.doc[0]),shared(),$native()];},d:['ceylon.language.meta','modules']};};$prop$getModules$meta={get:getModules$meta,$crtmm$:getModules$meta.$crtmm$};get$r3$meta=getModules$meta;$prop$get$r3$meta=getModules$meta;exports.$prop$getModules$meta=$prop$getModules$meta;
function ValueModel$meta$model($$targs$$,$valueModel){Model$meta$model($valueModel);set_type_args($valueModel,$$targs$$);}
ValueModel$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Get$ValueModel:{'var':'out','def':{t:Anything}},Set$ValueModel:{'var':'in','def':{t:Nothing}}},satisfies:[{t:Model$meta$model}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ValueModel.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','ValueModel']};};
exports.ValueModel$meta$model=ValueModel$meta$model;function $init$ValueModel$meta$model(){if(ValueModel$meta$model.$$===undefined){initTypeProtoI(ValueModel$meta$model,'ceylon.language.meta.model::ValueModel',$init$Model$meta$model());
(function($valueModel){$valueModel.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ValueDeclaration$meta$declaration},$cont:ValueModel$meta$model,$an:function(){return[doc("This value\'s declaration."),shared(),formal(),actual()];},d:['ceylon.language.meta.model','ValueModel','$at','declaration']};}};$valueModel.$prop$getType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Get$ValueModel'}},$cont:ValueModel$meta$model,$an:function(){return[doc("This value\'s closed type."),shared(),formal()];},d:['ceylon.language.meta.model','ValueModel','$at','type']};}};})(ValueModel$meta$model.$$.prototype);}
return ValueModel$meta$model;}
exports.$init$ValueModel$meta$model=$init$ValueModel$meta$model;$init$ValueModel$meta$model();function ClassOrInterface$meta$model($$targs$$,$classOrInterface){Model$meta$model($classOrInterface);Generic$meta$model($classOrInterface);Type$meta$model({Type$Type:$$targs$$.Type$ClassOrInterface},$classOrInterface);set_type_args($classOrInterface,$$targs$$);}
ClassOrInterface$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$ClassOrInterface:{'var':'out','def':{t:Anything}}},satisfies:[{t:Model$meta$model},{t:Generic$meta$model},{t:Type$meta$model,a:{Type$Type:'Type$ClassOrInterface'}}],of:[{t:ClassModel$meta$model,a:{Type$ClassModel:'Type$ClassOrInterface',Arguments$ClassModel:{t:Nothing}}},{t:InterfaceModel$meta$model,a:{Type$InterfaceModel:'Type$ClassOrInterface'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','ClassOrInterface']};};
exports.ClassOrInterface$meta$model=ClassOrInterface$meta$model;function $init$ClassOrInterface$meta$model(){if(ClassOrInterface$meta$model.$$===undefined){initTypeProtoI(ClassOrInterface$meta$model,'ceylon.language.meta.model::ClassOrInterface',$init$Model$meta$model(),$init$Generic$meta$model(),$init$Type$meta$model());
(function($classOrInterface){$classOrInterface.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassOrInterfaceDeclaration$meta$declaration},$cont:ClassOrInterface$meta$model,$an:function(){return[doc("The declaration for this class or interface."),shared(),formal(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','declaration']};}};$classOrInterface.$prop$getExtendedType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:ClassModel$meta$model,a:{Type$ClassModel:{t:Anything},Arguments$ClassModel:{t:Nothing}}}]},$cont:ClassOrInterface$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$at.extendedType.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','extendedType']};}};$classOrInterface.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:InterfaceModel$meta$model,a:{Type$InterfaceModel:{t:Anything}}}}},$cont:ClassOrInterface$meta$model,$an:function(){return[doc("The list of closed types that this class or interface satisfies."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','satisfiedTypes']};}};$classOrInterface.$prop$getCaseValues={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Type$ClassOrInterface'}},$cont:ClassOrInterface$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$at.caseValues.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','caseValues']};}};$classOrInterface.getClassOrInterface={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Member$meta$model,a:{Kind$Member:'Kind$getClassOrInterface',Container$Member:'Container$getClassOrInterface'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getClassOrInterface:{'def':{t:Nothing}},Kind$getClassOrInterface:{'satisfies':[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}],'def':{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}}},$an:function(){return[doc("Gets a member class or interface by name. Returns `null` if not found."),$throws("IncompatibleTypeException","If the specified `Container` or `Kind` type arguments are not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getClassOrInterface']};}};$classOrInterface.getDeclaredClassOrInterface={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Member$meta$model,a:{Kind$Member:'Kind$getDeclaredClassOrInterface',Container$Member:'Container$getDeclaredClassOrInterface'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredClassOrInterface:{'def':{t:Nothing}},Kind$getDeclaredClassOrInterface:{'satisfies':[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}],'def':{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}}},$an:function(){return[doc("Gets a member class or interface by name. Returns `null` if not found."),$throws("IncompatibleTypeException","If the specified `Container` or `Kind` type arguments are not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredClassOrInterface']};}};$classOrInterface.getClass={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:MemberClass$meta$model,a:{Container$MemberClass:'Container$getClass',Arguments$MemberClass:'Arguments$getClass',Type$MemberClass:'Type$getClass'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getClass:{'def':{t:Nothing}},Type$getClass:{'def':{t:Anything}},Arguments$getClass:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc("Gets a member class by name. Returns `null` if not found."),$throws("IncompatibleTypeException","If the specified `Container`, `Type` or `Arguments` type arguments are not compatible with the actual result, \nor if the corresponding member is not a `MemberClass`."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getClass']};}};$classOrInterface.getDeclaredClass={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:MemberClass$meta$model,a:{Container$MemberClass:'Container$getDeclaredClass',Arguments$MemberClass:'Arguments$getDeclaredClass',Type$MemberClass:'Type$getDeclaredClass'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredClass:{'def':{t:Nothing}},Type$getDeclaredClass:{'def':{t:Anything}},Arguments$getDeclaredClass:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc("Gets a member class by name. Returns `null` if not found."),$throws("IncompatibleTypeException","If the specified `Container`, `Type` or `Arguments` type arguments are not compatible with the actual result, \nor if the corresponding member is not a `MemberClass`."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredClass']};}};$classOrInterface.getInterface={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:MemberInterface$meta$model,a:{Container$MemberInterface:'Container$getInterface',Type$MemberInterface:'Type$getInterface'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getInterface:{'def':{t:Nothing}},Type$getInterface:{'def':{t:Anything}}},$an:function(){return[doc("Gets a member interface by name. Returns `null` if not found."),$throws("IncompatibleTypeException","If the specified `Container` or `Type` type arguments are not compatible with the actual result, \nor if the corresponding member is not a `MemberInterface`."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getInterface']};}};$classOrInterface.getDeclaredInterface={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:MemberInterface$meta$model,a:{Container$MemberInterface:'Container$getDeclaredInterface',Type$MemberInterface:'Type$getDeclaredInterface'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredInterface:{'def':{t:Nothing}},Type$getDeclaredInterface:{'def':{t:Anything}}},$an:function(){return[doc("Gets a member interface by name. Returns `null` if not found."),$throws("IncompatibleTypeException","If the specified `Container` or `Type` type arguments are not compatible with the actual result, \nor if the corresponding member is not a `MemberInterface`."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredInterface']};}};$classOrInterface.getMethod={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Method$meta$model,a:{Arguments$Method:'Arguments$getMethod',Container$Method:'Container$getMethod',Type$Method:'Type$getMethod'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getMethod:{'def':{t:Nothing}},Type$getMethod:{'def':{t:Anything}},Arguments$getMethod:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc("Gets a method by name. Returns `null` if not found."),$throws("IncompatibleTypeException","If the specified `Container`, `Type` or `Arguments` type arguments are not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getMethod']};}};$classOrInterface.getDeclaredMethod={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Method$meta$model,a:{Arguments$Method:'Arguments$getDeclaredMethod',Container$Method:'Container$getDeclaredMethod',Type$Method:'Type$getDeclaredMethod'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredMethod:{'def':{t:Nothing}},Type$getDeclaredMethod:{'def':{t:Anything}},Arguments$getDeclaredMethod:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc("Gets a method by name. Returns `null` if not found."),$throws("IncompatibleTypeException","If the specified `Container`, `Type` or `Arguments` type arguments are not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredMethod']};}};$classOrInterface.getAttribute={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Attribute$meta$model,a:{Container$Attribute:'Container$getAttribute',Set$Attribute:'Set$getAttribute',Get$Attribute:'Get$getAttribute'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getAttribute:{'def':{t:Nothing}},Get$getAttribute:{'def':{t:Anything}},Set$getAttribute:{'def':{t:Nothing}}},$an:function(){return[doc("Gets an attribute by name. Returns `null` if not found."),$throws("IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getAttribute']};}};$classOrInterface.getDeclaredAttribute={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Attribute$meta$model,a:{Container$Attribute:'Container$getDeclaredAttribute',Set$Attribute:'Set$getDeclaredAttribute',Get$Attribute:'Get$getDeclaredAttribute'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$getDeclaredAttribute:{'def':{t:Nothing}},Get$getDeclaredAttribute:{'def':{t:Anything}},Set$getDeclaredAttribute:{'def':{t:Nothing}}},$an:function(){return[doc("Gets an attribute by name. Returns `null` if not found."),$throws("IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredAttribute']};}};})(ClassOrInterface$meta$model.$$.prototype);}
return ClassOrInterface$meta$model;}
exports.$init$ClassOrInterface$meta$model=$init$ClassOrInterface$meta$model;$init$ClassOrInterface$meta$model();$defat(ClassOrInterface$meta$model.$$.prototype,'satisfiedTypes',function(){
var ints = this.tipo.$crtmm$['satisfies'];
if (ints && ints.length) {
var rv = [];
function resolveTypeArguments(root,type) {
if (type.a) {
var t2 = {t:type.t, a:{}};
for (var targ in type.a) {
t2.a[targ]=typeof(type.a[targ])==='string' ?
t2.a[targ]=root.$$targs$$.Type$ClassOrInterface.a[type.a[targ]]
: t2.a[targ]=type.a[targ];
if (t2.a[targ] && t2.a[targ].a) {
t2.a[targ]=resolveTypeArguments(root,t2.a[targ]);
}
}
type=t2;
}
return type;
}
for (var i=0; i < ints.length; i++) {
var ifc = resolveTypeArguments(this,ints[i]);
var mm=getrtmm$$(ifc.t);
if (mm.$cont) {
rv.push(AppliedMemberInterface(ifc.t, {Type$MemberInterface:ifc}));
} else {
rv.push(AppliedInterface(ifc.t, {Type$Interface:ifc}));
}
}
return rv.reifyCeylonType({Absent$Iterable:{t:Null},Element$Iterable:{t:InterfaceModel$meta$model,a:{Type$InterfaceModel:{t:Anything}}}});
}
return getEmpty();
},undefined,function(){
return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Iterable:{t:InterfaceModel$meta$model,a:{Type:{t:Anything}}}}},$cont:ClassOrInterface$meta$model,
$an:function(){return[shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','satisfiedTypes']};
});
ClassOrInterface$meta$model.$$.prototype.getMethod=function(name,types,$$$mptypes) {
if (!extendsType($$$mptypes.Container$getMethod,{t:this.tipo}))throw IncompatibleTypeException$meta$model("Incompatible Container type argument");
var fun = this.tipo[name];
if (!fun) fun = this.tipo.$$.prototype[name];
if (!fun) return null;
var mm=getrtmm$$(fun);
var _t=$$$mptypes.Type$getMethod;
var _a=$$$mptypes.Arguments$getMethod;
if (mm) {
if (mm.$t){
_t=mm.$t;
if (typeof(_t)==='string') {
var _ta;
if (this.$targs && this.$targs[_t])_t=this.$targs[_t];
else if ($$$mptypes.Container$getMethod && $$$mptypes.Container$getMethod.a && $$$mptypes.Container$getMethod.a[_t])_t=$$$mptypes.Container$getMethod.a[_t];
else if (mm.$tp && mm.$tp[_t])_ta=mm.$tp[_t];
else if (this.tipo.$crtmm$.$tp && this.tipo.$crtmm$.$tp[_t])_ta=this.tipo.$crtmm$.$tp[_t];
if (_ta && _ta.satisfies)_t=_ta.satisfies.length===1?_ta.satisfies[0]:{t:'i',l:_ta.satisfies};
if (typeof(_t)==='string')_t={t:Anything};
}
if (!extendsType(_t,$$$mptypes.Type$getMethod))throw IncompatibleTypeException$meta$model("Incompatible Type argument");
}
validate$params(mm.$ps,_a,"Wrong number of Arguments for getMethod");
_a=tupleize$params(mm.$ps);
}
return AppliedMethod(fun, types, {Container$Method:{t:this.tipo},Type$Method:_t,Arguments$Method:_a});
}
ClassOrInterface$meta$model.$$.prototype.getMethod.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Method$meta$model,a:{Arguments:'Arguments',Type:'Type',Container:'Container'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Iterable:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{'satisfies':[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getMethod']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredMethod=function(name,types,$$$mptypes) {
var rv=this.getMethod(name,types,{Type$getMethod:$$$mptypes.Type$getDeclaredMethod,Arguments$getMethod:$$$mptypes.Arguments$getDeclaredMethod,
Container$getMethod:$$$mptypes.Container$getDeclaredMethod});
if (rv && rv.tipo) {
var mm=getrtmm$$(rv.tipo);
if (mm && mm.$cont!==this.tipo)return null;
}
return rv;
}
ClassOrInterface$meta$model.$$.prototype.getDeclaredMethod.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Method$meta$model,a:{Arguments:'Arguments',Type:'Type',Container:'Container'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Iterable:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{'satisfies':[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredMethod']};};
ClassOrInterface$meta$model.$$.prototype.getAttribute=function getAttribute(name$15,$$$mptypes){
if (!extendsType($$$mptypes.Container$getAttribute,{t:this.tipo}))throw IncompatibleTypeException$meta$model("Incompatible Container type argument");
var nom = '$prop$get' + name$15[0].toUpperCase() + name$15.substring(1);
var at = this.tipo.$$.prototype[nom];
if (!at) {
nom = '$prop$get$' + name$15;
at = this.tipo.$$.prototype[nom];
if (!at)return null;
}
var mm=getrtmm$$(at);
var _t=$$$mptypes.Get$getAttribute;
if (mm && mm.$t) {
if (!extendsType(mm.$t,_t))throw IncompatibleTypeException$meta$model("Incompatible Get type argument");
if (!extendsType($$$mptypes.Set$getAttribute,at.set?mm.$t:{t:Nothing}))throw IncompatibleTypeException$meta$model("Incompatible Set type argument");
_t=mm.$t;
}
var rv=AppliedAttribute(name$15, at, {Get$Attribute:_t,Set$Attribute:at.set?_t:{t:Nothing}, Container$Attribute:{t:this.tipo}});
if (this.$targs)rv.$$targs$$.Container$Attribute.a=this.$targs;
rv.$parent=this;
return rv;
};
ClassOrInterface$meta$model.$$.prototype.getAttribute.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Attribute$meta$model,a:{Get:'Get',Set:'Set',Container:'Container'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getAttribute']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredAttribute=function getDeclaredAttribute(name$15,$$$mptypes){
var rv=this.getAttribute(name$15,{Get$getAttribute:$$$mptypes.Get$getDeclaredAttribute,Set$getAttribute:$$$mptypes.Set$getDeclaredAttribute,
Container$getAttribute:$$$mptypes.Container$getDeclaredAttribute});
if (rv && rv.tipo) {
var mm=getrtmm$$(rv.tipo);
if (mm&&mm.$cont!==this.tipo)return null;
}
return rv;
};ClassOrInterface$meta$model.$$.prototype.getDeclaredAttribute.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Attribute$meta$model,a:{Get:'Get',Set:'Set',Container:'Container'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredAttribute']};};
$defat(ClassOrInterface$meta$model.$$.prototype,'container',function(){
if (this.$parent)return this.$parent;
var cont = this.tipo.$crtmm$.$cont;
if (cont === undefined)return null;
if (get_model(cont.$crtmm$).$mt === 'i')
return AppliedInterface(cont,{Type$Interface:{t:cont}});
return AppliedClass(cont,{Type$Class:{t:cont},Arguments$Class:{t:Sequential,a:{Element$Iterable:{t:Anything}}}});
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Type$meta$model,a:{Type:{t:Anything}}}]},$cont:ClassOrInterface$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Member','$at','container']};});
ClassOrInterface$meta$model.$$.prototype.getClassOrInterface=function getClassOrInterface(name$2,types$3,$$$mptypes,noInherit){
if (!extendsType($$$mptypes.Kind$getClassOrInterface, {t:ClassOrInterface$meta$model}))throw IncompatibleTypeException$meta$model("Kind must be ClassOrInterface");
if (!extendsType($$$mptypes.Container$getClassOrInterface,{t:this.tipo}))throw IncompatibleTypeException$meta$model("Incompatible type specified in Container");
var $$clase=this;
if(types$3===undefined){types$3=getEmpty();}
var mm = getrtmm$$($$clase.tipo);
var nom = name$2 + '$' + mm.d[mm.d.length-1];
var ic = $$clase.tipo.$$.prototype[nom];
if (!ic) {
if (noInherit)return null;
var pere=mm['super'];
while (!ic && pere) {
mm=getrtmm$$(pere.t);
nom=mm&&mm.d?name$2+'$'+mm.d[mm.d.length-1]:undefined;
if (nom)ic=$$clase.tipo.$$.prototype[nom];
if (!ic)pere=mm['super'];
}
}
if (ic) {
mm = getrtmm$$(ic);
var md = get_model(mm);
var rv;
var ict={t:ic};
var _cont={t:this.tipo};
if (this.$targs)_cont.a=this.$targs;
if (md.$mt==='i') {
if (!extendsType({t:Interface$meta$model},{t:$$$mptypes.Kind$getClassOrInterface.t}))throw IncompatibleTypeException$meta$model("Member " + name$2 + " is an interface");
validate$typeparams(ict,ic.$crtmm$.$tp,types$3);
rv=AppliedMemberInterface(ic, {Container$MemberInterface:_cont,Type$MemberInterface:ict});
} else if (md.$mt==='c'){
if (!extendsType({t:Class$meta$model},{t:$$$mptypes.Kind$getClassOrInterface.t}))throw IncompatibleTypeException$meta$model("Member " + name$2 + " is a class");
validate$typeparams(ict,ic.$crtmm$.$tp,types$3);
rv=AppliedMemberClass(ic, {Container$MemberClass:_cont,Type$MemberClass:ict, Arguments$MemberClass:$$$mptypes.Arguments$getClassOrInterface});
} else {
throw IncompatibleTypeException$meta$model("Member " + name$2 + " is not a class or interface");
}
if (ict.a)rv.$targs=ict.a;
rv.$parent=this;
return rv;
}
return null;
};ClassOrInterface$meta$model.$$.prototype.getClassOrInterface.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Member$meta$model,a:{Type$Member:'Container$ClassOrInterface',Kind$Member:'Kind$ClassOrInterface'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Iterable:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container$ClassOrInterface:{},Kind$ClassOrInterface:{'satisfies':[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getClassOrInterface']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredClassOrInterface=function getDeclaredClassOrInterface(name$2,types$3,$$$mptypes){
return this.getClassOrInterface(name$2,types$3,{Kind$getClassOrInterface:$$$mptypes.Kind$getDeclaredClassOrInterface,
Arguments$getClassOrInterface:$$$mptypes.Arguments$getDeclaredClassOrInterface,
Container$getClassOrInterface:$$$mptypes.Container$getDeclaredClassOrInterface},1);
};ClassOrInterface$meta$model.$$.prototype.getDeclaredClassOrInterface.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Member$meta$model,a:{Type$Member:'Container',Kind$Member:'Kind'}}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}},{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Iterable:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Kind:{'satisfies':[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredClassOrInterface']};};
ClassOrInterface$meta$model.$$.prototype.getClass=function getClass(name,types,$mptypes) {
var rv=this.getClassOrInterface(name,types,{Container$getClassOrInterface:$mptypes.Container$getClass,
Kind$getClassOrInterface:Class$meta$model});
if (rv && !$is(rv, {t:AppliedMemberClass})) {
throw IncompatibleTypeException$meta$model("Member " + name + " is not a class");
}
return rv;
};ClassOrInterface$meta$model.$$.prototype.getClass.$crtmm$=function(){return{mod:$CCMM$,$t:{t:MemberClass$meta$model},$ps:[],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{satisfies:[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},d:['ceylon.language.meta.model','ClassOrInterface','$m','getClass']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredClass=function getClass(name,types,$mptypes) {
var rv=this.getDeclaredClassOrInterface(name,types,{Container$getDeclaredClassOrInterface:$mptypes.Container$getClass,
Kind$getDeclaredClassOrInterface:Class$meta$model});
if (rv && !$is(rv, {t:AppliedMemberClass})) {
throw IncompatibleTypeException$meta$model("Member " + name + " is not a class");
}
return rv;
};ClassOrInterface$meta$model.$$.prototype.getDeclaredClass.$crtmm$=function(){return{mod:$CCMM$,$t:{t:MemberClass$meta$model},$ps:[],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{satisfies:[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredClass']};};
ClassOrInterface$meta$model.$$.prototype.getInterface=function(name,types,$mptypes) {
var rv=this.getClassOrInterface(name,types,{Container$getClassOrInterface:$mptypes.Container$getInterface,
Kind$getClassOrInterface:Interface$meta$model});
if (rv && !$is(rv, {t:AppliedMemberInterface})) {
throw IncompatibleTypeException$meta$model("Member " + name + " is not an interface");
}
return rv;
};ClassOrInterface$meta$model.$$.prototype.getInterface.$crtmm$=function(){return{mod:$CCMM$,$t:{t:MemberInterface$meta$model},$ps:[],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{satisfies:[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},d:['ceylon.language.meta.model','ClassOrInterface','$m','getInterface']};};
ClassOrInterface$meta$model.$$.prototype.getDeclaredInterface=function(name,types,$mptypes) {
var rv=this.getDeclaredClassOrInterface(name,types,{Container$getDeclaredClassOrInterface:$mptypes.Container$getDeclaredInterface,
Kind$getDeclaredClassOrInterface:Interface$meta$model});
if (rv && !$is(rv, {t:AppliedMemberInterface})) {
throw IncompatibleTypeException$meta$model("Member " + name + " is not an interface");
}
return rv;
};ClassOrInterface$meta$model.$$.prototype.getDeclaredInterface.$crtmm$=function(){return{mod:$CCMM$,$t:{t:MemberInterface$meta$model},$ps:[],$cont:ClassOrInterface$meta$model,$tp:{Container:{},Type:{},Arguments:{satisfies:[{t:Sequential,a:{Element$Iterable:{t:Anything}}}]}},d:['ceylon.language.meta.model','ClassOrInterface','$m','getDeclaredInterface']};};
ClassOrInterface$meta$model.$$.prototype.typeOf=function typeOf(instance$8){
var _t={t:this.tipo};
if (this.$targs)_t.a=this.$targs;
return $is(instance$8,_t);
};
ClassOrInterface$meta$model.$$.prototype.typeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},$ps:[{$nm:'instance',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Type','$m','typeOf']};};
ClassOrInterface$meta$model.$$.prototype.supertypeOf=function supertypeOf(type$9){
return extendsType({t:type$9.tipo}, {t:this.tipo});
};
ClassOrInterface$meta$model.$$.prototype.supertypeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type:{t:Anything}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Type','$m','supertypeOf']};};
ClassOrInterface$meta$model.$$.prototype.exactly=function exactly(type$10){
return type$10.tipo && this.tipo === type$10.tipo;
};
ClassOrInterface$meta$model.$$.prototype.exactly.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type:{t:Anything}}},$an:function(){return[];}}],$cont:ClassOrInterface$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Type','$m','exactly']};};
$defat(ClassOrInterface$meta$model.$$.prototype,'typeArguments',function(){
var mm = getrtmm$$(this.tipo);
if (mm) {
if (mm.$tp) {
var targs={};
for (var tp in mm.$tp) {
var param = OpenTypeParam(this.tipo,tp);
var targ;
if (this.$$targs$$ && this.$$targs$$.Type$ClassOrInterface && this.$$targs$$.Type$ClassOrInterface.a
&& this.$$targs$$.Type$ClassOrInterface.a[tp]) {
var _targ=this.$$targs$$.Type$ClassOrInterface.a[tp];
if (typeof(_targ)==='string') {
console.log("TODO buscar " + tp + "->" + _targ + " para " + this.declaration.qualifiedName);
_targ={t:Anything};
}
targ=typeLiteral$meta({Type$typeLiteral:_targ});
} else {
targ=typeLiteral$meta({Type$typeLiteral:{t:Anything}});
}
targs[param]=targ;
}
return Mapita(targs,{K$Mapita:{t:TypeParameter$meta$declaration},V$Mapita:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}});
}
return getEmpty();
}
throw Exception(String$("ClassOrInterface.typeArguments-we don't have a metamodel!"));
},undefined,function(){return{mod:$CCMM$,$t:{t:Map,a:{Key:{t:TypeParameter$meta$declaration},Item:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$cont:ClassOrInterface$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Generic','$at','typeArguments']};});
$defat(ClassOrInterface$meta$model.$$.prototype,'string',function(){
var mm = getrtmm$$(this.tipo);
var qn=this.tipo.$$ && this.tipo.$$.prototype && this.tipo.$$.prototype.getT$name ? this.tipo.$$.prototype.getT$name() : $qname(mm);
if (mm.$tp) {
qn+="<";
var first=true;
for (var tp in mm.$tp) {
var targ;
if (this.$$targs$$ && this.$$targs$$.Type$ClassOrInterface && this.$$targs$$.Type$ClassOrInterface.a && this.$$targs$$.Type$ClassOrInterface.a[tp]) {
var _targ=this.$$targs$$.Type$ClassOrInterface.a[tp];
if (typeof(_targ)==='string') {
console.log("TODO buscar " + tp + "->" + _targ + " para " + this.declaration.qualifiedName);
_targ={t:Anything};
}
targ=typeLiteral$meta({Type$typeLiteral:_targ});
} else {
targ=typeLiteral$meta({Type$typeLiteral:{t:Anything}});
}
if (first)first=false; else qn+=",";
if (targ.declaration) {
qn+=targ.declaration.qualifiedName;
} else {
qn+=targ.string;
}
}
qn+=">";
}
return String$(qn);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['ceylon.language','Object','$at','string']};});
$defat(ClassOrInterface$meta$model.$$.prototype,'hash',function(){
var mm = getrtmm$$(this.tipo);
var h=String$($qname(mm)).hash;
if (mm.$tp) {
for (var tp in mm.$tp) {
var targ;
if (this.$$targs$$ && this.$$targs$$.Type$ClassOrInterface && this.$$targs$$.Type$ClassOrInterface.a && this.$$targs$$.Type$ClassOrInterface.a[tp]) {
var _targ=this.$$targs$$.Type$ClassOrInterface.a[tp];
if (typeof(_targ)==='string') {
console.log("TODO buscar " + tp + "->" + _targ + " para " + this.declaration.qualifiedName);
_targ={t:Anything};
}
targ=typeLiteral$meta({Type$typeLiteral:_targ});
} else {
targ=typeLiteral$meta({Type$typeLiteral:{t:Anything}});
}
h+=targ.hash;
}
}
if (this.$bound)h+=this.$bound.hash;
return h;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['ceylon.language','Object','$at','hash']};});
$defat(ClassOrInterface$meta$model.$$.prototype,'extendedType',function(){
var sc = this.tipo.$crtmm$['super'];
if (sc === undefined)return null;
var mm = getrtmm$$(sc.t);
var ac;
if (mm.$cont) {
ac=AppliedMemberClass(sc.t, {Type$MemberClass:sc,Arguments$MemberClass:{t:Sequential,a:{Element$Iterable:{t:Anything}}},Container$MemberClass:mm.$cont});
} else {
ac=AppliedClass(sc.t, {Type$Class:sc,Arguments$Class:{t:Sequential,a:{Element$Iterable:{t:Anything}}}});
}
if (sc.a)ac.$targs=sc.a;
return ac;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:ClassModel$meta$model,a:{Arguments:{t:Nothing},Type:{t:Anything}}}]},$cont:AppliedClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Class','$at','extendedType']};});
$defat(ClassOrInterface$meta$model.$$.prototype,'caseValues',function(){
var cts = this.tipo.$crtmm$.of;
if (cts && cts.length > 0) {
var rv=[];
for (var i=0; i < cts.length; i++) {
if (typeof(cts[i])==='function') {
rv.push(cts[i]());
}
}
return ArraySequence(rv,{Element$Sequential:{t:this.tipo}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Type$ClassOrInterface'}},$cont:ClassOrInterface$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassOrInterface.$at.caseValues.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','ClassOrInterface','$at','caseValues']};});
function ClassModel$meta$model($$targs$$,$classModel){ClassOrInterface$meta$model({Type$ClassOrInterface:$$targs$$.Type$ClassModel},$classModel);set_type_args($classModel,$$targs$$);}
ClassModel$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$ClassModel:{'var':'out','def':{t:Anything}},Arguments$ClassModel:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:'Type$ClassModel'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].ClassModel.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','ClassModel']};};
exports.ClassModel$meta$model=ClassModel$meta$model;function $init$ClassModel$meta$model(){if(ClassModel$meta$model.$$===undefined){initTypeProtoI(ClassModel$meta$model,'ceylon.language.meta.model::ClassModel',$init$ClassOrInterface$meta$model());
(function($classModel){$classModel.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassDeclaration$meta$declaration},$cont:ClassModel$meta$model,$an:function(){return[shared(),formal(),actual()];},d:['ceylon.language.meta.model','ClassModel','$at','declaration']};}};$classModel.$prop$getParameterTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:ClassModel$meta$model,$an:function(){return[doc("This function\'s parameter closed types"),shared(),formal()];},d:['ceylon.language.meta.model','ClassModel','$at','parameterTypes']};}};})(ClassModel$meta$model.$$.prototype);}
return ClassModel$meta$model;}
exports.$init$ClassModel$meta$model=$init$ClassModel$meta$model;$init$ClassModel$meta$model();$defat(ClassModel$meta$model.$$.prototype,'parameterTypes',function(){
var ps=this.tipo.$crtmm$.$ps;
if (!ps || ps.length==0)return getEmpty();
var r=[];
for (var i=0; i < ps.length; i++) {
var pt=ps[i].$t;
if (typeof(pt)==='string'){
if (!this.$targs)throw TypeApplicationException$meta$model(String$("This class model needs type parameters"));
pt=this.$targs[pt];
if (!pt)throw TypeApplicationException$meta$model(String$("Class model is missing type argument for <" + ps[i].$t + ">"));
}
r.push(typeLiteral$meta({Type$typeLiteral:pt}));
}
return ArraySequence(r,{Element$Iterable:{t:Type$meta$model,a:{t:Anything}}});
},undefined,function(){return{mod:$CCMM$,$cont:ClassModel$meta$model,d:['ceylon.language.meta.model','ClassModel','$at','parameterTypes'],$t:{t:Sequential,a:{ElementSequential:{t:Type$meta$model,a:{Type:{t:Anything}}},Absent:{t:Null}}}};});
$defat(ClassModel$meta$model.$$.prototype,'declaration',function(){
var $$clase=this;
if ($$clase._decl)return $$clase._decl;
var mm = getrtmm$$($$clase.tipo);
$$clase._decl = OpenClass(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), $$clase.tipo);
return $$clase._decl;
},undefined,function(){return{mod:$CCMM$,$t:{t:ClassDeclaration$meta$declaration},$cont:ClassModel$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','ClassModel','$at','declaration']};});
ClassModel$meta$model.$$.prototype.equals=function(o){
return $is(o,{t:AppliedClass}) && o.tipo===this.tipo && this.typeArguments.equals(o.typeArguments);
};
ClassModel$meta$model.$$.prototype.equals.$crtmm$=function(){return{
mod:$CCMM$,d:['ceylon.language','Object','$m','equals'],$t:{t:Boolean$},$ps:[{$nm:'other',$t:{t:Object$},$mt:'prm'}]
}};
function Class$meta$model($$targs$$,$class){ClassModel$meta$model({Type$ClassModel:$$targs$$.Type$Class,Arguments$ClassModel:$$targs$$.Arguments$Class},$class);Callable({Return$Callable:$$targs$$.Type$Class,Arguments$Callable:$$targs$$.Arguments$Class},$class);Applicable$meta$model({Type$Applicable:$$targs$$.Type$Class},$class);set_type_args($class,$$targs$$);}
Class$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$Class:{'var':'out','def':{t:Anything}},Arguments$Class:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:ClassModel$meta$model,a:{Type$ClassModel:'Type$Class',Arguments$ClassModel:'Arguments$Class'}},{t:Callable,a:{Return$Callable:'Type$Class',Arguments$Callable:'Arguments$Class'}},{t:Applicable$meta$model,a:{Type$Applicable:'Type$Class'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Class.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Class']};};
exports.Class$meta$model=Class$meta$model;function $init$Class$meta$model(){if(Class$meta$model.$$===undefined){initTypeProtoI(Class$meta$model,'ceylon.language.meta.model::Class',$init$ClassModel$meta$model(),$init$Callable(),$init$Applicable$meta$model());
}
return Class$meta$model;}
exports.$init$Class$meta$model=$init$Class$meta$model;$init$Class$meta$model();function FunctionModel$meta$model($$targs$$,$functionModel){Model$meta$model($functionModel);Generic$meta$model($functionModel);set_type_args($functionModel,$$targs$$);}
FunctionModel$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$FunctionModel:{'var':'out','def':{t:Anything}},Arguments$FunctionModel:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:Model$meta$model},{t:Generic$meta$model}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].FunctionModel.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','FunctionModel']};};
exports.FunctionModel$meta$model=FunctionModel$meta$model;function $init$FunctionModel$meta$model(){if(FunctionModel$meta$model.$$===undefined){initTypeProtoI(FunctionModel$meta$model,'ceylon.language.meta.model::FunctionModel',$init$Model$meta$model(),$init$Generic$meta$model());
(function($functionModel){$functionModel.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:FunctionDeclaration$meta$declaration},$cont:FunctionModel$meta$model,$an:function(){return[doc("This function\'s declaration."),shared(),formal(),actual()];},d:['ceylon.language.meta.model','FunctionModel','$at','declaration']};}};$functionModel.$prop$getType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Type$FunctionModel'}},$cont:FunctionModel$meta$model,$an:function(){return[doc("This function\'s return closed type."),shared(),formal()];},d:['ceylon.language.meta.model','FunctionModel','$at','type']};}};$functionModel.$prop$getParameterTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:FunctionModel$meta$model,$an:function(){return[doc("This function\'s parameter closed types"),shared(),formal()];},d:['ceylon.language.meta.model','FunctionModel','$at','parameterTypes']};}};})(FunctionModel$meta$model.$$.prototype);}
return FunctionModel$meta$model;}
exports.$init$FunctionModel$meta$model=$init$FunctionModel$meta$model;$init$FunctionModel$meta$model();$defat(FunctionModel$meta$model.$$.prototype,'parameterTypes',function(){
var ps=this.tipo.$crtmm$.$ps;
if (!ps || ps.length==0)return getEmpty();
var r=[];
for (var i=0; i < ps.length; i++) {
var pt=ps[i].$t;
if (typeof(pt)==='string'){
if (!this.$targs)throw TypeApplicationException$meta$model(String$("This function model needs type parameters"));
pt=this.$targs[pt];
if (!pt)throw TypeApplicationException$meta$model(String$("Function model is missing type argument for <" + ps[i].$t + ">"));
}
r.push(typeLiteral$meta({Type$typeLiteral:pt}));
}
return ArraySequence(r,{Element$Iterable:{t:Type$meta$model,a:{t:Anything}}});
},undefined,function(){return{mod:$CCMM$,$cont:FunctionModel$meta$model,d:['ceylon.language.meta.model','FunctionModel','$at','parameterTypes'],$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type:{t:Anything}}},Absent:{t:Null}}}};});
$defat(FunctionModel$meta$model.$$.prototype,'typeArguments',function(){
var mm = this.tipo.$crtmm$;
if (mm) {
if (mm.$tp) {
if (this.$targs===undefined)throw TypeApplicationException$meta$model("Missing type arguments for "+this.string);
var targs={};
for (var tp in mm.$tp) {
var param = OpenTypeParam(this.tipo,tp);
var targ = this.$targs[tp];
if (targ) {
targ=typeLiteral$meta({Type$typeLiteral:targ});
} else {
targ=typeLiteral$meta({Type$typeLiteral:{t:Anything}});
}
targs[param]=targ;
}
return Mapita(targs,{K$Mapita:{t:TypeParameter$meta$declaration},V$Mapita:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}});
}
return getEmpty();
}
throw Exception(String$("FunctionModel.typeArguments-we don't have a metamodel!"));
},undefined,function(){return{mod:$CCMM$,$t:{t:Map,a:{Key:{t:TypeParameter$meta$declaration},Item:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$cont:FunctionModel$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Generic','$at','typeArguments']};});
$defat(FunctionModel$meta$model.$$.prototype,'string',function(){
var mm=this.tipo.$crtmm$;
var qn;
if (mm.$cont) {
qn=$qname(mm.$cont);
if (mm.$cont.$crtmm$.$tp) {
var cnt=this.$$targs$$&&this.$$targs$$.Container$Function&&this.$$targs$$.Container$Function.a;
if (!cnt)cnt=this.$$targs$$&&this.$$targs$$.Container$Method&&this.$$targs$$.Container$Method.a;
qn+="<";var first=true;
for (var tp in mm.$cont.$crtmm$.$tp) {
if (first)first=false;else qn+=",";
var _ta=cnt&&cnt[tp];
qn+=$qname(_ta||Anything);
}
qn+=">";
}
qn+="."+mm.d[mm.d.length-1];
} else {
qn=$qname(mm);
}
if (mm.$tp) {
qn+="<";
var first=true;
for (var tp in mm.$tp) {
if (first)first=false; else qn+=",";
var targ=this.$targs[tp];
if (targ.t) {
var _m=getrtmm$$(targ.t);
qn+=$qname(_m);
} else {
qn+=tp;
}
}
qn+=">";
}
return String$(qn);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['ceylon.language','Object','$at','string'],$cont:FunctionModel$meta$model};});
function Function$meta$model($$targs$$,$function){FunctionModel$meta$model({Arguments$FunctionModel:$$targs$$.Arguments$Function,Type$FunctionModel:$$targs$$.Type$Function},$function);Callable({Return$Callable:$$targs$$.Type$Function,Arguments$Callable:$$targs$$.Arguments$Function},$function);Applicable$meta$model({Type$Applicable:$$targs$$.Type$Function},$function);set_type_args($function,$$targs$$);}
Function$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$Function:{'var':'out','def':{t:Anything}},Arguments$Function:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:FunctionModel$meta$model,a:{Arguments$FunctionModel:'Arguments$Function',Type$FunctionModel:'Type$Function'}},{t:Callable,a:{Return$Callable:'Type$Function',Arguments$Callable:'Arguments$Function'}},{t:Applicable$meta$model,a:{Type$Applicable:'Type$Function'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Function.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Function']};};
exports.Function$meta$model=Function$meta$model;function $init$Function$meta$model(){if(Function$meta$model.$$===undefined){initTypeProtoI(Function$meta$model,'ceylon.language.meta.model::Function',$init$FunctionModel$meta$model(),$init$Callable(),$init$Applicable$meta$model());
}
return Function$meta$model;}
exports.$init$Function$meta$model=$init$Function$meta$model;$init$Function$meta$model();function Method$meta$model($$targs$$,$method){FunctionModel$meta$model({Arguments$FunctionModel:$$targs$$.Arguments$Method,Type$FunctionModel:$$targs$$.Type$Method},$method);Member$meta$model({Kind$Member:{t:Function$meta$model,a:{Type$Function:$$targs$$.Type$Method,Arguments$Function:$$targs$$.Arguments$Method}},Container$Member:$$targs$$.Container$Method},$method);add_type_arg($method,'Kind$Member',{t:Function$meta$model,a:{Type$Function:$method.$$targs$$.Type$Method,Arguments$Function:$method.$$targs$$.Arguments$Method}});set_type_args($method,$$targs$$);}
Method$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Container$Method:{'var':'in'},Type$Method:{'var':'out','def':{t:Anything}},Arguments$Method:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:FunctionModel$meta$model,a:{Arguments$FunctionModel:'Arguments$Method',Type$FunctionModel:'Type$Method'}},{t:Member$meta$model,a:{Kind$Member:{t:Function$meta$model,a:{Type$Function:'Type$Method',Arguments$Function:'Arguments$Method'}},Container$Member:'Container$Method'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Method.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Method']};};
exports.Method$meta$model=Method$meta$model;function $init$Method$meta$model(){if(Method$meta$model.$$===undefined){initTypeProtoI(Method$meta$model,'ceylon.language.meta.model::Method',$init$FunctionModel$meta$model(),$init$Member$meta$model());
(function($method){$method.$bind={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Function$meta$model,a:{Type$Function:'Type$Method',Arguments$Function:'Arguments$Method'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Method$meta$model,$an:function(){return[shared(),actual(),formal()];},d:['ceylon.language.meta.model','Method','$m','bind']};}};})(Method$meta$model.$$.prototype);}
return Method$meta$model;}
exports.$init$Method$meta$model=$init$Method$meta$model;$init$Method$meta$model();function InterfaceModel$meta$model($$targs$$,$interfaceModel){ClassOrInterface$meta$model({Type$ClassOrInterface:$$targs$$.Type$InterfaceModel},$interfaceModel);set_type_args($interfaceModel,$$targs$$);}
InterfaceModel$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$InterfaceModel:{'var':'out','def':{t:Anything}}},satisfies:[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:'Type$InterfaceModel'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].InterfaceModel.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','InterfaceModel']};};
exports.InterfaceModel$meta$model=InterfaceModel$meta$model;function $init$InterfaceModel$meta$model(){if(InterfaceModel$meta$model.$$===undefined){initTypeProtoI(InterfaceModel$meta$model,'ceylon.language.meta.model::InterfaceModel',$init$ClassOrInterface$meta$model());
(function($interfaceModel){$interfaceModel.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:InterfaceDeclaration$meta$declaration},$cont:InterfaceModel$meta$model,$an:function(){return[shared(),formal(),actual()];},d:['ceylon.language.meta.model','InterfaceModel','$at','declaration']};}};})(InterfaceModel$meta$model.$$.prototype);}
return InterfaceModel$meta$model;}
exports.$init$InterfaceModel$meta$model=$init$InterfaceModel$meta$model;$init$InterfaceModel$meta$model();$defat(InterfaceModel$meta$model.$$.prototype,'declaration',function(){
if (this._decl)return this._decl;
var mm = getrtmm$$(this.tipo);
this._decl = OpenInterface(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), this.tipo);
return this._decl;
},undefined,function(){return{mod:$CCMM$,$t:{t:InterfaceDeclaration$meta$declaration},$cont:InterfaceModel$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','InterfaceModel','$at','declaration']};});
InterfaceModel$meta$model.$$.prototype.equals=function(o){
return $is(o,{t:AppliedInterface}) && (o.tipo$2||o.tipo)==this.tipo && this.typeArguments.equals(o.typeArguments);
};
InterfaceModel$meta$model.$$.prototype.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},d:['ceylon.language','Object','$m','equals'],$ps:[{$nm:'other',$t:{t:Object$}}],$cont:InterfaceModel$meta$model};}
function Interface$meta$model($$targs$$,$interface){InterfaceModel$meta$model({Type$InterfaceModel:$$targs$$.Type$Interface},$interface);set_type_args($interface,$$targs$$);}
Interface$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$Interface:{'var':'out','def':{t:Anything}}},satisfies:[{t:InterfaceModel$meta$model,a:{Type$InterfaceModel:'Type$Interface'}}],$an:function(){return[doc("An interface model that you can inspect."),shared()];},d:['ceylon.language.meta.model','Interface']};};
exports.Interface$meta$model=Interface$meta$model;function $init$Interface$meta$model(){if(Interface$meta$model.$$===undefined){initTypeProtoI(Interface$meta$model,'ceylon.language.meta.model::Interface',$init$InterfaceModel$meta$model());
}
return Interface$meta$model;}
exports.$init$Interface$meta$model=$init$Interface$meta$model;$init$Interface$meta$model();function IntersectionType$meta$model($$targs$$,$intersectionType){Type$meta$model({Type$Type:$$targs$$.Intersection$IntersectionType},$intersectionType);set_type_args($intersectionType,$$targs$$);}
IntersectionType$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Intersection$IntersectionType:{'var':'out','def':{t:Anything}}},satisfies:[{t:Type$meta$model,a:{Type$Type:'Intersection$IntersectionType'}}],$an:function(){return[doc("A closed intersection type."),shared()];},d:['ceylon.language.meta.model','IntersectionType']};};
exports.IntersectionType$meta$model=IntersectionType$meta$model;function $init$IntersectionType$meta$model(){if(IntersectionType$meta$model.$$===undefined){initTypeProtoI(IntersectionType$meta$model,'ceylon.language.meta.model::IntersectionType',$init$Type$meta$model());
(function($intersectionType){$intersectionType.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:IntersectionType$meta$model,$an:function(){return[doc("The list of closed satisfied types of this intersection."),shared(),formal()];},d:['ceylon.language.meta.model','IntersectionType','$at','satisfiedTypes']};}};})(IntersectionType$meta$model.$$.prototype);}
return IntersectionType$meta$model;}
exports.$init$IntersectionType$meta$model=$init$IntersectionType$meta$model;$init$IntersectionType$meta$model();function Member$meta$model($$targs$$,$member){Callable({Return$Callable:$$targs$$.Kind$Member,Arguments$Callable:{t:'T',l:[$$targs$$.Container$Member]}},$member);add_type_arg($member,'Arguments$Callable',{t:'T',l:[$member.$$targs$$.Container$Member]});set_type_args($member,$$targs$$);}
Member$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Container$Member:{'var':'in'},Kind$Member:{'var':'out','satisfies':[{t:Model$meta$model}]}},satisfies:[{t:Callable,a:{Return$Callable:'Kind$Member',Arguments$Callable:{t:'T',l:[{$t:'Container$Member'}]}}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Member.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Member']};};
exports.Member$meta$model=Member$meta$model;function $init$Member$meta$model(){if(Member$meta$model.$$===undefined){initTypeProtoI(Member$meta$model,'ceylon.language.meta.model::Member',$init$Callable());
(function($member){$member.$prop$getDeclaringType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$cont:Member$meta$model,$an:function(){return[doc("The declaring closed type. This is the type that declared this member."),shared(),formal()];},d:['ceylon.language.meta.model','Member','$at','declaringType']};}};$member.$bind={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Model$meta$model},$ps:[{$nm:'container',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Member$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Member.$m.bind.$an.doc[0]),$throws("IncompatibleTypeException","If the container is not assignable to this member\'s container"),shared(),formal()];},d:['ceylon.language.meta.model','Member','$m','bind']};}};})(Member$meta$model.$$.prototype);}
return Member$meta$model;}
exports.$init$Member$meta$model=$init$Member$meta$model;$init$Member$meta$model();$defat(Member$meta$model.$$.prototype,'declaringType',function(){
var $$member=this;
var mm = getrtmm$$($$member.tipo);
var m2 = get_model(mm);
return (m2['$mt']==='c'?OpenClass:OpenInterface)(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), $$member.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:Member$meta$model,a:{Type:{t:Anything}}},$cont:Member$meta$model,$an:function(){return[shared(),formal()];},d:['ceylon.language.meta.model','Member','$at','declaringType']};});
$defat(Member$meta$model.$$.prototype,'container',function(){
return this.declaringClassOrInterface;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Type$meta$model,a:{Type:{t:Anything}}}]},$cont:Member$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Member','$at','container']};});
function MemberClass$meta$model($$targs$$,$memberClass){ClassModel$meta$model({Type$ClassModel:$$targs$$.Type$MemberClass,Arguments$ClassModel:$$targs$$.Arguments$MemberClass},$memberClass);Member$meta$model({Kind$Member:{t:Class$meta$model,a:{Type$Class:$$targs$$.Type$MemberClass,Arguments$Class:$$targs$$.Arguments$MemberClass}},Container$Member:$$targs$$.Container$MemberClass},$memberClass);add_type_arg($memberClass,'Kind$Member',{t:Class$meta$model,a:{Type$Class:$memberClass.$$targs$$.Type$MemberClass,Arguments$Class:$memberClass.$$targs$$.Arguments$MemberClass}});set_type_args($memberClass,$$targs$$);}
MemberClass$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Container$MemberClass:{'var':'in'},Type$MemberClass:{'var':'out','def':{t:Anything}},Arguments$MemberClass:{'var':'in','satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:ClassModel$meta$model,a:{Type$ClassModel:'Type$MemberClass',Arguments$ClassModel:'Arguments$MemberClass'}},{t:Member$meta$model,a:{Kind$Member:{t:Class$meta$model,a:{Type$Class:'Type$MemberClass',Arguments$Class:'Arguments$MemberClass'}},Container$Member:'Container$MemberClass'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].MemberClass.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','MemberClass']};};
exports.MemberClass$meta$model=MemberClass$meta$model;function $init$MemberClass$meta$model(){if(MemberClass$meta$model.$$===undefined){initTypeProtoI(MemberClass$meta$model,'ceylon.language.meta.model::MemberClass',$init$ClassModel$meta$model(),$init$Member$meta$model());
(function($memberClass){$memberClass.$bind={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Class$meta$model,a:{Type$Class:'Type$MemberClass',Arguments$Class:'Arguments$MemberClass'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:MemberClass$meta$model,$an:function(){return[shared(),actual(),formal()];},d:['ceylon.language.meta.model','MemberClass','$m','bind']};}};})(MemberClass$meta$model.$$.prototype);}
return MemberClass$meta$model;}
exports.$init$MemberClass$meta$model=$init$MemberClass$meta$model;$init$MemberClass$meta$model();function MemberInterface$meta$model($$targs$$,$memberInterface){InterfaceModel$meta$model({Type$InterfaceModel:$$targs$$.Type$MemberInterface},$memberInterface);Member$meta$model({Kind$Member:{t:Interface$meta$model,a:{Type$Interface:$$targs$$.Type$MemberInterface}},Container$Member:$$targs$$.Container$MemberInterface},$memberInterface);add_type_arg($memberInterface,'Kind$Member',{t:Interface$meta$model,a:{Type$Interface:$memberInterface.$$targs$$.Type$MemberInterface}});set_type_args($memberInterface,$$targs$$);}
MemberInterface$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Container$MemberInterface:{'var':'in'},Type$MemberInterface:{'var':'out','def':{t:Anything}}},satisfies:[{t:InterfaceModel$meta$model,a:{Type$InterfaceModel:'Type$MemberInterface'}},{t:Member$meta$model,a:{Kind$Member:{t:Interface$meta$model,a:{Type$Interface:'Type$MemberInterface'}},Container$Member:'Container$MemberInterface'}}],$an:function(){return[doc("A member interface model that you can inspect."),shared()];},d:['ceylon.language.meta.model','MemberInterface']};};
exports.MemberInterface$meta$model=MemberInterface$meta$model;function $init$MemberInterface$meta$model(){if(MemberInterface$meta$model.$$===undefined){initTypeProtoI(MemberInterface$meta$model,'ceylon.language.meta.model::MemberInterface',$init$InterfaceModel$meta$model(),$init$Member$meta$model());
(function($memberInterface){$memberInterface.$bind={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Interface$meta$model,a:{Type$Interface:'Type$MemberInterface'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:MemberInterface$meta$model,$an:function(){return[shared(),actual(),formal()];},d:['ceylon.language.meta.model','MemberInterface','$m','bind']};}};})(MemberInterface$meta$model.$$.prototype);}
return MemberInterface$meta$model;}
exports.$init$MemberInterface$meta$model=$init$MemberInterface$meta$model;$init$MemberInterface$meta$model();function Attribute$meta$model($$targs$$,$attribute){ValueModel$meta$model({Set$ValueModel:$$targs$$.Set$Attribute,Get$ValueModel:$$targs$$.Get$Attribute},$attribute);Member$meta$model({Kind$Member:{t:Value$meta$model,a:{Set$Value:$$targs$$.Set$Attribute,Get$Value:$$targs$$.Get$Attribute}},Container$Member:$$targs$$.Container$Attribute},$attribute);add_type_arg($attribute,'Kind$Member',{t:Value$meta$model,a:{Set$Value:$attribute.$$targs$$.Set$Attribute,Get$Value:$attribute.$$targs$$.Get$Attribute}});set_type_args($attribute,$$targs$$);}
Attribute$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Container$Attribute:{'var':'in'},Get$Attribute:{'var':'out','def':{t:Anything}},Set$Attribute:{'var':'in','def':{t:Nothing}}},satisfies:[{t:ValueModel$meta$model,a:{Set$ValueModel:'Set$Attribute',Get$ValueModel:'Get$Attribute'}},{t:Member$meta$model,a:{Kind$Member:{t:Value$meta$model,a:{Set$Value:'Set$Attribute',Get$Value:'Get$Attribute'}},Container$Member:'Container$Attribute'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Attribute.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Attribute']};};
exports.Attribute$meta$model=Attribute$meta$model;function $init$Attribute$meta$model(){if(Attribute$meta$model.$$===undefined){initTypeProtoI(Attribute$meta$model,'ceylon.language.meta.model::Attribute',$init$ValueModel$meta$model(),$init$Member$meta$model());
(function($attribute){$attribute.$bind={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Value$meta$model,a:{Set$Value:'Set$Attribute',Get$Value:'Get$Attribute'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:Attribute$meta$model,$an:function(){return[shared(),actual(),formal()];},d:['ceylon.language.meta.model','Attribute','$m','bind']};}};})(Attribute$meta$model.$$.prototype);}
return Attribute$meta$model;}
exports.$init$Attribute$meta$model=$init$Attribute$meta$model;$init$Attribute$meta$model();function Model$meta$model($model){}
Model$meta$model.$crtmm$=function(){return{mod:$CCMM$,of:[{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:{t:Anything}}},{t:FunctionModel$meta$model,a:{Arguments$FunctionModel:{t:Nothing},Type$FunctionModel:{t:Anything}}},{t:ValueModel$meta$model,a:{Set$ValueModel:{t:Nothing},Get$ValueModel:{t:Anything}}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Model.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Model']};};
exports.Model$meta$model=Model$meta$model;function $init$Model$meta$model(){if(Model$meta$model.$$===undefined){initTypeProtoI(Model$meta$model,'ceylon.language.meta.model::Model');
(function($model){$model.$prop$getContainer={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Type$meta$model,a:{Type$Type:{t:Anything}}}]},$cont:Model$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Model.$at.container.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Model','$at','container']};}};$model.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:NestableDeclaration$meta$declaration},$cont:Model$meta$model,$an:function(){return[doc("The declaration for this model."),shared(),formal()];},d:['ceylon.language.meta.model','Model','$at','declaration']};}};})(Model$meta$model.$$.prototype);}
return Model$meta$model;}
exports.$init$Model$meta$model=$init$Model$meta$model;$init$Model$meta$model();function Type$meta$model($$targs$$,$type){set_type_args($type,$$targs$$);}
Type$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$Type:{'var':'out','def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Type.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Type']};};
exports.Type$meta$model=Type$meta$model;function $init$Type$meta$model(){if(Type$meta$model.$$===undefined){initTypeProtoI(Type$meta$model,'ceylon.language.meta.model::Type');
(function($type){$type.typeOf={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'instance',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:Type$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Type.$m.typeOf.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Type','$m','typeOf']};}};$type.supertypeOf={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:Type$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Type.$m.supertypeOf.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Type','$m','supertypeOf']};}};$type.subtypeOf=function ($r5){var $type=this;return $r5.supertypeOf($type);};$type.subtypeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:Type$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Type.$m.subtypeOf.$an.doc[0]),shared(),$default()];},d:['ceylon.language.meta.model','Type','$m','subtypeOf']};};$type.exactly={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:Type$meta$model,$an:function(){return[doc("True if the given type is a exactly this type."),shared(),formal()];},d:['ceylon.language.meta.model','Type','$m','exactly']};}};})(Type$meta$model.$$.prototype);}
return Type$meta$model;}
exports.$init$Type$meta$model=$init$Type$meta$model;$init$Type$meta$model();function UnionType$meta$model($$targs$$,$unionType){Type$meta$model({Type$Type:$$targs$$.Union$UnionType},$unionType);set_type_args($unionType,$$targs$$);}
UnionType$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Union$UnionType:{'var':'out','def':{t:Anything}}},satisfies:[{t:Type$meta$model,a:{Type$Type:'Union$UnionType'}}],$an:function(){return[doc("A closed union type."),shared()];},d:['ceylon.language.meta.model','UnionType']};};
exports.UnionType$meta$model=UnionType$meta$model;function $init$UnionType$meta$model(){if(UnionType$meta$model.$$===undefined){initTypeProtoI(UnionType$meta$model,'ceylon.language.meta.model::UnionType',$init$Type$meta$model());
(function($unionType){$unionType.$prop$getCaseTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:Type$meta$model,a:{Type$Type:'Union$UnionType'}}}},$cont:UnionType$meta$model,$an:function(){return[doc("The list of closed case types of this union."),shared(),formal()];},d:['ceylon.language.meta.model','UnionType','$at','caseTypes']};}};})(UnionType$meta$model.$$.prototype);}
return UnionType$meta$model;}
exports.$init$UnionType$meta$model=$init$UnionType$meta$model;$init$UnionType$meta$model();function Value$meta$model($$targs$$,$value){ValueModel$meta$model({Set$ValueModel:$$targs$$.Set$Value,Get$ValueModel:$$targs$$.Get$Value},$value);set_type_args($value,$$targs$$);}
Value$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Get$Value:{'var':'out','def':{t:Anything}},Set$Value:{'var':'in','def':{t:Nothing}}},satisfies:[{t:ValueModel$meta$model,a:{Set$ValueModel:'Set$Value',Get$ValueModel:'Get$Value'}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Value.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Value']};};
exports.Value$meta$model=Value$meta$model;function $init$Value$meta$model(){if(Value$meta$model.$$===undefined){initTypeProtoI(Value$meta$model,'ceylon.language.meta.model::Value',$init$ValueModel$meta$model());
(function($value){$value.$get={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Get$Value',$ps:[],$cont:Value$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Value.$m.get.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Value','$m','get']};}};$value.set={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'newValue',$mt:'prm',$t:'Set$Value',$an:function(){return[];}}],$cont:Value$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Value.$m.set.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Value','$m','set']};}};$value.setIfAssignable={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'newValue',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:Value$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Value.$m.setIfAssignable.$an.doc[0]),$throws("IncompatibleTypeException","If the specified new value is not of a subtype of this variable\'s type"),$throws("MutationException","If this value is not variable"),shared(),formal()];},d:['ceylon.language.meta.model','Value','$m','setIfAssignable']};}};})(Value$meta$model.$$.prototype);}
return Value$meta$model;}
exports.$init$Value$meta$model=$init$Value$meta$model;$init$Value$meta$model();function $r6$meta$model($$targs$$){var $nothingType=new $r6$meta$model.$$;
$nothingType.$$targs$$=$$targs$$;Type$meta$model({Type$Type:{t:Nothing}},$nothingType);return $nothingType;
};$r6$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Type$meta$model,a:{Type$Type:{t:Nothing}}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].nothingType.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','nothingType']};};function $init$$r6$meta$model(){if($r6$meta$model.$$===undefined){initTypeProto($r6$meta$model,'ceylon.language.meta.model::nothingType',Basic,$init$Type$meta$model());
(function($nothingType){$defat($nothingType,'string',function(){var $nothingType=this;return "Nothing";},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:$r6$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','nothingType','$at','string']};});$nothingType.typeOf=function ($r7){var $nothingType=this;return false;};$nothingType.supertypeOf=function ($r8){var $nothingType=this;return $nothingType.exactly($r8);};$nothingType.subtypeOf=function ($r9){var $nothingType=this;return true;};$nothingType.exactly=function ($ra){var $nothingType=this;return $ra.equals(getNothingType$meta$model());};})($r6$meta$model.$$.prototype);}
return $r6$meta$model;}
exports.$init$$r6$meta$model=$init$$r6$meta$model;$init$$r6$meta$model();var $rb$meta$model;function getNothingType$meta$model(){if($rb$meta$model===undefined){$rb$meta$model=$init$$r6$meta$model()({Type$Type:{t:Nothing}});$rb$meta$model.$crtmm$=getNothingType$meta$model.$crtmm$;}
return $rb$meta$model;}
exports.getNothingType$meta$model=getNothingType$meta$model;getNothingType$meta$model.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$r6$meta$model},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].nothingType.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','nothingType']};};$prop$getNothingType$meta$model={get:getNothingType$meta$model,$crtmm$:getNothingType$meta$model.$crtmm$};get$r6$meta$model=getNothingType$meta$model;$prop$get$r6$meta$model=getNothingType$meta$model;exports.$prop$getNothingType$meta$model=$prop$getNothingType$meta$model;function TypeApplicationException$meta$model($rc,$typeApplicationException){$init$TypeApplicationException$meta$model();if($typeApplicationException===undefined)$typeApplicationException=new TypeApplicationException$meta$model.$$;
$typeApplicationException.$rc_=$rc;Exception($typeApplicationException.$rc,undefined,$typeApplicationException);return $typeApplicationException;}
TypeApplicationException$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Exception},$ps:[{$nm:'message',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].TypeApplicationException.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','TypeApplicationException']};};
exports.TypeApplicationException$meta$model=TypeApplicationException$meta$model;function $init$TypeApplicationException$meta$model(){if(TypeApplicationException$meta$model.$$===undefined){initTypeProto(TypeApplicationException$meta$model,'ceylon.language.meta.model::TypeApplicationException',$init$Exception());
(function($typeApplicationException){$defat($typeApplicationException,'$rc',function(){return this.$rc_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:TypeApplicationException$meta$model,d:['ceylon.language.meta.model','TypeApplicationException','$at','message$mixz1b']};});})(TypeApplicationException$meta$model.$$.prototype);}
return TypeApplicationException$meta$model;}
exports.$init$TypeApplicationException$meta$model=$init$TypeApplicationException$meta$model;$init$TypeApplicationException$meta$model();function InvocationException$meta$model($rd,$invocationException){$init$InvocationException$meta$model();if($invocationException===undefined)$invocationException=new InvocationException$meta$model.$$;
$invocationException.$rd_=$rd;Exception($invocationException.$rd,undefined,$invocationException);return $invocationException;}
InvocationException$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Exception},$ps:[{$nm:'message',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].InvocationException.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','InvocationException']};};
exports.InvocationException$meta$model=InvocationException$meta$model;function $init$InvocationException$meta$model(){if(InvocationException$meta$model.$$===undefined){initTypeProto(InvocationException$meta$model,'ceylon.language.meta.model::InvocationException',$init$Exception());
(function($invocationException){$defat($invocationException,'$rd',function(){return this.$rd_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:InvocationException$meta$model,d:['ceylon.language.meta.model','InvocationException','$at','message$g89lkl']};});})(InvocationException$meta$model.$$.prototype);}
return InvocationException$meta$model;}
exports.$init$InvocationException$meta$model=$init$InvocationException$meta$model;$init$InvocationException$meta$model();function MutationException$meta$model($re,$mutationException){$init$MutationException$meta$model();if($mutationException===undefined)$mutationException=new MutationException$meta$model.$$;
$mutationException.$re_=$re;Exception($mutationException.$re,undefined,$mutationException);return $mutationException;}
MutationException$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Exception},$ps:[{$nm:'message',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$an:function(){return[doc("Thrown when you try to change the value of a non-variable value"),shared()];},d:['ceylon.language.meta.model','MutationException']};};
exports.MutationException$meta$model=MutationException$meta$model;function $init$MutationException$meta$model(){if(MutationException$meta$model.$$===undefined){initTypeProto(MutationException$meta$model,'ceylon.language.meta.model::MutationException',$init$Exception());
(function($mutationException){$defat($mutationException,'$re',function(){return this.$re_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:MutationException$meta$model,d:['ceylon.language.meta.model','MutationException','$at','message$b4sc8k']};});})(MutationException$meta$model.$$.prototype);}
return MutationException$meta$model;}
exports.$init$MutationException$meta$model=$init$MutationException$meta$model;$init$MutationException$meta$model();function IncompatibleTypeException$meta$model($rf,$incompatibleTypeException){$init$IncompatibleTypeException$meta$model();if($incompatibleTypeException===undefined)$incompatibleTypeException=new IncompatibleTypeException$meta$model.$$;
$incompatibleTypeException.$rf_=$rf;Exception($incompatibleTypeException.$rf,undefined,$incompatibleTypeException);return $incompatibleTypeException;}
IncompatibleTypeException$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Exception},$ps:[{$nm:'message',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].IncompatibleTypeException.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','IncompatibleTypeException']};};
exports.IncompatibleTypeException$meta$model=IncompatibleTypeException$meta$model;function $init$IncompatibleTypeException$meta$model(){if(IncompatibleTypeException$meta$model.$$===undefined){initTypeProto(IncompatibleTypeException$meta$model,'ceylon.language.meta.model::IncompatibleTypeException',$init$Exception());
(function($incompatibleTypeException){$defat($incompatibleTypeException,'$rf',function(){return this.$rf_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:IncompatibleTypeException$meta$model,d:['ceylon.language.meta.model','IncompatibleTypeException','$at','message$hu04ue']};});})(IncompatibleTypeException$meta$model.$$.prototype);}
return IncompatibleTypeException$meta$model;}
exports.$init$IncompatibleTypeException$meta$model=$init$IncompatibleTypeException$meta$model;$init$IncompatibleTypeException$meta$model();function Generic$meta$model($generic){}
Generic$meta$model.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc("A generic model which has closed type arguments."),shared()];},d:['ceylon.language.meta.model','Generic']};};
exports.Generic$meta$model=Generic$meta$model;function $init$Generic$meta$model(){if(Generic$meta$model.$$===undefined){initTypeProtoI(Generic$meta$model,'ceylon.language.meta.model::Generic');
(function($generic){$generic.$prop$getTypeArguments={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:{t:TypeParameter$meta$declaration},Item$Map:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:Generic$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Generic.$at.typeArguments.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.model','Generic','$at','typeArguments']};}};})(Generic$meta$model.$$.prototype);}
return Generic$meta$model;}
exports.$init$Generic$meta$model=$init$Generic$meta$model;$init$Generic$meta$model();function Applicable$meta$model($$targs$$,$applicable){set_type_args($applicable,$$targs$$);}
Applicable$meta$model.$crtmm$=function(){return{mod:$CCMM$,$tp:{Type$Applicable:{'var':'out','def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Applicable.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','Applicable']};};
exports.Applicable$meta$model=Applicable$meta$model;function $init$Applicable$meta$model(){if(Applicable$meta$model.$$===undefined){initTypeProtoI(Applicable$meta$model,'ceylon.language.meta.model::Applicable');
(function($applicable){$applicable.$apply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Type$Applicable',$ps:[{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:Applicable$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Applicable.$m.apply.$an.doc[0]),$throws("IncompatibleTypeException","If any argument is not assignable to this applicable\'s corresponding parameter"),$throws("InvocationException","If there are not enough or too many provided arguments"),shared(),formal()];},d:['ceylon.language.meta.model','Applicable','$m','apply']};}};$applicable.namedApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:'Type$Applicable',$ps:[{$nm:'arguments',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:Entry,a:{Item$Entry:{t:$Object},Key$Entry:{t:String$}}},Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$cont:Applicable$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Applicable.$m.namedApply.$an.doc[0]),$throws("IncompatibleTypeException","If any argument is not assignable to this applicable\'s corresponding parameter"),$throws("InvocationException","If there are not enough or too many provided arguments, \nor if the target does not support named invocation"),shared(),formal()];},d:['ceylon.language.meta.model','Applicable','$m','namedApply']};}};})(Applicable$meta$model.$$.prototype);}
return Applicable$meta$model;}
exports.$init$Applicable$meta$model=$init$Applicable$meta$model;$init$Applicable$meta$model();function $rg$meta$model(){var $nullArgument=new $rg$meta$model.$$;
return $nullArgument;
};$rg$meta$model.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].nullArgument.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','nullArgument']};};function $init$$rg$meta$model(){if($rg$meta$model.$$===undefined){initTypeProto($rg$meta$model,'ceylon.language.meta.model::nullArgument',Basic);
}
return $rg$meta$model;}
exports.$init$$rg$meta$model=$init$$rg$meta$model;$init$$rg$meta$model();var $rh$meta$model;function getNullArgument$meta$model(){if($rh$meta$model===undefined){$rh$meta$model=$init$$rg$meta$model()();$rh$meta$model.$crtmm$=getNullArgument$meta$model.$crtmm$;}
return $rh$meta$model;}
exports.getNullArgument$meta$model=getNullArgument$meta$model;getNullArgument$meta$model.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$rg$meta$model},$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].nullArgument.$an.doc[0]),shared()];},d:['ceylon.language.meta.model','nullArgument']};};$prop$getNullArgument$meta$model={get:getNullArgument$meta$model,$crtmm$:getNullArgument$meta$model.$crtmm$};get$rg$meta$model=getNullArgument$meta$model;$prop$get$rg$meta$model=getNullArgument$meta$model;exports.$prop$getNullArgument$meta$model=$prop$getNullArgument$meta$model;
function Declaration$meta$declaration($declaration){}
Declaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,of:[{t:AnnotatedDeclaration$meta$declaration},{t:TypeParameter$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Declaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','Declaration']};};
exports.Declaration$meta$declaration=Declaration$meta$declaration;function $init$Declaration$meta$declaration(){if(Declaration$meta$declaration.$$===undefined){initTypeProtoI(Declaration$meta$declaration,'ceylon.language.meta.declaration::Declaration');
(function($declaration){$declaration.$prop$getName={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Declaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Declaration.$at.name.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Declaration','$at','name']};}};$declaration.$prop$getQualifiedName={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Declaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Declaration.$at.qualifiedName.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};}};})(Declaration$meta$declaration.$$.prototype);}
return Declaration$meta$declaration;}
exports.$init$Declaration$meta$declaration=$init$Declaration$meta$declaration;$init$Declaration$meta$declaration();function AnnotatedDeclaration$meta$declaration($annotatedDeclaration){Declaration$meta$declaration($annotatedDeclaration);Annotated($annotatedDeclaration);}
AnnotatedDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Declaration$meta$declaration},{t:Annotated}],of:[{t:NestableDeclaration$meta$declaration},{t:Module$meta$declaration},{t:Package$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].AnnotatedDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','AnnotatedDeclaration']};};
exports.AnnotatedDeclaration$meta$declaration=AnnotatedDeclaration$meta$declaration;function $init$AnnotatedDeclaration$meta$declaration(){if(AnnotatedDeclaration$meta$declaration.$$===undefined){initTypeProtoI(AnnotatedDeclaration$meta$declaration,'ceylon.language.meta.declaration::AnnotatedDeclaration',$init$Declaration$meta$declaration(),$init$Annotated());
(function($annotatedDeclaration){$annotatedDeclaration.annotations={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Annotation$annotations'}},$ps:[],$cont:AnnotatedDeclaration$meta$declaration,$tp:{Annotation$annotations:{'var':'out','satisfies':[{t:Annotation}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].AnnotatedDeclaration.$m.annotations.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','AnnotatedDeclaration','$m','annotations']};}};})(AnnotatedDeclaration$meta$declaration.$$.prototype);}
return AnnotatedDeclaration$meta$declaration;}
exports.$init$AnnotatedDeclaration$meta$declaration=$init$AnnotatedDeclaration$meta$declaration;$init$AnnotatedDeclaration$meta$declaration();AnnotatedDeclaration$meta$declaration.$$.prototype.annotations=function ($$$mptypes) {
var ans = [];
var _mdl = getrtmm$$(this.tipo);
var _ans = _mdl.$an;
if (typeof(_ans)==='function') {
_ans = _ans();
_mdl.$an=_ans;
}
for (var i=0; i<_ans.length;i++) {
if ($is(_ans[i], $$$mptypes.Annotation$annotations)) {
ans.push(_ans[i]);
}
}
return ans.length == 0 ? getEmpty() : ans.reifyCeylonType({Element$Iterable:$$$mptypes.Annotation$annotations});
};
AnnotatedDeclaration$meta$declaration.$$.prototype.annotations.$crtmm$=function(){return{mod:$CCMM$,
$t:{t:Sequential,a:{Element$Iterable:'Annotation'}},$ps:[],$cont:AnnotatedDeclaration$meta$declaration,$tp:{Annotation$annotations:{'var':'out','satisfies':[{t:Annotation,a:{Value$Annotation:'Annotation'}}]}},$an:function(){return[shared(),formal()];},d:['ceylon.language.meta.declaration','AnnotatedDeclaration','$m','annotations']};};
function NestableDeclaration$meta$declaration($nestableDeclaration){AnnotatedDeclaration$meta$declaration($nestableDeclaration);TypedDeclaration$meta$declaration($nestableDeclaration);}
NestableDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:AnnotatedDeclaration$meta$declaration},{t:TypedDeclaration$meta$declaration}],of:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration},{t:SetterDeclaration$meta$declaration},{t:AliasDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].NestableDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','NestableDeclaration']};};
exports.NestableDeclaration$meta$declaration=NestableDeclaration$meta$declaration;function $init$NestableDeclaration$meta$declaration(){if(NestableDeclaration$meta$declaration.$$===undefined){initTypeProtoI(NestableDeclaration$meta$declaration,'ceylon.language.meta.declaration::NestableDeclaration',$init$AnnotatedDeclaration$meta$declaration(),$init$TypedDeclaration$meta$declaration());
(function($nestableDeclaration){$nestableDeclaration.$prop$getActual={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is annotated with [[actual|ceylon.language::actual]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','actual']};}};$nestableDeclaration.$prop$getFormal={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is annotated with [[formal|ceylon.language::formal]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','formal']};}};$nestableDeclaration.$prop$getDefault={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is annotated with [[default|ceylon.language::default]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','default']};}};$nestableDeclaration.$prop$getShared={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is annotated with [[shared|ceylon.language::shared]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','shared']};}};$nestableDeclaration.$prop$getContainingPackage={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("This declaration\'s package container."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','containingPackage']};}};$nestableDeclaration.$prop$getContainingModule={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("This declaration\'s module container."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','containingModule']};}};$nestableDeclaration.$prop$getContainer={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].NestableDeclaration.$at.container.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','container']};}};$nestableDeclaration.$prop$getToplevel={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:NestableDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is a toplevel declaration."),shared(),formal()];},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','toplevel']};}};})(NestableDeclaration$meta$declaration.$$.prototype);}
return NestableDeclaration$meta$declaration;}
exports.$init$NestableDeclaration$meta$declaration=$init$NestableDeclaration$meta$declaration;$init$NestableDeclaration$meta$declaration();$defat(NestableDeclaration$meta$declaration.$$.prototype,'actual',function(){
return $findAnnotation(this.tipo,ActualAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:NestableDeclaration$meta$declaration,d:['ceylon.language.meta.declaration','NestableDeclaration','$at','actual']};});
$defat(NestableDeclaration$meta$declaration.$$.prototype,'formal',function(){
return $findAnnotation(this.tipo,FormalAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:NestableDeclaration$meta$declaration,d:['ceylon.language.meta.declaration','NestableDeclaration','$at','formal']};});
$defat(NestableDeclaration$meta$declaration.$$.prototype,'$default',function(){
return $findAnnotation(this.tipo,DefaultAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:NestableDeclaration$meta$declaration,d:['ceylon.language.meta.declaration','NestableDeclaration','$at','default']};});
$defat(NestableDeclaration$meta$declaration.$$.prototype,'shared',function(){
return $findAnnotation(this.tipo,SharedAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:NestableDeclaration$meta$declaration,d:['ceylon.language.meta.declaration','NestableDeclaration','$at','shared']};});
function GenericDeclaration$meta$declaration($genericDeclaration){}
GenericDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc("A declaration that can have type parameters."),shared()];},d:['ceylon.language.meta.declaration','GenericDeclaration']};};
exports.GenericDeclaration$meta$declaration=GenericDeclaration$meta$declaration;function $init$GenericDeclaration$meta$declaration(){if(GenericDeclaration$meta$declaration.$$===undefined){initTypeProtoI(GenericDeclaration$meta$declaration,'ceylon.language.meta.declaration::GenericDeclaration');
(function($genericDeclaration){$genericDeclaration.$prop$getTypeParameterDeclarations={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:TypeParameter$meta$declaration}}},$cont:GenericDeclaration$meta$declaration,$an:function(){return[doc("The list of type parameters declared on this generic declaration."),shared(),formal()];},d:['ceylon.language.meta.declaration','GenericDeclaration','$at','typeParameterDeclarations']};}};$genericDeclaration.getTypeParameterDeclaration={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:TypeParameter$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:GenericDeclaration$meta$declaration,$an:function(){return[doc("Finds a type parameter by name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','GenericDeclaration','$m','getTypeParameterDeclaration']};}};})(GenericDeclaration$meta$declaration.$$.prototype);}
return GenericDeclaration$meta$declaration;}
exports.$init$GenericDeclaration$meta$declaration=$init$GenericDeclaration$meta$declaration;$init$GenericDeclaration$meta$declaration();$defat(GenericDeclaration$meta$declaration.$$.prototype,'typeParameterDeclarations',function(){
if (this.tipo) {
var mm=getrtmm$$(this.tipo);
var tps=mm.$tp;
if (tps) {
var rv=[];
for (var tp in tps) {
rv.push(OpenTypeParam(this.tipo,tp));
}
return ArraySequence(rv,{Element$Iterable:{t:TypeParameter$meta$declaration}});
}
return getEmpty();
}
console.log("TODO GenericDeclaration.typeParameterDeclarations without a type");
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:TypeParameter$meta$declaration}}},$cont:GenericDeclaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','GenericDeclaration','$at','typeParameterDeclarations']};});
GenericDeclaration$meta$declaration.$$.prototype.getTypeParameterDeclaration=function (name$14){
if (this.tipo) {
var mm=getrtmm$$(this.tipo);
var tps=mm.$tp;
if (tps) {
for (var tp in tps) {
var tpnm = tp;
if (tp.indexOf('$')>0)tpnm=tp.substring(0,tp.indexOf('$'));
if (name$14==tpnm) {
return OpenTypeParam(this.tipo,tp);
}
}
}
return null;
}
console.log("TODO GenericDeclaration.getTypeParameterDeclaration(" + name$14 + ") without a type");
return null;
};
GenericDeclaration$meta$declaration.$$.prototype.getTypeParameterDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:TypeParameter$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:GenericDeclaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','GenericDeclaration','$m','getTypeParameterDeclaration']};};
function ClassOrInterfaceDeclaration$meta$declaration($classOrInterfaceDeclaration){NestableDeclaration$meta$declaration($classOrInterfaceDeclaration);GenericDeclaration$meta$declaration($classOrInterfaceDeclaration);}
ClassOrInterfaceDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:NestableDeclaration$meta$declaration},{t:GenericDeclaration$meta$declaration}],of:[{t:ClassDeclaration$meta$declaration},{t:InterfaceDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration']};};
exports.ClassOrInterfaceDeclaration$meta$declaration=ClassOrInterfaceDeclaration$meta$declaration;function $init$ClassOrInterfaceDeclaration$meta$declaration(){if(ClassOrInterfaceDeclaration$meta$declaration.$$===undefined){initTypeProtoI(ClassOrInterfaceDeclaration$meta$declaration,'ceylon.language.meta.declaration::ClassOrInterfaceDeclaration',$init$NestableDeclaration$meta$declaration(),$init$GenericDeclaration$meta$declaration());
(function($classOrInterfaceDeclaration){$classOrInterfaceDeclaration.$prop$getExtendedType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:OpenClassType$meta$declaration}]},$cont:ClassOrInterfaceDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$at.extendedType.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$at','extendedType']};}};$classOrInterfaceDeclaration.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenInterfaceType$meta$declaration}}},$cont:ClassOrInterfaceDeclaration$meta$declaration,$an:function(){return[doc("The list of types satisfied by this type."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$at','satisfiedTypes']};}};$classOrInterfaceDeclaration.$prop$getCaseTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:ClassOrInterfaceDeclaration$meta$declaration,$an:function(){return[doc("If this type has an `of` clause, this is the list of case types for the current type."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$at','caseTypes']};}};$classOrInterfaceDeclaration.$prop$getIsAlias={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:ClassOrInterfaceDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$at.isAlias.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$at','isAlias']};}};$classOrInterfaceDeclaration.memberDeclarations={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$memberDeclarations'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$memberDeclarations:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.memberDeclarations.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','memberDeclarations']};}};$classOrInterfaceDeclaration.declaredMemberDeclarations={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$declaredMemberDeclarations'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$declaredMemberDeclarations:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.declaredMemberDeclarations.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','declaredMemberDeclarations']};}};$classOrInterfaceDeclaration.annotatedMemberDeclarations={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$annotatedMemberDeclarations'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$annotatedMemberDeclarations:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation$annotatedMemberDeclarations:{'satisfies':[{t:Annotation}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.annotatedMemberDeclarations.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','annotatedMemberDeclarations']};}};$classOrInterfaceDeclaration.annotatedDeclaredMemberDeclarations={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$annotatedDeclaredMemberDeclarations'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$annotatedDeclaredMemberDeclarations:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation$annotatedDeclaredMemberDeclarations:{'satisfies':[{t:Annotation}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.annotatedDeclaredMemberDeclarations.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','annotatedDeclaredMemberDeclarations']};}};$classOrInterfaceDeclaration.getMemberDeclaration={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Kind$getMemberDeclaration']},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$getMemberDeclaration:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.getMemberDeclaration.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','getMemberDeclaration']};}};$classOrInterfaceDeclaration.getDeclaredMemberDeclaration={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Kind$getDeclaredMemberDeclaration']},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Kind$getDeclaredMemberDeclaration:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.getDeclaredMemberDeclaration.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','getDeclaredMemberDeclaration']};}};$classOrInterfaceDeclaration.$apply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:'Type$apply'}},$ps:[{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Type$apply:{'def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.apply.$an.doc[0]),$throws("IncompatibleTypeException","If the specified `Type` type argument is not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','apply']};}};$classOrInterfaceDeclaration.memberApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'i',l:[{t:Member$meta$model,a:{Kind$Member:{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:'Type$memberApply'}},Container$Member:'Container$memberApply'}},{t:ClassOrInterface$meta$model,a:{Type$ClassOrInterface:'Type$memberApply'}}]},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:'Container$memberApply'}},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassOrInterfaceDeclaration$meta$declaration,$tp:{Container$memberApply:{'def':{t:Nothing}},Type$memberApply:{'def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassOrInterfaceDeclaration.$m.memberApply.$an.doc[0]),$throws("IncompatibleTypeException","If the specified `Container` or `Type` type arguments are not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result\'s container type or type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','memberApply']};}};})(ClassOrInterfaceDeclaration$meta$declaration.$$.prototype);}
return ClassOrInterfaceDeclaration$meta$declaration;}
exports.$init$ClassOrInterfaceDeclaration$meta$declaration=$init$ClassOrInterfaceDeclaration$meta$declaration;$init$ClassOrInterfaceDeclaration$meta$declaration();function FunctionalDeclaration$meta$declaration($functionalDeclaration){}
FunctionalDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionalDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration']};};
exports.FunctionalDeclaration$meta$declaration=FunctionalDeclaration$meta$declaration;function $init$FunctionalDeclaration$meta$declaration(){if(FunctionalDeclaration$meta$declaration.$$===undefined){initTypeProtoI(FunctionalDeclaration$meta$declaration,'ceylon.language.meta.declaration::FunctionalDeclaration');
(function($functionalDeclaration){$functionalDeclaration.$prop$getAnnotation={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:FunctionalDeclaration$meta$declaration,$an:function(){return[doc("True if the current declaration is an annotation class or function."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$at','annotation']};}};$functionalDeclaration.$prop$getParameterDeclarations={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:FunctionOrValueDeclaration$meta$declaration}}},$cont:FunctionalDeclaration$meta$declaration,$an:function(){return[doc("The list of parameter declarations for this functional declaration."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$at','parameterDeclarations']};}};$functionalDeclaration.getParameterDeclaration={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:FunctionOrValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:FunctionalDeclaration$meta$declaration,$an:function(){return[doc("Gets a parameter declaration by name. Returns `null` if no such parameter exists."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$m','getParameterDeclaration']};}};})(FunctionalDeclaration$meta$declaration.$$.prototype);}
return FunctionalDeclaration$meta$declaration;}
exports.$init$FunctionalDeclaration$meta$declaration=$init$FunctionalDeclaration$meta$declaration;$init$FunctionalDeclaration$meta$declaration();ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.getMemberDeclaration=function(name$20,$$$mptypes,noInherit){
var _m=undefined;
if (extendsType($$$mptypes.Kind$getMemberDeclaration, {t:ValueDeclaration$meta$declaration})) {
var propname='$prop$get'+name$20[0].toUpperCase()+name$20.substring(1);
var _d = this.tipo.$$.prototype[propname];
if (_d){
if (noInherit) {
var mm=getrtmm$$(_d);
if (mm.$cont!==this.tipo)return null;
}
_m=OpenValue(this.containingPackage, _d);
}
}
if (!_m && extendsType($$$mptypes.Kind$getMemberDeclaration, {t:FunctionDeclaration$meta$declaration})) {
var nom=name$20;
if (this.tipo===String$ && ['split','replace','filter','every','map','sort','slice'].indexOf(nom)>=0)nom='$'+nom;
var _d = this.tipo.$$.prototype[nom];
if (_d===undefined) {
for (var $k in this.tipo.$$.prototype) {
var propname='$prop$get'+$k[0].toUpperCase()+$k.substring(1);
if (!$k.startsWith("$prop$get") && this.tipo.$$.prototype[propname]===undefined && typeof(this.tipo.$$.prototype[$k])==='function') {
var lafun=this.tipo.$$.prototype[$k];
var mm=getrtmm$$(lafun);
var mod=mm&&get_model(mm);
if (mod && mod.$nm===nom) {
_d=lafun; break;
}
}
var m$ = this.tipo.$$.prototype[propname] ? undefined: this.tipo.$$.prototype[$k];
_d = typeof(m$)==='function' && m$.$$===undefined ? getrtmm$$(m$) : undefined;
if (_d && _d.d && _d.d[_d.d.length-1]===nom){
_d = this.tipo.$$.prototype[$k];
break;
}else _d=undefined;
}
}
if(_d){
if (noInherit) {
var mm=getrtmm$$(_d);
if (mm.$cont!==this.tipo)return null;
}
_m=OpenFunction(this.containingPackage, _d);
}
}
if (!_m && extendsType($$$mptypes.Kind$getMemberDeclaration, {t:ClassOrInterfaceDeclaration$meta$declaration})) {
var nom=name$20+'$'+this.name;
var _d = this.tipo.$$.prototype[nom];
if (_d===undefined) {
for (var $k in this.tipo.$$.prototype) {
var propname='$prop$get'+$k[0].toUpperCase()+$k.substring(1);
var m$ = this.tipo.$$.prototype[propname] ? undefined: this.tipo.$$.prototype[$k];
_d = typeof(m$)==='function' && m$.$$ ? getrtmm$$(m$) : undefined;
if (_d && _d.d && _d.d[_d.d.length-1]===nom){
_d = this.tipo.$$.prototype[$k];
break;
}else _d=undefined;
}
}
if (!_d) {
if (noInherit)return null;
var pere=this.tipo.$crtmm$['super'];
while (!_d && pere) {
var mm=getrtmm$$(pere.t);
nom=mm&&mm.d?name$20+'$'+mm.d[mm.d.length-1]:undefined;
if(nom)_d=this.tipo.$$.prototype[nom];
if (!_d)pere=mm['super'];
}
}
if(_d){
var wantsClass=extendsType($$$mptypes.Kind$getMemberDeclaration,{t:ClassDeclaration$meta$declaration});
var wantsIface=extendsType($$$mptypes.Kind$getMemberDeclaration,{t:InterfaceDeclaration$meta$declaration});
var _$m = getrtmm$$(_d);
var _mdl=get_model(_$m);
if ((wantsClass && _mdl.$mt!=='c') || (wantsIface && _mdl.$mt!=='i'))return null;
_m=(_mdl.$mt==='c'?OpenClass:OpenInterface)(this.containingPackage, _d);
}
}
if (_m) {
_m.$parent=this;
return _m;
}
return null;
};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.getMemberDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},'Kind']},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:OpenClass,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','getMemberDeclaration']};};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.getDeclaredMemberDeclaration=function(nm,$mptypes){
return this.getMemberDeclaration(nm,{Kind$getMemberDeclaration:$mptypes.Kind$getDeclaredMemberDeclaration},1);
}
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.getDeclaredMemberDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},'Kind']},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:OpenClass,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','getDeclaredMemberDeclaration']};};
$defat(FunctionalDeclaration$meta$declaration.$$.prototype,'parameterDeclarations',function(){
var that=this;
var parms = that.tipo.$crtmm$.$ps;
if (!parms || parms.length === 0)return getEmpty();
var rv = [];
for (var i=0; i<parms.length;i++) {
var p = parms[i];
if (p.$pt === 'f') {
rv.push(FunParamDecl(this,p));
} else {
rv.push(ValParamDecl(this,p));
}
}
return ArraySequence(rv,{Element$Iterable:{t:FunctionOrValueDeclaration$meta$declaration},Absent$Iterable:{t:Null}});
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:FunctionOrValueDeclaration$meta$declaration}}},$cont:FunctionalDeclaration$meta$declaration,$an:function(){return[shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$at','parameterDeclarations']};});
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.memberDeclarations=function($$$mptypes){
var filter;
var defs=[];
if (extendsType({t:FunctionDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations)) {
for (var df in this.meta['$m']) {
defs.push(this.meta['$m'][df]);
}
}
if (extendsType({t:ValueDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations)) {
for (var df in this.meta['$at']) {
defs.push(this.meta['$at'][df]);
}
}
if (extendsType({t:InterfaceDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations)) {
for (var df in this.meta['$i']) {
defs.push(this.meta['$i'][df]);
}
}
if (extendsType({t:ClassDeclaration$meta$declaration},$$$mptypes.Kind$memberDeclarations)) {
for (var df in this.meta['$c']) {
defs.push(this.meta['$c'][df]);
}
}
var pkg = this.containingPackage;
var r=[];
for (var i=0; i<defs.length; i++) {
var m=defs[i];
var mt = m['$mt'];
var _d;
if (mt === 'm') {
_d=this.getMemberDeclaration(m.$nm, {Kind$getMemberDeclaration:{t:FunctionDeclaration$meta$declaration}});
} else if (mt==='c') {
_d=this.getMemberDeclaration(m.$nm, {Kind$getMemberDeclaration:{t:ClassDeclaration$meta$declaration}});
} else if (mt==='i') {
_d=this.getMemberDeclaration(m.$nm, {Kind$getMemberDeclaration:{t:InterfaceDeclaration$meta$declaration}});
} else if (mt==='a'||mt==='g'||mt==='o'||mt==='s') {
_d=this.getMemberDeclaration(m.$nm, {Kind$getMemberDeclaration:{t:ValueDeclaration$meta$declaration}});
}
if (_d) {
_d.$parent=this;
r.push(_d);
}
}
return ArraySequence(r,{Element$Iterable:$$$mptypes.Kind$memberDeclarations});
};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.memberDeclarations.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind'}},$ps:[],$cont:OpenInterface,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','memberDeclarations']};};
$defat(ClassOrInterfaceDeclaration$meta$declaration.$$.prototype,'caseTypes',function(){
var casos = this.tipo.$crtmm$.of;
if (casos && casos.length > 0) {
var ct=[]; var ta=[];
for (var i=0; i < casos.length; i++) {
if (typeof(casos[i])==='string') {
ct.push(OpenTvar(OpenTypeParam(this, casos[i])));
if (!ta.contains(OpenTypeVariable$meta$declaration))ta.push(OpenTypeVariable$meta$declaration);
} else {
var _t=casos[i];
if (typeof(_t)==='function')_t=getrtmm$$(_t).$t;
var ot=_openTypeFromTarg(_t);
ct.push(ot);
if ($is(ot,{t:OpenClassType$meta$declaration}) && !ta.contains(OpenClassType$meta$declaration))ta.push(OpenClassType$meta$declaration);
else if ($is(ot,{t:OpenInterfaceType$meta$declaration})&&!ta.contains(OpenInterfaceType$meta$declaration))ta.push(OpenInterfaceType$meta$declaration);
}
}
if (ta.length===0)ta={t:OpenType$meta$declaration};
else if (ta.length===1)ta={t:ta[0]};
else {
for (var i=0;i<ta.length;i++)ta[i]={t:ta[i]};
ta={t:'u',l:ta};
}
return ArraySequence(ct,{Element$Iterable:ta});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:ClassOrInterfaceDeclaration$meta$declaration,$an:function(){return[shared(),formal()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$at','caseTypes']};});
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.$apply=function(types,$mptypes){
var _t = {t:this.tipo};
var _m = getrtmm$$(this.tipo);
validate$typeparams(_t,_m.$tp,types);
if (!extendsType(_t, $mptypes.Type$apply))
throw IncompatibleTypeException$meta$model(String$("Type argument for 'Type' must be a supertype of " + this));
var rv=this.meta.$mt==='i'?AppliedInterface(_t.t, {Type$Interface:$mptypes.Type$apply}):
AppliedClass(_t.t, {Type$Class:$mptypes.Type$apply,Arguments$Class:$mptypes.Arguments$apply});
if (_t.a)rv.$targs=_t.a;
return rv;
}
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.$apply.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','apply']};};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.memberApply=function(cont, types,$mptypes) {
var mm=getrtmm$$(this.tipo);
if (!extendsType({t:cont.tipo},{t:mm.$cont}))throw IncompatibleTypeException$meta$model("Incompatible Container type");
var _t = {t:this.tipo};
validate$typeparams(_t,mm.$tp,types);
if (!extendsType(_t, $mptypes.Type$memberApply))
throw IncompatibleTypeException$meta$model(String$("Type argument for 'Type' must be a supertype of " + this));
var rv=this.meta.$mt==='i'?AppliedMemberInterface(_t.t, {Container$MemberInterface:$mptypes.Container$memberApply, Type$MemberInterface:_t})
:AppliedMemberClass(_t.t, {Container$MemberClass:$mptypes.Container$memberApply, Type$MemberClass:_t, Arguments$MemberClass:$mptypes.Arguments$memberApply});
if (_t.a)rv.$targs=_t.a;
return rv;
};ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.memberApply.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','memberApply']};};
$defat(ClassOrInterfaceDeclaration$meta$declaration.$$.prototype,'container',function(){
if (this.$parent)return this.$parent;
var mm=getrtmm$$(this.tipo);
var _c=mm.$cont;
if (_c) {
if (_c.t === undefined && _c.get && _c.$crtmm$) {
return OpenValue(this.containingPackage, _c);
}
return typeLiteral$meta({Type$typeLiteral:_c});
}
return this.containingPackage;
},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},d:['ceylon.language.meta.declaration.NestableDeclaration','$at','container']};});
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.annotatedMemberDeclarations=function($$$mptypes,list){
if (list===undefined)list=this.memberDeclarations({Kind$memberDeclarations:$$$mptypes.Kind$annotatedMemberDeclarations});
if (list.length) {
var rv=[];
for (var i=0; i < list.length; i++) {
var mm = getrtmm$$(list[i].tipo);
var anns = mm&&mm.$an;
if (typeof(anns)==='function'){anns=anns();mm.$an=anns;}
if (anns) for (var j=0; j<anns.length; j++) {
if ($is(anns[j],$$$mptypes.Annotation$annotatedMemberDeclarations)) {
rv.push(list[i]);
break;
}
}
}
if (rv.length)return ArraySequence(rv,{Element$Iterable:$$$mptypes.Kind$annotatedMemberDeclarations});
}
return getEmpty();
};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.annotatedMemberDeclarations.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declarationl,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation:{}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','annotatedMemberDeclarations']};};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.annotatedDeclaredMemberDeclarations=function ($$$mptypes){
return this.annotatedMemberDeclarations({Kind$annotatedMemberDeclarations:$$$mptypes.Kind$annotatedDeclaredMemberDeclarations,
Annotation$annotatedMemberDeclarations:$$$mptypes.Annotation$annotatedDeclaredMemberDeclarations},
this.memberDeclarations({Kind$memberDeclarations:$$$mptypes.Kind$annotatedDeclaredMemberDeclarations}));
};
ClassOrInterfaceDeclaration$meta$declaration.$$.prototype.annotatedDeclaredMemberDeclarations.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind'}},$ps:[],$cont:ClassOrInterfaceDeclaration$meta$declarationl,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation:{}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassOrInterfaceDeclaration','$m','annotatedDeclaredMemberDeclarations']};};
function FunctionOrValueDeclaration$meta$declaration($functionOrValueDeclaration){NestableDeclaration$meta$declaration($functionOrValueDeclaration);}
FunctionOrValueDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:NestableDeclaration$meta$declaration}],of:[{t:FunctionDeclaration$meta$declaration},{t:ValueDeclaration$meta$declaration}],$an:function(){return[doc("A function or value declaration."),shared()];},d:['ceylon.language.meta.declaration','FunctionOrValueDeclaration']};};
exports.FunctionOrValueDeclaration$meta$declaration=FunctionOrValueDeclaration$meta$declaration;function $init$FunctionOrValueDeclaration$meta$declaration(){if(FunctionOrValueDeclaration$meta$declaration.$$===undefined){initTypeProtoI(FunctionOrValueDeclaration$meta$declaration,'ceylon.language.meta.declaration::FunctionOrValueDeclaration',$init$NestableDeclaration$meta$declaration());
(function($functionOrValueDeclaration){$functionOrValueDeclaration.$prop$getParameter={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:FunctionOrValueDeclaration$meta$declaration,$an:function(){return[doc("True if this function or value is a parameter to a [[FunctionalDeclaration]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionOrValueDeclaration','$at','parameter']};}};$functionOrValueDeclaration.$prop$getDefaulted={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:FunctionOrValueDeclaration$meta$declaration,$an:function(){return[doc("True if this function or value is a parameter and has a default value."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionOrValueDeclaration','$at','defaulted']};}};$functionOrValueDeclaration.$prop$getVariadic={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:FunctionOrValueDeclaration$meta$declaration,$an:function(){return[doc("True if this function or value is a parameter and is variadic (accepts a list of values)."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionOrValueDeclaration','$at','variadic']};}};})(FunctionOrValueDeclaration$meta$declaration.$$.prototype);}
return FunctionOrValueDeclaration$meta$declaration;}
exports.$init$FunctionOrValueDeclaration$meta$declaration=$init$FunctionOrValueDeclaration$meta$declaration;$init$FunctionOrValueDeclaration$meta$declaration();function ValueDeclaration$meta$declaration($valueDeclaration){FunctionOrValueDeclaration$meta$declaration($valueDeclaration);}
ValueDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:FunctionOrValueDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','ValueDeclaration']};};
exports.ValueDeclaration$meta$declaration=ValueDeclaration$meta$declaration;function $init$ValueDeclaration$meta$declaration(){if(ValueDeclaration$meta$declaration.$$===undefined){initTypeProtoI(ValueDeclaration$meta$declaration,'ceylon.language.meta.declaration::ValueDeclaration',$init$FunctionOrValueDeclaration$meta$declaration());
(function($valueDeclaration){$valueDeclaration.$prop$getVariable={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("True if this declaration is annotated with [[variable|ceylon.language::variable]]."),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','variable']};}};$valueDeclaration.$prop$getIsObject={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$at.isObject.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','isObject']};}};$valueDeclaration.$prop$getObjectDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:ClassDeclaration$meta$declaration}]},$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$at.objectDeclaration.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','objectDeclaration']};}};$valueDeclaration.$apply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Value$meta$model,a:{Set$Value:'Set$apply',Get$Value:'Get$apply'}},$ps:[],$cont:ValueDeclaration$meta$declaration,$tp:{Get$apply:{'def':{t:Anything}},Set$apply:{'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$m.apply.$an.doc[0]),$throws("IncompatibleTypeException","If the specified `Get` or `Set` type arguments are not compatible with the actual result."),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','apply']};}};$valueDeclaration.memberApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Attribute$meta$model,a:{Container$Attribute:'Container$memberApply',Set$Attribute:'Set$memberApply',Get$Attribute:'Get$memberApply'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:'Container$memberApply'}},$an:function(){return[];}}],$cont:ValueDeclaration$meta$declaration,$tp:{Container$memberApply:{'def':{t:Nothing}},Get$memberApply:{'def':{t:Anything}},Set$memberApply:{'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$m.memberApply.$an.doc[0]),$throws("IncompatibleTypeException","If the specified `Container`, `Get` or `Set` type arguments are not compatible with the actual result."),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','memberApply']};}};$valueDeclaration.$get=function (){var $valueDeclaration=this;return $valueDeclaration.$apply({Set$apply:{t:Nothing},Get$apply:{t:Anything}}).$get();};$valueDeclaration.$get.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[],$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("Reads the current value of this toplevel value."),shared(),$default()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','get']};};$valueDeclaration.memberGet=function ($ri){var $valueDeclaration=this;return $valueDeclaration.memberApply(getNothingType$meta$model(),{Set$memberApply:{t:Nothing},Container$memberApply:{t:Nothing},Get$memberApply:{t:Anything}}).$bind($ri).$get();};$valueDeclaration.memberGet.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'container',$mt:'prm',$t:{t:$Object},$an:function(){return[];}}],$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("Reads the current value of this attribute on the given container instance."),$throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta.model'),IncompatibleTypeException$meta$model),"If the specified container is not compatible with this attribute."),shared(),$default()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','memberGet']};};$valueDeclaration.set=function ($rj){var $valueDeclaration=this;return $valueDeclaration.$apply({Set$apply:{t:Nothing},Get$apply:{t:Anything}}).setIfAssignable($rj);};$valueDeclaration.set.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'newValue',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("Sets the current value of this toplevel value."),shared(),$default()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','set']};};$valueDeclaration.memberSet={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'container',$mt:'prm',$t:{t:$Object},$an:function(){return[];}},{$nm:'newValue',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc("Sets the current value of this attribute on the given container instance."),$throws("IncompatibleTypeException","If the specified container or new value type is not compatible with this attribute."),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','memberSet']};}};$valueDeclaration.$prop$getSetter={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:SetterDeclaration$meta$declaration}]},$cont:ValueDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ValueDeclaration.$at.setter.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','setter']};}};})(ValueDeclaration$meta$declaration.$$.prototype);}
return ValueDeclaration$meta$declaration;}
exports.$init$ValueDeclaration$meta$declaration=$init$ValueDeclaration$meta$declaration;$init$ValueDeclaration$meta$declaration();function ClassDeclaration$meta$declaration($classDeclaration){ClassOrInterfaceDeclaration$meta$declaration($classDeclaration);FunctionalDeclaration$meta$declaration($classDeclaration);}
ClassDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:ClassOrInterfaceDeclaration$meta$declaration},{t:FunctionalDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','ClassDeclaration']};};
exports.ClassDeclaration$meta$declaration=ClassDeclaration$meta$declaration;function $init$ClassDeclaration$meta$declaration(){if(ClassDeclaration$meta$declaration.$$===undefined){initTypeProtoI(ClassDeclaration$meta$declaration,'ceylon.language.meta.declaration::ClassDeclaration',$init$ClassOrInterfaceDeclaration$meta$declaration(),$init$FunctionalDeclaration$meta$declaration());
(function($classDeclaration){$classDeclaration.$prop$getAbstract={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:ClassDeclaration$meta$declaration,$an:function(){return[doc("True if the class has an [[abstract|ceylon.language::abstract]] annotation."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','abstract']};}};$classDeclaration.$prop$getAnonymous={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:ClassDeclaration$meta$declaration,$an:function(){return[doc("True if the class is an object class."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','anonymous']};}};$classDeclaration.$prop$getFinal={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:ClassDeclaration$meta$declaration,$an:function(){return[doc("True if the class has a [[final|ceylon.language::final]] annotation."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','final']};}};$classDeclaration.classApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Class$meta$model,a:{Type$Class:'Type$classApply',Arguments$Class:'Arguments$classApply'}},$ps:[{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassDeclaration$meta$declaration,$tp:{Type$classApply:{'def':{t:Anything}},Arguments$classApply:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassDeclaration.$m.classApply.$an.doc[0]),$throws("IncompatibleTypeException","If the specified `Type` or `Arguments` type arguments are not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$m','classApply']};}};$classDeclaration.memberClassApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:MemberClass$meta$model,a:{Container$MemberClass:'Container$memberClassApply',Arguments$MemberClass:'Arguments$memberClassApply',Type$MemberClass:'Type$memberClassApply'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:'Container$memberClassApply'}},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:ClassDeclaration$meta$declaration,$tp:{Container$memberClassApply:{'def':{t:Nothing}},Type$memberClassApply:{'def':{t:Anything}},Arguments$memberClassApply:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassDeclaration.$m.memberClassApply.$an.doc[0]),$throws("IncompatibleTypeException","If the specified `Container`, `Type` or `Arguments` type arguments are not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result\'s container type or type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$m','memberClassApply']};}};$classDeclaration.instantiate$defs$typeArguments=function($rk,$rl){var $classDeclaration=this;return getEmpty();};$classDeclaration.instantiate=function ($rk,$rl){var $classDeclaration=this;if($rk===undefined){$rk=$classDeclaration.instantiate$defs$typeArguments($rk,$rl);}
if($rl===undefined){$rl=getEmpty();}
return $classDeclaration.classApply($rk,{Arguments$classApply:{t:Nothing},Type$classApply:{t:Anything}}).$apply($rl);};$classDeclaration.instantiate.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'typeArguments',$mt:'prm',$def:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}},{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:ClassDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassDeclaration.$m.instantiate.$an.doc[0]),$throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta.model'),IncompatibleTypeException$meta$model),"If the specified type or value arguments are not compatible with this toplevel class."),shared(),$default()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$m','instantiate']};};$classDeclaration.memberInstantiate$defs$typeArguments=function($rm,$rn,$ro){var $classDeclaration=this;return getEmpty();};$classDeclaration.memberInstantiate=function ($rm,$rn,$ro){var $classDeclaration=this;if($rn===undefined){$rn=$classDeclaration.memberInstantiate$defs$typeArguments($rm,$rn,$ro);}
if($ro===undefined){$ro=getEmpty();}
return $classDeclaration.memberClassApply(getNothingType$meta$model(),$rn,{Type$memberClassApply:{t:Anything},Arguments$memberClassApply:{t:Nothing},Container$memberClassApply:{t:Nothing}}).$bind($rm).$apply($ro);};$classDeclaration.memberInstantiate.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'container',$mt:'prm',$t:{t:$Object},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',$def:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}},{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:ClassDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].ClassDeclaration.$m.memberInstantiate.$an.doc[0]),$throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta.model'),IncompatibleTypeException$meta$model),"If the specified container, type or value arguments are not compatible with this method."),shared(),$default()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$m','memberInstantiate']};};})(ClassDeclaration$meta$declaration.$$.prototype);}
return ClassDeclaration$meta$declaration;}
exports.$init$ClassDeclaration$meta$declaration=$init$ClassDeclaration$meta$declaration;$init$ClassDeclaration$meta$declaration();function FunctionDeclaration$meta$declaration($functionDeclaration){FunctionOrValueDeclaration$meta$declaration($functionDeclaration);GenericDeclaration$meta$declaration($functionDeclaration);FunctionalDeclaration$meta$declaration($functionDeclaration);}
FunctionDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:FunctionOrValueDeclaration$meta$declaration},{t:GenericDeclaration$meta$declaration},{t:FunctionalDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','FunctionDeclaration']};};
exports.FunctionDeclaration$meta$declaration=FunctionDeclaration$meta$declaration;function $init$FunctionDeclaration$meta$declaration(){if(FunctionDeclaration$meta$declaration.$$===undefined){initTypeProtoI(FunctionDeclaration$meta$declaration,'ceylon.language.meta.declaration::FunctionDeclaration',$init$FunctionOrValueDeclaration$meta$declaration(),$init$GenericDeclaration$meta$declaration(),$init$FunctionalDeclaration$meta$declaration());
(function($functionDeclaration){$functionDeclaration.$apply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Function$meta$model,a:{Type$Function:'Return$apply',Arguments$Function:'Arguments$apply'}},$ps:[{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:FunctionDeclaration$meta$declaration,$tp:{Return$apply:{'def':{t:Anything}},Arguments$apply:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionDeclaration.$m.apply.$an.doc[0]),$throws("IncompatibleTypeException","If the specified `Return` or `Arguments` type arguments are not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','apply']};}};$functionDeclaration.memberApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Method$meta$model,a:{Arguments$Method:'Arguments$memberApply',Container$Method:'Container$memberApply',Type$Method:'Return$memberApply'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:'Container$memberApply'}},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:FunctionDeclaration$meta$declaration,$tp:{Container$memberApply:{'def':{t:Nothing}},Return$memberApply:{'def':{t:Anything}},Arguments$memberApply:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionDeclaration.$m.memberApply.$an.doc[0]),$throws("IncompatibleTypeException","If the specified `Container`, `Return` or `Arguments` type arguments are not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result\'s container type or type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','memberApply']};}};$functionDeclaration.invoke$defs$typeArguments=function($rp,$rq){var $functionDeclaration=this;return getEmpty();};$functionDeclaration.invoke=function ($rp,$rq){var $functionDeclaration=this;if($rp===undefined){$rp=$functionDeclaration.invoke$defs$typeArguments($rp,$rq);}
if($rq===undefined){$rq=getEmpty();}
return $functionDeclaration.$apply($rp,{Arguments$apply:{t:Nothing},Return$apply:{t:Anything}}).$apply($rq);};$functionDeclaration.invoke.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'typeArguments',$mt:'prm',$def:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}},{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:FunctionDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionDeclaration.$m.invoke.$an.doc[0]),$throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta.model'),IncompatibleTypeException$meta$model),"If the specified type or value arguments are not compatible with this toplevel function."),shared(),$default()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','invoke']};};$functionDeclaration.memberInvoke$defs$typeArguments=function($rr,$rs,$rt){var $functionDeclaration=this;return getEmpty();};$functionDeclaration.memberInvoke=function ($rr,$rs,$rt){var $functionDeclaration=this;if($rs===undefined){$rs=$functionDeclaration.memberInvoke$defs$typeArguments($rr,$rs,$rt);}
if($rt===undefined){$rt=getEmpty();}
return $functionDeclaration.memberApply(getNothingType$meta$model(),$rs,{Container$memberApply:{t:Nothing},Return$memberApply:{t:Anything},Arguments$memberApply:{t:Nothing}}).$bind($rr).$apply($rt);};$functionDeclaration.memberInvoke.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'container',$mt:'prm',$t:{t:$Object},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',$def:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}},{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:FunctionDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].FunctionDeclaration.$m.memberInvoke.$an.doc[0]),$throws($init$OpenClass()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language.meta.model'),IncompatibleTypeException$meta$model),"If the specified container, type or value arguments are not compatible with this method."),shared(),$default()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','memberInvoke']};};})(FunctionDeclaration$meta$declaration.$$.prototype);}
return FunctionDeclaration$meta$declaration;}
exports.$init$FunctionDeclaration$meta$declaration=$init$FunctionDeclaration$meta$declaration;$init$FunctionDeclaration$meta$declaration();function InterfaceDeclaration$meta$declaration($interfaceDeclaration){ClassOrInterfaceDeclaration$meta$declaration($interfaceDeclaration);}
InterfaceDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:ClassOrInterfaceDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].InterfaceDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration']};};
exports.InterfaceDeclaration$meta$declaration=InterfaceDeclaration$meta$declaration;function $init$InterfaceDeclaration$meta$declaration(){if(InterfaceDeclaration$meta$declaration.$$===undefined){initTypeProtoI(InterfaceDeclaration$meta$declaration,'ceylon.language.meta.declaration::InterfaceDeclaration',$init$ClassOrInterfaceDeclaration$meta$declaration());
(function($interfaceDeclaration){$interfaceDeclaration.interfaceApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Interface$meta$model,a:{Type$Interface:'Type$interfaceApply'}},$ps:[{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:InterfaceDeclaration$meta$declaration,$tp:{Type$interfaceApply:{'def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].InterfaceDeclaration.$m.interfaceApply.$an.doc[0]),$throws("IncompatibleTypeException","If the specified `Type` type argument is not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed type argument values are not compatible with the actual result\'s type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$m','interfaceApply']};}};$interfaceDeclaration.memberInterfaceApply={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:MemberInterface$meta$model,a:{Container$MemberInterface:'Container$memberInterfaceApply',Type$MemberInterface:'Type$memberInterfaceApply'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:'Container$memberInterfaceApply'}},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:InterfaceDeclaration$meta$declaration,$tp:{Container$memberInterfaceApply:{'def':{t:Nothing}},Type$memberInterfaceApply:{'def':{t:Anything}}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].InterfaceDeclaration.$m.memberInterfaceApply.$an.doc[0]),$throws("IncompatibleTypeException","If the specified `Container` or `Type` type arguments are not compatible with the actual result."),$throws("TypeApplicationException","If the specified closed container type or type argument values are not compatible with the actual result\'s container type or type parameters."),shared(),formal()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$m','memberInterfaceApply']};}};})(InterfaceDeclaration$meta$declaration.$$.prototype);}
return InterfaceDeclaration$meta$declaration;}
exports.$init$InterfaceDeclaration$meta$declaration=$init$InterfaceDeclaration$meta$declaration;$init$InterfaceDeclaration$meta$declaration();function Module$meta$declaration($module){Identifiable($module);AnnotatedDeclaration$meta$declaration($module);}
Module$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Identifiable},{t:AnnotatedDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Module.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','Module']};};
exports.Module$meta$declaration=Module$meta$declaration;function $init$Module$meta$declaration(){if(Module$meta$declaration.$$===undefined){initTypeProtoI(Module$meta$declaration,'ceylon.language.meta.declaration::Module',$init$Identifiable(),$init$AnnotatedDeclaration$meta$declaration());
(function($module){$module.$prop$getVersion={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Module$meta$declaration,$an:function(){return[doc("The module version."),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$at','version']};}};$module.$prop$getMembers={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Package$meta$declaration}}},$cont:Module$meta$declaration,$an:function(){return[doc("The package members of the module."),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$at','members']};}};$module.$prop$getDependencies={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Import$meta$declaration}}},$cont:Module$meta$declaration,$an:function(){return[doc("The modules this module depends on."),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$at','dependencies']};}};$module.findPackage={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Package$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:Module$meta$declaration,$an:function(){return[doc("Finds a package by name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$m','findPackage']};}};$module.findImportedPackage={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Package$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:Module$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Module.$m.findImportedPackage.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$m','findImportedPackage']};}};$module.resourceByPath={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Resource}]},$ps:[{$nm:'path',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:Module$meta$declaration,$an:function(){return[doc("Searches for a resource by its path inside the module."),shared(),formal()];},d:['ceylon.language.meta.declaration','Module','$m','resourceByPath']};}};})(Module$meta$declaration.$$.prototype);}
return Module$meta$declaration;}
exports.$init$Module$meta$declaration=$init$Module$meta$declaration;$init$Module$meta$declaration();function Import$meta$declaration($import){Identifiable($import);Annotated($import);}
Import$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Identifiable},{t:Annotated}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Import.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','Import']};};
exports.Import$meta$declaration=Import$meta$declaration;function $init$Import$meta$declaration(){if(Import$meta$declaration.$$===undefined){initTypeProtoI(Import$meta$declaration,'ceylon.language.meta.declaration::Import',$init$Identifiable(),$init$Annotated());
(function($import){$import.$prop$getName={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Import$meta$declaration,$an:function(){return[doc("The name of the imported module."),shared(),formal()];},d:['ceylon.language.meta.declaration','Import','$at','name']};}};$import.$prop$getVersion={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:Import$meta$declaration,$an:function(){return[doc("The compile-time version of the imported module."),shared(),formal()];},d:['ceylon.language.meta.declaration','Import','$at','version']};}};$import.$prop$getShared={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Import$meta$declaration,$an:function(){return[doc("True if this imported module is shared."),shared(),formal()];},d:['ceylon.language.meta.declaration','Import','$at','shared']};}};$import.$prop$getOptional={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Import$meta$declaration,$an:function(){return[doc("True if this imported module is optional."),shared(),formal()];},d:['ceylon.language.meta.declaration','Import','$at','optional']};}};$import.$prop$getContainer={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:Import$meta$declaration,$an:function(){return[doc("The containing module."),shared(),formal()];},d:['ceylon.language.meta.declaration','Import','$at','container']};}};})(Import$meta$declaration.$$.prototype);}
return Import$meta$declaration;}
exports.$init$Import$meta$declaration=$init$Import$meta$declaration;$init$Import$meta$declaration();function Package$meta$declaration($package){Identifiable($package);AnnotatedDeclaration$meta$declaration($package);}
Package$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Identifiable},{t:AnnotatedDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Package.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','Package']};};
exports.Package$meta$declaration=Package$meta$declaration;function $init$Package$meta$declaration(){if(Package$meta$declaration.$$===undefined){initTypeProtoI(Package$meta$declaration,'ceylon.language.meta.declaration::Package',$init$Identifiable(),$init$AnnotatedDeclaration$meta$declaration());
(function($package){$package.$prop$getContainer={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:Package$meta$declaration,$an:function(){return[doc("The module this package belongs to."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$at','container']};}};$package.$prop$getShared={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:Package$meta$declaration,$an:function(){return[doc("True if this package is shared."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$at','shared']};}};$package.members={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$members'}},$ps:[],$cont:Package$meta$declaration,$tp:{Kind$members:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Package.$m.members.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','members']};}};$package.annotatedMembers={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind$annotatedMembers'}},$ps:[],$cont:Package$meta$declaration,$tp:{Kind$annotatedMembers:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation$annotatedMembers:{'satisfies':[{t:Annotation}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Package.$m.annotatedMembers.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','annotatedMembers']};}};$package.getMember={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},'Kind$getMember']},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:Package$meta$declaration,$tp:{Kind$getMember:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].Package.$m.getMember.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','getMember']};}};$package.getValue={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:ValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:Package$meta$declaration,$an:function(){return[doc("The value with the given name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','getValue']};}};$package.getClassOrInterface={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:ClassOrInterfaceDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:Package$meta$declaration,$an:function(){return[doc("The class or interface with the given name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','getClassOrInterface']};}};$package.getFunction={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:FunctionDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:Package$meta$declaration,$an:function(){return[doc("The function with the given name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','getFunction']};}};$package.getAlias={$fml:1,$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:AliasDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:Package$meta$declaration,$an:function(){return[doc("The type alias with the given name. Returns `null` if not found."),shared(),formal()];},d:['ceylon.language.meta.declaration','Package','$m','getAlias']};}};})(Package$meta$declaration.$$.prototype);}
return Package$meta$declaration;}
exports.$init$Package$meta$declaration=$init$Package$meta$declaration;$init$Package$meta$declaration();function OpenIntersection$meta$declaration($openIntersection){OpenType$meta$declaration($openIntersection);}
OpenIntersection$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenType$meta$declaration}],$an:function(){return[doc("An open intersection type."),shared()];},d:['ceylon.language.meta.declaration','OpenIntersection']};};
exports.OpenIntersection$meta$declaration=OpenIntersection$meta$declaration;function $init$OpenIntersection$meta$declaration(){if(OpenIntersection$meta$declaration.$$===undefined){initTypeProtoI(OpenIntersection$meta$declaration,'ceylon.language.meta.declaration::OpenIntersection',$init$OpenType$meta$declaration());
(function($openIntersection){$openIntersection.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:OpenIntersection$meta$declaration,$an:function(){return[doc("This intersection\'s list of satisfied open types."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenIntersection','$at','satisfiedTypes']};}};})(OpenIntersection$meta$declaration.$$.prototype);}
return OpenIntersection$meta$declaration;}
exports.$init$OpenIntersection$meta$declaration=$init$OpenIntersection$meta$declaration;$init$OpenIntersection$meta$declaration();function OpenClassOrInterfaceType$meta$declaration($openClassOrInterfaceType){OpenType$meta$declaration($openClassOrInterfaceType);}
OpenClassOrInterfaceType$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenType$meta$declaration}],of:[{t:OpenClassType$meta$declaration},{t:OpenInterfaceType$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].OpenClassOrInterfaceType.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType']};};
exports.OpenClassOrInterfaceType$meta$declaration=OpenClassOrInterfaceType$meta$declaration;function $init$OpenClassOrInterfaceType$meta$declaration(){if(OpenClassOrInterfaceType$meta$declaration.$$===undefined){initTypeProtoI(OpenClassOrInterfaceType$meta$declaration,'ceylon.language.meta.declaration::OpenClassOrInterfaceType',$init$OpenType$meta$declaration());
(function($openClassOrInterfaceType){$openClassOrInterfaceType.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassOrInterfaceDeclaration$meta$declaration},$cont:OpenClassOrInterfaceType$meta$declaration,$an:function(){return[doc("The class or interface declaration for this open type."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','declaration']};}};$openClassOrInterfaceType.$prop$getExtendedType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:OpenClassType$meta$declaration}]},$cont:OpenClassOrInterfaceType$meta$declaration,$an:function(){return[doc("The extended type of this open type."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','extendedType']};}};$openClassOrInterfaceType.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenInterfaceType$meta$declaration}}},$cont:OpenClassOrInterfaceType$meta$declaration,$an:function(){return[doc("The satisfied types of this open type."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','satisfiedTypes']};}};$openClassOrInterfaceType.$prop$getTypeArguments={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:{t:TypeParameter$meta$declaration},Item$Map:{t:OpenType$meta$declaration}}},$cont:OpenClassOrInterfaceType$meta$declaration,$an:function(){return[doc("The set of open type arguments."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','typeArguments']};}};})(OpenClassOrInterfaceType$meta$declaration.$$.prototype);}
return OpenClassOrInterfaceType$meta$declaration;}
exports.$init$OpenClassOrInterfaceType$meta$declaration=$init$OpenClassOrInterfaceType$meta$declaration;$init$OpenClassOrInterfaceType$meta$declaration();$defat(OpenClassOrInterfaceType$meta$declaration.$$.prototype,'typeArguments',function(){
var tps=this.declaration.tipo.$crtmm$.$tp;
if (tps) {
var rtps = this.declaration._targs;
var targs={};
for (var tpn in tps) {
var rtp=rtps&&rtps[tpn];
var otp=OpenTypeParam(this.declaration.tipo,tpn);
var targ;
if (rtp===undefined) {
targ = OpenTvar(otp);
} else if (typeof(rtp)==='string') {
targ = OpenTvar(OpenTypeParam(this.declaration.tipo,rtp));
} else {
if (rtp.t==='i'||rtp.t==='u') {
var nrtp={t:rtp.t,l:[]};
for (var i=0;i<rtp.l.length;i++) {
var _ct=rtp.l[i];
nrtp.l.push(typeof(_ct)==='string'?OpenTvar(OpenTypeParam(this.declaration.tipo,_ct)):_ct);
}
rtp=nrtp;
}
targ = _openTypeFromTarg(rtp);
}
targs[otp]=targ;
}
return Mapita(targs,{K$Mapita:{t:TypeParameter$meta$declaration},V$Mapita:{t:OpenType$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Map,a:{Key:{t:TypeParameter$meta$declaration},Item:{t:OpenType$meta$declaration}}},$cont:OpenClassOrInterfaceType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','typeArguments']};});
$defat(OpenClassOrInterfaceType$meta$declaration.$$.prototype,'extendedType',function(){
return this.declaration.extendedType;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:OpenClassType$meta$declaration}]},$cont:OpenClassOrInterfaceType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','extendedType']};});
$defat(OpenClassOrInterfaceType$meta$declaration.$$.prototype,'declaration',function(){return this._decl;},undefined,function(){return{mod:$CCMM$,$t:{t:ClassDeclaration$meta$declaration},$cont:OpenClassOrInterfaceType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','declaration']};});
$defat(OpenClassOrInterfaceType$meta$declaration.$$.prototype,'satisfiedTypes',function(){
return this.declaration.satisfiedTypes;
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenInterfaceType$meta$declaration}}},$cont:OpenClassOrInterfaceType$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenClassOrInterfaceType','$at','satisfiedTypes']};});
$defat(OpenClassOrInterfaceType$meta$declaration.$$.prototype,'string',function(){
var s=this.declaration.qualifiedName;
var tps=this.declaration.tipo.$crtmm$.$tp;
if (tps) {
var rtps=this.declaration._targs;
s+="<";
var first=true;
for (var t in tps) {
var rtp=rtps&&rtps[t];
if (first)first=false;else s+=",";
if (rtp===undefined||typeof(rtp)==='string') {
if(typeof(rtp)==='string')t=rtp;
if (t.indexOf('$')>0)t=t.substring(0,t.indexOf('$'));
s+=t;
} else {
s+=_openTypeFromTarg(rtp).string;
}
}
s+=">";
}
return s;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['ceylon.language','Object','$at','string']};});
function OpenClassType$meta$declaration($openClassType){OpenClassOrInterfaceType$meta$declaration($openClassType);}
OpenClassType$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenClassOrInterfaceType$meta$declaration}],$an:function(){return[doc("An open class type."),shared()];},d:['ceylon.language.meta.declaration','OpenClassType']};};
exports.OpenClassType$meta$declaration=OpenClassType$meta$declaration;function $init$OpenClassType$meta$declaration(){if(OpenClassType$meta$declaration.$$===undefined){initTypeProtoI(OpenClassType$meta$declaration,'ceylon.language.meta.declaration::OpenClassType',$init$OpenClassOrInterfaceType$meta$declaration());
(function($openClassType){$openClassType.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassDeclaration$meta$declaration},$cont:OpenClassType$meta$declaration,$an:function(){return[doc("This class declaration."),shared(),actual(),formal()];},d:['ceylon.language.meta.declaration','OpenClassType','$at','declaration']};}};})(OpenClassType$meta$declaration.$$.prototype);}
return OpenClassType$meta$declaration;}
exports.$init$OpenClassType$meta$declaration=$init$OpenClassType$meta$declaration;$init$OpenClassType$meta$declaration();function OpenInterfaceType$meta$declaration($openInterfaceType){OpenClassOrInterfaceType$meta$declaration($openInterfaceType);}
OpenInterfaceType$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenClassOrInterfaceType$meta$declaration}],$an:function(){return[doc("An open interface type."),shared()];},d:['ceylon.language.meta.declaration','OpenInterfaceType']};};
exports.OpenInterfaceType$meta$declaration=OpenInterfaceType$meta$declaration;function $init$OpenInterfaceType$meta$declaration(){if(OpenInterfaceType$meta$declaration.$$===undefined){initTypeProtoI(OpenInterfaceType$meta$declaration,'ceylon.language.meta.declaration::OpenInterfaceType',$init$OpenClassOrInterfaceType$meta$declaration());
(function($openInterfaceType){$openInterfaceType.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:InterfaceDeclaration$meta$declaration},$cont:OpenInterfaceType$meta$declaration,$an:function(){return[doc("This declaration\'s package container."),shared(),actual(),formal()];},d:['ceylon.language.meta.declaration','OpenInterfaceType','$at','declaration']};}};})(OpenInterfaceType$meta$declaration.$$.prototype);}
return OpenInterfaceType$meta$declaration;}
exports.$init$OpenInterfaceType$meta$declaration=$init$OpenInterfaceType$meta$declaration;$init$OpenInterfaceType$meta$declaration();function OpenType$meta$declaration($openType){}
OpenType$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,of:[$prop$get$ru$meta$declaration,{t:OpenClassOrInterfaceType$meta$declaration},{t:OpenTypeVariable$meta$declaration},{t:OpenUnion$meta$declaration},{t:OpenIntersection$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].OpenType.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','OpenType']};};
exports.OpenType$meta$declaration=OpenType$meta$declaration;function $init$OpenType$meta$declaration(){if(OpenType$meta$declaration.$$===undefined){initTypeProtoI(OpenType$meta$declaration,'ceylon.language.meta.declaration::OpenType');
}
return OpenType$meta$declaration;}
exports.$init$OpenType$meta$declaration=$init$OpenType$meta$declaration;$init$OpenType$meta$declaration();function OpenTypeVariable$meta$declaration($openTypeVariable){OpenType$meta$declaration($openTypeVariable);}
OpenTypeVariable$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenType$meta$declaration}],$an:function(){return[doc("An open type variable."),shared()];},d:['ceylon.language.meta.declaration','OpenTypeVariable']};};
exports.OpenTypeVariable$meta$declaration=OpenTypeVariable$meta$declaration;function $init$OpenTypeVariable$meta$declaration(){if(OpenTypeVariable$meta$declaration.$$===undefined){initTypeProtoI(OpenTypeVariable$meta$declaration,'ceylon.language.meta.declaration::OpenTypeVariable',$init$OpenType$meta$declaration());
(function($openTypeVariable){$openTypeVariable.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:TypeParameter$meta$declaration},$cont:OpenTypeVariable$meta$declaration,$an:function(){return[doc("This type variable\'s type parameter declaration."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenTypeVariable','$at','declaration']};}};})(OpenTypeVariable$meta$declaration.$$.prototype);}
return OpenTypeVariable$meta$declaration;}
exports.$init$OpenTypeVariable$meta$declaration=$init$OpenTypeVariable$meta$declaration;$init$OpenTypeVariable$meta$declaration();function OpenUnion$meta$declaration($openUnion){OpenType$meta$declaration($openUnion);}
OpenUnion$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:OpenType$meta$declaration}],$an:function(){return[doc("An open union type."),shared()];},d:['ceylon.language.meta.declaration','OpenUnion']};};
exports.OpenUnion$meta$declaration=OpenUnion$meta$declaration;function $init$OpenUnion$meta$declaration(){if(OpenUnion$meta$declaration.$$===undefined){initTypeProtoI(OpenUnion$meta$declaration,'ceylon.language.meta.declaration::OpenUnion',$init$OpenType$meta$declaration());
(function($openUnion){$openUnion.$prop$getCaseTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:OpenUnion$meta$declaration,$an:function(){return[doc("The list of case types for this open union type."),shared(),formal()];},d:['ceylon.language.meta.declaration','OpenUnion','$at','caseTypes']};}};})(OpenUnion$meta$declaration.$$.prototype);}
return OpenUnion$meta$declaration;}
exports.$init$OpenUnion$meta$declaration=$init$OpenUnion$meta$declaration;$init$OpenUnion$meta$declaration();function SetterDeclaration$meta$declaration($setterDeclaration){NestableDeclaration$meta$declaration($setterDeclaration);}
SetterDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:NestableDeclaration$meta$declaration}],$an:function(){return[doc("A setter declaration for a variable `ValueDeclaration`."),shared()];},d:['ceylon.language.meta.declaration','SetterDeclaration']};};
exports.SetterDeclaration$meta$declaration=SetterDeclaration$meta$declaration;function $init$SetterDeclaration$meta$declaration(){if(SetterDeclaration$meta$declaration.$$===undefined){initTypeProtoI(SetterDeclaration$meta$declaration,'ceylon.language.meta.declaration::SetterDeclaration',$init$NestableDeclaration$meta$declaration());
(function($setterDeclaration){$setterDeclaration.$prop$getVariable={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ValueDeclaration$meta$declaration},$cont:SetterDeclaration$meta$declaration,$an:function(){return[doc("The variable value this setter is for."),shared(),formal()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','variable']};}};$defat($setterDeclaration,'actual',function(){var $setterDeclaration=this;return $setterDeclaration.variable.actual;},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','actual']};});$defat($setterDeclaration,'formal',function(){var $setterDeclaration=this;return $setterDeclaration.variable.formal;},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','formal']};});$defat($setterDeclaration,'$default',function(){var $setterDeclaration=this;return $setterDeclaration.variable.$default;},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','default']};});$defat($setterDeclaration,'shared',function(){var $setterDeclaration=this;return $setterDeclaration.variable.shared;},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','shared']};});$defat($setterDeclaration,'containingPackage',function(){var $setterDeclaration=this;return $setterDeclaration.variable.containingPackage;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','containingPackage']};});$defat($setterDeclaration,'containingModule',function(){var $setterDeclaration=this;return $setterDeclaration.variable.containingModule;},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','containingModule']};});$defat($setterDeclaration,'container',function(){var $setterDeclaration=this;return $setterDeclaration.variable.container;},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','container']};});$defat($setterDeclaration,'toplevel',function(){var $setterDeclaration=this;return $setterDeclaration.variable.toplevel;},undefined,function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:SetterDeclaration$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','toplevel']};});})(SetterDeclaration$meta$declaration.$$.prototype);}
return SetterDeclaration$meta$declaration;}
exports.$init$SetterDeclaration$meta$declaration=$init$SetterDeclaration$meta$declaration;$init$SetterDeclaration$meta$declaration();function TypeParameter$meta$declaration($typeParameter){Declaration$meta$declaration($typeParameter);}
TypeParameter$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:Declaration$meta$declaration}],$an:function(){return[doc("A type parameter declaration."),shared()];},d:['ceylon.language.meta.declaration','TypeParameter']};};
exports.TypeParameter$meta$declaration=TypeParameter$meta$declaration;function $init$TypeParameter$meta$declaration(){if(TypeParameter$meta$declaration.$$===undefined){initTypeProtoI(TypeParameter$meta$declaration,'ceylon.language.meta.declaration::TypeParameter',$init$Declaration$meta$declaration());
(function($typeParameter){$typeParameter.$prop$getContainer={$crtmm$:function(){return{mod:$CCMM$,$t:{t:NestableDeclaration$meta$declaration},$cont:TypeParameter$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].TypeParameter.$at.container.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','container']};}};$typeParameter.$prop$getDefaulted={$crtmm$:function(){return{mod:$CCMM$,$t:{t:$Boolean},$cont:TypeParameter$meta$declaration,$an:function(){return[doc("True if this type parameter has a default type argument and can be omitted."),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','defaulted']};}};$typeParameter.$prop$getDefaultTypeArgument={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:OpenType$meta$declaration}]},$cont:TypeParameter$meta$declaration,$an:function(){return[doc("This type parameter\'s default type argument, if it has one."),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','defaultTypeArgument']};}};$typeParameter.$prop$getVariance={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Variance$meta$declaration},$cont:TypeParameter$meta$declaration,$an:function(){return[doc("This type parameter\'s variance, as defined by `in` or `out` keywords."),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','variance']};}};$typeParameter.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:TypeParameter$meta$declaration,$an:function(){return[doc("The `satisfies` upper bounds for this type parameter."),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','satisfiedTypes']};}};$typeParameter.$prop$getCaseTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:TypeParameter$meta$declaration,$an:function(){return[doc("The `of` enumerated bounds for this type parameter."),shared(),formal()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','caseTypes']};}};})(TypeParameter$meta$declaration.$$.prototype);}
return TypeParameter$meta$declaration;}
exports.$init$TypeParameter$meta$declaration=$init$TypeParameter$meta$declaration;$init$TypeParameter$meta$declaration();function TypedDeclaration$meta$declaration($typedDeclaration){}
TypedDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$an:function(){return[doc("Declaration which has an open type."),shared()];},d:['ceylon.language.meta.declaration','TypedDeclaration']};};
exports.TypedDeclaration$meta$declaration=TypedDeclaration$meta$declaration;function $init$TypedDeclaration$meta$declaration(){if(TypedDeclaration$meta$declaration.$$===undefined){initTypeProtoI(TypedDeclaration$meta$declaration,'ceylon.language.meta.declaration::TypedDeclaration');
(function($typedDeclaration){$typedDeclaration.$prop$getOpenType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:TypedDeclaration$meta$declaration,$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].TypedDeclaration.$at.openType.$an.doc[0]),shared(),formal()];},d:['ceylon.language.meta.declaration','TypedDeclaration','$at','openType']};}};})(TypedDeclaration$meta$declaration.$$.prototype);}
return TypedDeclaration$meta$declaration;}
exports.$init$TypedDeclaration$meta$declaration=$init$TypedDeclaration$meta$declaration;$init$TypedDeclaration$meta$declaration();function $ru$meta$declaration(){var $nothingType=new $ru$meta$declaration.$$;
OpenType$meta$declaration($nothingType);return $nothingType;
};$ru$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenType$meta$declaration}],$an:function(){return[doc("The singleton open type for [[Nothing|ceylon.language::nothing]]."),shared()];},d:['ceylon.language.meta.declaration','nothingType']};};function $init$$ru$meta$declaration(){if($ru$meta$declaration.$$===undefined){initTypeProto($ru$meta$declaration,'ceylon.language.meta.declaration::nothingType',Basic,$init$OpenType$meta$declaration());
(function($nothingType){$defat($nothingType,'string',function(){var $nothingType=this;return "Nothing";},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:$ru$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','nothingType','$at','string']};});})($ru$meta$declaration.$$.prototype);}
return $ru$meta$declaration;}
exports.$init$$ru$meta$declaration=$init$$ru$meta$declaration;$init$$ru$meta$declaration();var $rv$meta$declaration;function getNothingType$meta$declaration(){if($rv$meta$declaration===undefined){$rv$meta$declaration=$init$$ru$meta$declaration()();$rv$meta$declaration.$crtmm$=getNothingType$meta$declaration.$crtmm$;}
return $rv$meta$declaration;}
exports.getNothingType$meta$declaration=getNothingType$meta$declaration;getNothingType$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$ru$meta$declaration},$an:function(){return[doc("The singleton open type for [[Nothing|ceylon.language::nothing]]."),shared()];},d:['ceylon.language.meta.declaration','nothingType']};};$prop$getNothingType$meta$declaration={get:getNothingType$meta$declaration,$crtmm$:getNothingType$meta$declaration.$crtmm$};get$ru$meta$declaration=getNothingType$meta$declaration;$prop$get$ru$meta$declaration=getNothingType$meta$declaration;exports.$prop$getNothingType$meta$declaration=$prop$getNothingType$meta$declaration;function AliasDeclaration$meta$declaration($aliasDeclaration){NestableDeclaration$meta$declaration($aliasDeclaration);GenericDeclaration$meta$declaration($aliasDeclaration);}
AliasDeclaration$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,satisfies:[{t:NestableDeclaration$meta$declaration},{t:GenericDeclaration$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].AliasDeclaration.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','AliasDeclaration']};};
exports.AliasDeclaration$meta$declaration=AliasDeclaration$meta$declaration;function $init$AliasDeclaration$meta$declaration(){if(AliasDeclaration$meta$declaration.$$===undefined){initTypeProtoI(AliasDeclaration$meta$declaration,'ceylon.language.meta.declaration::AliasDeclaration',$init$NestableDeclaration$meta$declaration(),$init$GenericDeclaration$meta$declaration());
(function($aliasDeclaration){$aliasDeclaration.$prop$getExtendedType={$crtmm$:function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:AliasDeclaration$meta$declaration,$an:function(){return[doc("The open type that is substituted by this type alias."),shared(),formal()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','extendedType']};}};})(AliasDeclaration$meta$declaration.$$.prototype);}
return AliasDeclaration$meta$declaration;}
exports.$init$AliasDeclaration$meta$declaration=$init$AliasDeclaration$meta$declaration;$init$AliasDeclaration$meta$declaration();function Variance$meta$declaration($variance){}
Variance$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,of:[$prop$get$rw$meta$declaration,$prop$get$rx$meta$declaration,$prop$get$ry$meta$declaration],$an:function(){return[doc("Variance information."),shared()];},d:['ceylon.language.meta.declaration','Variance']};};
exports.Variance$meta$declaration=Variance$meta$declaration;function $init$Variance$meta$declaration(){if(Variance$meta$declaration.$$===undefined){initTypeProtoI(Variance$meta$declaration,'ceylon.language.meta.declaration::Variance');
}
return Variance$meta$declaration;}
exports.$init$Variance$meta$declaration=$init$Variance$meta$declaration;$init$Variance$meta$declaration();function $rw$meta$declaration(){var $invariant=new $rw$meta$declaration.$$;
Variance$meta$declaration($invariant);return $invariant;
};$rw$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Variance$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].invariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','invariant']};};function $init$$rw$meta$declaration(){if($rw$meta$declaration.$$===undefined){initTypeProto($rw$meta$declaration,'ceylon.language.meta.declaration::invariant',Basic,$init$Variance$meta$declaration());
(function($invariant){$defat($invariant,'string',function(){var $invariant=this;return "Invariant";},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:$rw$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','invariant','$at','string']};});})($rw$meta$declaration.$$.prototype);}
return $rw$meta$declaration;}
exports.$init$$rw$meta$declaration=$init$$rw$meta$declaration;$init$$rw$meta$declaration();var $rz$meta$declaration;function getInvariant$meta$declaration(){if($rz$meta$declaration===undefined){$rz$meta$declaration=$init$$rw$meta$declaration()();$rz$meta$declaration.$crtmm$=getInvariant$meta$declaration.$crtmm$;}
return $rz$meta$declaration;}
exports.getInvariant$meta$declaration=getInvariant$meta$declaration;getInvariant$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$rw$meta$declaration},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].invariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','invariant']};};$prop$getInvariant$meta$declaration={get:getInvariant$meta$declaration,$crtmm$:getInvariant$meta$declaration.$crtmm$};get$rw$meta$declaration=getInvariant$meta$declaration;$prop$get$rw$meta$declaration=getInvariant$meta$declaration;exports.$prop$getInvariant$meta$declaration=$prop$getInvariant$meta$declaration;function $rx$meta$declaration(){var $covariant=new $rx$meta$declaration.$$;
Variance$meta$declaration($covariant);return $covariant;
};$rx$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Variance$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].covariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','covariant']};};function $init$$rx$meta$declaration(){if($rx$meta$declaration.$$===undefined){initTypeProto($rx$meta$declaration,'ceylon.language.meta.declaration::covariant',Basic,$init$Variance$meta$declaration());
(function($covariant){$defat($covariant,'string',function(){var $covariant=this;return "Covariant";},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:$rx$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','covariant','$at','string']};});})($rx$meta$declaration.$$.prototype);}
return $rx$meta$declaration;}
exports.$init$$rx$meta$declaration=$init$$rx$meta$declaration;$init$$rx$meta$declaration();var $s0$meta$declaration;function getCovariant$meta$declaration(){if($s0$meta$declaration===undefined){$s0$meta$declaration=$init$$rx$meta$declaration()();$s0$meta$declaration.$crtmm$=getCovariant$meta$declaration.$crtmm$;}
return $s0$meta$declaration;}
exports.getCovariant$meta$declaration=getCovariant$meta$declaration;getCovariant$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$rx$meta$declaration},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].covariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','covariant']};};$prop$getCovariant$meta$declaration={get:getCovariant$meta$declaration,$crtmm$:getCovariant$meta$declaration.$crtmm$};get$rx$meta$declaration=getCovariant$meta$declaration;$prop$get$rx$meta$declaration=getCovariant$meta$declaration;exports.$prop$getCovariant$meta$declaration=$prop$getCovariant$meta$declaration;function $ry$meta$declaration(){var $contravariant=new $ry$meta$declaration.$$;
Variance$meta$declaration($contravariant);return $contravariant;
};$ry$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Variance$meta$declaration}],$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].contravariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','contravariant']};};function $init$$ry$meta$declaration(){if($ry$meta$declaration.$$===undefined){initTypeProto($ry$meta$declaration,'ceylon.language.meta.declaration::contravariant',Basic,$init$Variance$meta$declaration());
(function($contravariant){$defat($contravariant,'string',function(){var $contravariant=this;return "Contravariant";},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:$ry$meta$declaration,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','contravariant','$at','string']};});})($ry$meta$declaration.$$.prototype);}
return $ry$meta$declaration;}
exports.$init$$ry$meta$declaration=$init$$ry$meta$declaration;$init$$ry$meta$declaration();var $s1$meta$declaration;function getContravariant$meta$declaration(){if($s1$meta$declaration===undefined){$s1$meta$declaration=$init$$ry$meta$declaration()();$s1$meta$declaration.$crtmm$=getContravariant$meta$declaration.$crtmm$;}
return $s1$meta$declaration;}
exports.getContravariant$meta$declaration=getContravariant$meta$declaration;getContravariant$meta$declaration.$crtmm$=function(){return{mod:$CCMM$,$t:{t:$ry$meta$declaration},$an:function(){return[doc($CCMM$['ceylon.language.meta.declaration'].contravariant.$an.doc[0]),shared()];},d:['ceylon.language.meta.declaration','contravariant']};};$prop$getContravariant$meta$declaration={get:getContravariant$meta$declaration,$crtmm$:getContravariant$meta$declaration.$crtmm$};get$ry$meta$declaration=getContravariant$meta$declaration;$prop$get$ry$meta$declaration=getContravariant$meta$declaration;exports.$prop$getContravariant$meta$declaration=$prop$getContravariant$meta$declaration;
function AnnotationAnnotation($annotationAnnotation){$init$AnnotationAnnotation();if($annotationAnnotation===undefined)$annotationAnnotation=new AnnotationAnnotation.$$;
$annotationAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:AnnotationAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:AnnotationAnnotation}},$annotationAnnotation);add_type_arg($annotationAnnotation,'Value$OptionalAnnotation',{t:AnnotationAnnotation});return $annotationAnnotation;}
AnnotationAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:FunctionDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:AnnotationAnnotation}}}],$an:function(){return[doc("The annotation class for [[annotation]]."),shared(),$final(),annotation()];},d:['$','AnnotationAnnotation']};};
exports.AnnotationAnnotation=AnnotationAnnotation;function $init$AnnotationAnnotation(){if(AnnotationAnnotation.$$===undefined){initTypeProto(AnnotationAnnotation,'ceylon.language::AnnotationAnnotation',Basic,$init$OptionalAnnotation());
}
return AnnotationAnnotation;}
exports.$init$AnnotationAnnotation=$init$AnnotationAnnotation;$init$AnnotationAnnotation();var annotation=function (){return AnnotationAnnotation();};annotation.$crtmm$=function(){return{mod:$CCMM$,$t:{t:AnnotationAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].annotation.$an.doc[0]),see([$init$OpenInterface()(getModules$meta().find('ceylon.language','1.1.0').findPackage('ceylon.language'),Annotation)].reifyCeylonType({Element$Iterable:{t:InterfaceDeclaration$meta$declaration},Absent$Iterable:{t:Null}})),shared(),annotation()];},d:['$','annotation']};};
exports.annotation=annotation;function SharedAnnotation($sharedAnnotation){$init$SharedAnnotation();if($sharedAnnotation===undefined)$sharedAnnotation=new SharedAnnotation.$$;
$sharedAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration},{t:Package$meta$declaration},{t:Import$meta$declaration}]},Value$OptionalAnnotation:{t:SharedAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration},{t:Package$meta$declaration},{t:Import$meta$declaration}]},Value$OptionalAnnotation:{t:SharedAnnotation}},$sharedAnnotation);add_type_arg($sharedAnnotation,'Value$OptionalAnnotation',{t:SharedAnnotation});return $sharedAnnotation;}
SharedAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration},{t:Package$meta$declaration},{t:Import$meta$declaration}]},Value$OptionalAnnotation:{t:SharedAnnotation}}}],$an:function(){return[doc("The annotation class for [[shared]]."),shared(),$final(),annotation()];},d:['$','SharedAnnotation']};};
exports.SharedAnnotation=SharedAnnotation;function $init$SharedAnnotation(){if(SharedAnnotation.$$===undefined){initTypeProto(SharedAnnotation,'ceylon.language::SharedAnnotation',Basic,$init$OptionalAnnotation());
}
return SharedAnnotation;}
exports.$init$SharedAnnotation=$init$SharedAnnotation;$init$SharedAnnotation();var shared=function (){return SharedAnnotation();};shared.$crtmm$=function(){return{mod:$CCMM$,$t:{t:SharedAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].shared.$an.doc[0]),shared(),annotation()];},d:['$','shared']};};
exports.shared=shared;function VariableAnnotation($variableAnnotation){$init$VariableAnnotation();if($variableAnnotation===undefined)$variableAnnotation=new VariableAnnotation.$$;
$variableAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration},Value$OptionalAnnotation:{t:VariableAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration},Value$OptionalAnnotation:{t:VariableAnnotation}},$variableAnnotation);add_type_arg($variableAnnotation,'ProgramElement$OptionalAnnotation',{t:ValueDeclaration$meta$declaration});add_type_arg($variableAnnotation,'Value$OptionalAnnotation',{t:VariableAnnotation});return $variableAnnotation;}
VariableAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration},Value$OptionalAnnotation:{t:VariableAnnotation}}}],$an:function(){return[doc("The annotation class for [[variable]]."),shared(),$final(),annotation()];},d:['$','VariableAnnotation']};};
exports.VariableAnnotation=VariableAnnotation;function $init$VariableAnnotation(){if(VariableAnnotation.$$===undefined){initTypeProto(VariableAnnotation,'ceylon.language::VariableAnnotation',Basic,$init$OptionalAnnotation());
}
return VariableAnnotation;}
exports.$init$VariableAnnotation=$init$VariableAnnotation;$init$VariableAnnotation();var variable=function (){return VariableAnnotation();};variable.$crtmm$=function(){return{mod:$CCMM$,$t:{t:VariableAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].variable.$an.doc[0]),shared(),annotation()];},d:['$','variable']};};
exports.variable=variable;function AbstractAnnotation($abstractAnnotation){$init$AbstractAnnotation();if($abstractAnnotation===undefined)$abstractAnnotation=new AbstractAnnotation.$$;
$abstractAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration},Value$OptionalAnnotation:{t:AbstractAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration},Value$OptionalAnnotation:{t:AbstractAnnotation}},$abstractAnnotation);add_type_arg($abstractAnnotation,'ProgramElement$OptionalAnnotation',{t:ClassDeclaration$meta$declaration});add_type_arg($abstractAnnotation,'Value$OptionalAnnotation',{t:AbstractAnnotation});return $abstractAnnotation;}
AbstractAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration},Value$OptionalAnnotation:{t:AbstractAnnotation}}}],$an:function(){return[doc("The annotation class for [[abstract]]."),shared(),$final(),annotation()];},d:['$','AbstractAnnotation']};};
exports.AbstractAnnotation=AbstractAnnotation;function $init$AbstractAnnotation(){if(AbstractAnnotation.$$===undefined){initTypeProto(AbstractAnnotation,'ceylon.language::AbstractAnnotation',Basic,$init$OptionalAnnotation());
}
return AbstractAnnotation;}
exports.$init$AbstractAnnotation=$init$AbstractAnnotation;$init$AbstractAnnotation();var abstract=function (){return AbstractAnnotation();};abstract.$crtmm$=function(){return{mod:$CCMM$,$t:{t:AbstractAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].abstract.$an.doc[0]),shared(),annotation()];},d:['$','abstract']};};
exports.abstract=abstract;function FinalAnnotation($finalAnnotation){$init$FinalAnnotation();if($finalAnnotation===undefined)$finalAnnotation=new FinalAnnotation.$$;
$finalAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration},Value$OptionalAnnotation:{t:FinalAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration},Value$OptionalAnnotation:{t:FinalAnnotation}},$finalAnnotation);add_type_arg($finalAnnotation,'ProgramElement$OptionalAnnotation',{t:ClassDeclaration$meta$declaration});add_type_arg($finalAnnotation,'Value$OptionalAnnotation',{t:FinalAnnotation});return $finalAnnotation;}
FinalAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:ClassDeclaration$meta$declaration},Value$OptionalAnnotation:{t:FinalAnnotation}}}],$an:function(){return[doc("The annotation class for [[final]]."),shared(),$final(),annotation()];},d:['$','FinalAnnotation']};};
exports.FinalAnnotation=FinalAnnotation;function $init$FinalAnnotation(){if(FinalAnnotation.$$===undefined){initTypeProto(FinalAnnotation,'ceylon.language::FinalAnnotation',Basic,$init$OptionalAnnotation());
}
return FinalAnnotation;}
exports.$init$FinalAnnotation=$init$FinalAnnotation;$init$FinalAnnotation();var $final=function (){return FinalAnnotation();};$final.$crtmm$=function(){return{mod:$CCMM$,$t:{t:FinalAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].final.$an.doc[0]),shared(),annotation()];},d:['$','final']};};
exports.$final=$final;function ActualAnnotation($actualAnnotation){$init$ActualAnnotation();if($actualAnnotation===undefined)$actualAnnotation=new ActualAnnotation.$$;
$actualAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:ActualAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:ActualAnnotation}},$actualAnnotation);add_type_arg($actualAnnotation,'Value$OptionalAnnotation',{t:ActualAnnotation});return $actualAnnotation;}
ActualAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:ActualAnnotation}}}],$an:function(){return[doc("The annotation class for [[actual]]."),shared(),$final(),annotation()];},d:['$','ActualAnnotation']};};
exports.ActualAnnotation=ActualAnnotation;function $init$ActualAnnotation(){if(ActualAnnotation.$$===undefined){initTypeProto(ActualAnnotation,'ceylon.language::ActualAnnotation',Basic,$init$OptionalAnnotation());
}
return ActualAnnotation;}
exports.$init$ActualAnnotation=$init$ActualAnnotation;$init$ActualAnnotation();var actual=function (){return ActualAnnotation();};actual.$crtmm$=function(){return{mod:$CCMM$,$t:{t:ActualAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].actual.$an.doc[0]),shared(),annotation()];},d:['$','actual']};};
exports.actual=actual;function FormalAnnotation($formalAnnotation){$init$FormalAnnotation();if($formalAnnotation===undefined)$formalAnnotation=new FormalAnnotation.$$;
$formalAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:FormalAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:FormalAnnotation}},$formalAnnotation);add_type_arg($formalAnnotation,'Value$OptionalAnnotation',{t:FormalAnnotation});return $formalAnnotation;}
FormalAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:FormalAnnotation}}}],$an:function(){return[doc("The annotation class for [[formal]]."),shared(),$final(),annotation()];},d:['$','FormalAnnotation']};};
exports.FormalAnnotation=FormalAnnotation;function $init$FormalAnnotation(){if(FormalAnnotation.$$===undefined){initTypeProto(FormalAnnotation,'ceylon.language::FormalAnnotation',Basic,$init$OptionalAnnotation());
}
return FormalAnnotation;}
exports.$init$FormalAnnotation=$init$FormalAnnotation;$init$FormalAnnotation();var formal=function (){return FormalAnnotation();};formal.$crtmm$=function(){return{mod:$CCMM$,$t:{t:FormalAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].formal.$an.doc[0]),shared(),annotation()];},d:['$','formal']};};
exports.formal=formal;function DefaultAnnotation($defaultAnnotation){$init$DefaultAnnotation();if($defaultAnnotation===undefined)$defaultAnnotation=new DefaultAnnotation.$$;
$defaultAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:DefaultAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:DefaultAnnotation}},$defaultAnnotation);add_type_arg($defaultAnnotation,'Value$OptionalAnnotation',{t:DefaultAnnotation});return $defaultAnnotation;}
DefaultAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassOrInterfaceDeclaration$meta$declaration}]},Value$OptionalAnnotation:{t:DefaultAnnotation}}}],$an:function(){return[doc("The annotation class for [[default]]."),shared(),$final(),annotation()];},d:['$','DefaultAnnotation']};};
exports.DefaultAnnotation=DefaultAnnotation;function $init$DefaultAnnotation(){if(DefaultAnnotation.$$===undefined){initTypeProto(DefaultAnnotation,'ceylon.language::DefaultAnnotation',Basic,$init$OptionalAnnotation());
}
return DefaultAnnotation;}
exports.$init$DefaultAnnotation=$init$DefaultAnnotation;$init$DefaultAnnotation();var $default=function (){return DefaultAnnotation();};$default.$crtmm$=function(){return{mod:$CCMM$,$t:{t:DefaultAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].default.$an.doc[0]),shared(),annotation()];},d:['$','default']};};
exports.$default=$default;function LateAnnotation($lateAnnotation){$init$LateAnnotation();if($lateAnnotation===undefined)$lateAnnotation=new LateAnnotation.$$;
$lateAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration},Value$OptionalAnnotation:{t:LateAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration},Value$OptionalAnnotation:{t:LateAnnotation}},$lateAnnotation);add_type_arg($lateAnnotation,'ProgramElement$OptionalAnnotation',{t:ValueDeclaration$meta$declaration});add_type_arg($lateAnnotation,'Value$OptionalAnnotation',{t:LateAnnotation});return $lateAnnotation;}
LateAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:ValueDeclaration$meta$declaration},Value$OptionalAnnotation:{t:LateAnnotation}}}],$an:function(){return[doc("The annotation class for [[late]]."),shared(),$final(),annotation()];},d:['$','LateAnnotation']};};
exports.LateAnnotation=LateAnnotation;function $init$LateAnnotation(){if(LateAnnotation.$$===undefined){initTypeProto(LateAnnotation,'ceylon.language::LateAnnotation',Basic,$init$OptionalAnnotation());
}
return LateAnnotation;}
exports.$init$LateAnnotation=$init$LateAnnotation;$init$LateAnnotation();var late=function (){return LateAnnotation();};late.$crtmm$=function(){return{mod:$CCMM$,$t:{t:LateAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].late.$an.doc[0]),shared(),annotation()];},d:['$','late']};};
exports.late=late;function NativeAnnotation($nativeAnnotation){$init$NativeAnnotation();if($nativeAnnotation===undefined)$nativeAnnotation=new NativeAnnotation.$$;
$nativeAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:NativeAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:NativeAnnotation}},$nativeAnnotation);add_type_arg($nativeAnnotation,'ProgramElement$OptionalAnnotation',{t:Annotated});add_type_arg($nativeAnnotation,'Value$OptionalAnnotation',{t:NativeAnnotation});return $nativeAnnotation;}
NativeAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:NativeAnnotation}}}],$an:function(){return[doc("The annotation class for [[native]]."),shared(),$final(),annotation()];},d:['$','NativeAnnotation']};};
exports.NativeAnnotation=NativeAnnotation;function $init$NativeAnnotation(){if(NativeAnnotation.$$===undefined){initTypeProto(NativeAnnotation,'ceylon.language::NativeAnnotation',Basic,$init$OptionalAnnotation());
}
return NativeAnnotation;}
exports.$init$NativeAnnotation=$init$NativeAnnotation;$init$NativeAnnotation();var $native=function (){return NativeAnnotation();};$native.$crtmm$=function(){return{mod:$CCMM$,$t:{t:NativeAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].native.$an.doc[0]),shared(),annotation()];},d:['$','native']};};
exports.$native=$native;function DocAnnotation(description,$docAnnotation){$init$DocAnnotation();if($docAnnotation===undefined)$docAnnotation=new DocAnnotation.$$;
$docAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:DocAnnotation}};$docAnnotation.description_=description;OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:DocAnnotation}},$docAnnotation);add_type_arg($docAnnotation,'ProgramElement$OptionalAnnotation',{t:Annotated});add_type_arg($docAnnotation,'Value$OptionalAnnotation',{t:DocAnnotation});return $docAnnotation;}
DocAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'description',$mt:'prm',$t:{t:String$},$an:function(){return[doc("Documentation, in Markdown syntax, about the annotated element"),shared()];}}],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:DocAnnotation}}}],$an:function(){return[doc("The annotation class for the [[doc]] annotation."),shared(),$final(),annotation()];},d:['$','DocAnnotation']};};
exports.DocAnnotation=DocAnnotation;function $init$DocAnnotation(){if(DocAnnotation.$$===undefined){initTypeProto(DocAnnotation,'ceylon.language::DocAnnotation',Basic,$init$OptionalAnnotation());
(function($docAnnotation){$defat($docAnnotation,'description',function(){return this.description_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:DocAnnotation,$an:function(){return[doc("Documentation, in Markdown syntax, about the annotated element"),shared()];},d:['$','DocAnnotation','$at','description']};});})(DocAnnotation.$$.prototype);}
return DocAnnotation;}
exports.$init$DocAnnotation=$init$DocAnnotation;$init$DocAnnotation();var doc=function ($s2){return DocAnnotation($s2);};doc.$crtmm$=function(){return{mod:$CCMM$,$t:{t:DocAnnotation},$ps:[{$nm:'description',$mt:'prm',$t:{t:String$},$an:function(){return[doc("Documentation, in Markdown syntax, about the annotated element")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].doc.$an.doc[0]),shared(),annotation()];},d:['$','doc']};};
exports.doc=doc;function SeeAnnotation(programElements,$seeAnnotation){$init$SeeAnnotation();if($seeAnnotation===undefined)$seeAnnotation=new SeeAnnotation.$$;
$seeAnnotation.$$targs$$={ProgramElement$SequencedAnnotation:{t:Annotated},Value$SequencedAnnotation:{t:SeeAnnotation}};if(programElements===undefined){programElements=getEmpty();}
$seeAnnotation.programElements_=programElements;SequencedAnnotation({ProgramElement$SequencedAnnotation:{t:Annotated},Value$SequencedAnnotation:{t:SeeAnnotation}},$seeAnnotation);add_type_arg($seeAnnotation,'ProgramElement$SequencedAnnotation',{t:Annotated});add_type_arg($seeAnnotation,'Value$SequencedAnnotation',{t:SeeAnnotation});return $seeAnnotation;}
SeeAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'programElements',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Declaration$meta$declaration}}},$an:function(){return[doc("The program elements being referred to."),shared()];}}],satisfies:[{t:SequencedAnnotation,a:{ProgramElement$SequencedAnnotation:{t:Annotated},Value$SequencedAnnotation:{t:SeeAnnotation}}}],$an:function(){return[doc("The annotation class for [[see]]."),shared(),$final(),annotation()];},d:['$','SeeAnnotation']};};
exports.SeeAnnotation=SeeAnnotation;function $init$SeeAnnotation(){if(SeeAnnotation.$$===undefined){initTypeProto(SeeAnnotation,'ceylon.language::SeeAnnotation',Basic,$init$SequencedAnnotation());
(function($seeAnnotation){$defat($seeAnnotation,'programElements',function(){return this.programElements_;},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Declaration$meta$declaration}}},$cont:SeeAnnotation,$an:function(){return[doc("The program elements being referred to."),shared()];},d:['$','SeeAnnotation','$at','programElements']};});})(SeeAnnotation.$$.prototype);}
return SeeAnnotation;}
exports.$init$SeeAnnotation=$init$SeeAnnotation;$init$SeeAnnotation();var see=function ($s3){if($s3===undefined){$s3=getEmpty();}
return SeeAnnotation($s3);};see.$crtmm$=function(){return{mod:$CCMM$,$t:{t:SeeAnnotation},$ps:[{$nm:'programElements',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Declaration$meta$declaration}}},$an:function(){return[doc("The program elements being referred to.")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].see.$an.doc[0]),shared(),annotation()];},d:['$','see']};};
exports.see=see;function AuthorsAnnotation(authors,$authorsAnnotation){$init$AuthorsAnnotation();if($authorsAnnotation===undefined)$authorsAnnotation=new AuthorsAnnotation.$$;
$authorsAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:AuthorsAnnotation}};if(authors===undefined){authors=getEmpty();}
$authorsAnnotation.authors_=authors;OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:AuthorsAnnotation}},$authorsAnnotation);add_type_arg($authorsAnnotation,'ProgramElement$OptionalAnnotation',{t:Annotated});add_type_arg($authorsAnnotation,'Value$OptionalAnnotation',{t:AuthorsAnnotation});return $authorsAnnotation;}
AuthorsAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'authors',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:String$}}},$an:function(){return[doc("The authors, in Markdown syntax, of the annotated element"),shared()];}}],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:AuthorsAnnotation}}}],$an:function(){return[doc("The annotation class for [[by]]."),shared(),$final(),annotation()];},d:['$','AuthorsAnnotation']};};
exports.AuthorsAnnotation=AuthorsAnnotation;function $init$AuthorsAnnotation(){if(AuthorsAnnotation.$$===undefined){initTypeProto(AuthorsAnnotation,'ceylon.language::AuthorsAnnotation',Basic,$init$OptionalAnnotation());
(function($authorsAnnotation){$defat($authorsAnnotation,'authors',function(){return this.authors_;},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:String$}}},$cont:AuthorsAnnotation,$an:function(){return[doc("The authors, in Markdown syntax, of the annotated element"),shared()];},d:['$','AuthorsAnnotation','$at','authors']};});})(AuthorsAnnotation.$$.prototype);}
return AuthorsAnnotation;}
exports.$init$AuthorsAnnotation=$init$AuthorsAnnotation;$init$AuthorsAnnotation();var by=function ($s4){if($s4===undefined){$s4=getEmpty();}
return AuthorsAnnotation($s4);};by.$crtmm$=function(){return{mod:$CCMM$,$t:{t:AuthorsAnnotation},$ps:[{$nm:'authors',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:String$}}},$an:function(){return[doc("The authors, in Markdown syntax, of the annotated element")];}}],$an:function(){return[doc("Annotation to specify API authors."),shared(),annotation()];},d:['$','by']};};
exports.by=by;function ThrownExceptionAnnotation(type,when,$thrownExceptionAnnotation){$init$ThrownExceptionAnnotation();if($thrownExceptionAnnotation===undefined)$thrownExceptionAnnotation=new ThrownExceptionAnnotation.$$;
$thrownExceptionAnnotation.$$targs$$={ProgramElement$SequencedAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassDeclaration$meta$declaration}]},Value$SequencedAnnotation:{t:ThrownExceptionAnnotation}};$thrownExceptionAnnotation.type_=type;$thrownExceptionAnnotation.when_=when;SequencedAnnotation({ProgramElement$SequencedAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassDeclaration$meta$declaration}]},Value$SequencedAnnotation:{t:ThrownExceptionAnnotation}},$thrownExceptionAnnotation);add_type_arg($thrownExceptionAnnotation,'Value$SequencedAnnotation',{t:ThrownExceptionAnnotation});return $thrownExceptionAnnotation;}
ThrownExceptionAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'type',$mt:'prm',$t:{t:Declaration$meta$declaration},$an:function(){return[doc("The [[Exception]] type that this thrown."),shared()];}},{$nm:'when',$mt:'prm',$t:{t:String$},$an:function(){return[doc($CCMM$['ceylon.language'].ThrownExceptionAnnotation.$at.when.$an.doc[0]),shared()];}}],satisfies:[{t:SequencedAnnotation,a:{ProgramElement$SequencedAnnotation:{t:'u',l:[{t:FunctionOrValueDeclaration$meta$declaration},{t:ClassDeclaration$meta$declaration}]},Value$SequencedAnnotation:{t:ThrownExceptionAnnotation}}}],$an:function(){return[doc("The annotation class for [[throws]]."),shared(),$final(),annotation()];},d:['$','ThrownExceptionAnnotation']};};
exports.ThrownExceptionAnnotation=ThrownExceptionAnnotation;function $init$ThrownExceptionAnnotation(){if(ThrownExceptionAnnotation.$$===undefined){initTypeProto(ThrownExceptionAnnotation,'ceylon.language::ThrownExceptionAnnotation',Basic,$init$SequencedAnnotation());
(function($thrownExceptionAnnotation){$defat($thrownExceptionAnnotation,'type',function(){return this.type_;},undefined,function(){return{mod:$CCMM$,$t:{t:Declaration$meta$declaration},$cont:ThrownExceptionAnnotation,$an:function(){return[doc("The [[Exception]] type that this thrown."),shared()];},d:['$','ThrownExceptionAnnotation','$at','type']};});$defat($thrownExceptionAnnotation,'when',function(){return this.when_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:ThrownExceptionAnnotation,$an:function(){return[doc($CCMM$['ceylon.language'].ThrownExceptionAnnotation.$at.when.$an.doc[0]),shared()];},d:['$','ThrownExceptionAnnotation','$at','when']};});})(ThrownExceptionAnnotation.$$.prototype);}
return ThrownExceptionAnnotation;}
exports.$init$ThrownExceptionAnnotation=$init$ThrownExceptionAnnotation;$init$ThrownExceptionAnnotation();var $throws=function ($s5,$s6){if($s6===undefined){$s6="";}
return ThrownExceptionAnnotation($s5,$s6);};$throws.$crtmm$=function(){return{mod:$CCMM$,$t:{t:ThrownExceptionAnnotation},$ps:[{$nm:'type',$mt:'prm',$t:{t:Declaration$meta$declaration},$an:function(){return[doc("The [[Exception]] type that this thrown.")];}},{$nm:'when',$mt:'prm',$def:1,$t:{t:String$},$an:function(){return[doc($CCMM$['ceylon.language'].throws.$at.when$wpimty.$an.doc[0])];}}],$an:function(){return[doc($CCMM$['ceylon.language'].throws.$an.doc[0]),shared(),annotation()];},d:['$','throws']};};
exports.$throws=$throws;function DeprecationAnnotation(description,$deprecationAnnotation){$init$DeprecationAnnotation();if($deprecationAnnotation===undefined)$deprecationAnnotation=new DeprecationAnnotation.$$;
$deprecationAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:DeprecationAnnotation}};$deprecationAnnotation.description_=description;OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:DeprecationAnnotation}},$deprecationAnnotation);add_type_arg($deprecationAnnotation,'ProgramElement$OptionalAnnotation',{t:Annotated});add_type_arg($deprecationAnnotation,'Value$OptionalAnnotation',{t:DeprecationAnnotation});$deprecationAnnotation.$prop$getReason={$crtmm$:function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:String$}]},$cont:DeprecationAnnotation,$an:function(){return[doc($CCMM$['ceylon.language'].DeprecationAnnotation.$at.reason.$an.doc[0]),shared()];},d:['$','DeprecationAnnotation','$at','reason']};}};$deprecationAnnotation.$prop$getReason.get=function(){return reason};return $deprecationAnnotation;}
DeprecationAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'description',$mt:'prm',$t:{t:String$},$an:function(){return[doc($CCMM$['ceylon.language'].DeprecationAnnotation.$at.description.$an.doc[0]),shared()];}}],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:DeprecationAnnotation}}}],$an:function(){return[doc("The annotation class for [[deprecated]]."),shared(),$final(),annotation()];},d:['$','DeprecationAnnotation']};};
exports.DeprecationAnnotation=DeprecationAnnotation;function $init$DeprecationAnnotation(){if(DeprecationAnnotation.$$===undefined){initTypeProto(DeprecationAnnotation,'ceylon.language::DeprecationAnnotation',Basic,$init$OptionalAnnotation());
(function($deprecationAnnotation){$defat($deprecationAnnotation,'reason',function(){var $deprecationAnnotation=this;return (!$deprecationAnnotation.description.empty?$deprecationAnnotation.description:null);},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:String$}]},$cont:DeprecationAnnotation,$an:function(){return[doc($CCMM$['ceylon.language'].DeprecationAnnotation.$at.reason.$an.doc[0]),shared()];},d:['$','DeprecationAnnotation','$at','reason']};});$defat($deprecationAnnotation,'description',function(){return this.description_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:DeprecationAnnotation,$an:function(){return[doc($CCMM$['ceylon.language'].DeprecationAnnotation.$at.description.$an.doc[0]),shared()];},d:['$','DeprecationAnnotation','$at','description']};});})(DeprecationAnnotation.$$.prototype);}
return DeprecationAnnotation;}
exports.$init$DeprecationAnnotation=$init$DeprecationAnnotation;$init$DeprecationAnnotation();var deprecated=function ($s7){if($s7===undefined){$s7="";}
return DeprecationAnnotation($s7);};deprecated.$crtmm$=function(){return{mod:$CCMM$,$t:{t:DeprecationAnnotation},$ps:[{$nm:'reason',$mt:'prm',$def:1,$t:{t:String$},$an:function(){return[doc($CCMM$['ceylon.language'].deprecated.$at.reason$8nfbei.$an.doc[0])];}}],$an:function(){return[doc($CCMM$['ceylon.language'].deprecated.$an.doc[0]),shared(),annotation()];},d:['$','deprecated']};};
exports.deprecated=deprecated;function TagsAnnotation(tags,$tagsAnnotation){$init$TagsAnnotation();if($tagsAnnotation===undefined)$tagsAnnotation=new TagsAnnotation.$$;
$tagsAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:TagsAnnotation}};if(tags===undefined){tags=getEmpty();}
$tagsAnnotation.tags_=tags;OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:TagsAnnotation}},$tagsAnnotation);add_type_arg($tagsAnnotation,'ProgramElement$OptionalAnnotation',{t:Annotated});add_type_arg($tagsAnnotation,'Value$OptionalAnnotation',{t:TagsAnnotation});return $tagsAnnotation;}
TagsAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'tags',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:String$}}},$an:function(){return[doc("The tags, in plain text."),shared()];}}],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:Annotated},Value$OptionalAnnotation:{t:TagsAnnotation}}}],$an:function(){return[doc("The annotation class for [[tagged]]."),shared(),$final(),annotation()];},d:['$','TagsAnnotation']};};
exports.TagsAnnotation=TagsAnnotation;function $init$TagsAnnotation(){if(TagsAnnotation.$$===undefined){initTypeProto(TagsAnnotation,'ceylon.language::TagsAnnotation',Basic,$init$OptionalAnnotation());
(function($tagsAnnotation){$defat($tagsAnnotation,'tags',function(){return this.tags_;},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:String$}}},$cont:TagsAnnotation,$an:function(){return[doc("The tags, in plain text."),shared()];},d:['$','TagsAnnotation','$at','tags']};});})(TagsAnnotation.$$.prototype);}
return TagsAnnotation;}
exports.$init$TagsAnnotation=$init$TagsAnnotation;$init$TagsAnnotation();var tagged=function ($s8){if($s8===undefined){$s8=getEmpty();}
return TagsAnnotation($s8);};tagged.$crtmm$=function(){return{mod:$CCMM$,$t:{t:TagsAnnotation},$ps:[{$nm:'tags',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:String$}}},$an:function(){return[doc("The tags, in plain text.")];}}],$an:function(){return[doc("Annotation to categorize the API by tag."),shared(),annotation()];},d:['$','tagged']};};
exports.tagged=tagged;function LicenseAnnotation(description,$licenseAnnotation){$init$LicenseAnnotation();if($licenseAnnotation===undefined)$licenseAnnotation=new LicenseAnnotation.$$;
$licenseAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:Module$meta$declaration},Value$OptionalAnnotation:{t:LicenseAnnotation}};$licenseAnnotation.description_=description;OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:Module$meta$declaration},Value$OptionalAnnotation:{t:LicenseAnnotation}},$licenseAnnotation);add_type_arg($licenseAnnotation,'ProgramElement$OptionalAnnotation',{t:Module$meta$declaration});add_type_arg($licenseAnnotation,'Value$OptionalAnnotation',{t:LicenseAnnotation});return $licenseAnnotation;}
LicenseAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'description',$mt:'prm',$t:{t:String$},$an:function(){return[doc("The name, text, or URL of the license."),shared()];}}],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:Module$meta$declaration},Value$OptionalAnnotation:{t:LicenseAnnotation}}}],$an:function(){return[doc("The annotation class for [[license]]."),shared(),$final(),annotation()];},d:['$','LicenseAnnotation']};};
exports.LicenseAnnotation=LicenseAnnotation;function $init$LicenseAnnotation(){if(LicenseAnnotation.$$===undefined){initTypeProto(LicenseAnnotation,'ceylon.language::LicenseAnnotation',Basic,$init$OptionalAnnotation());
(function($licenseAnnotation){$defat($licenseAnnotation,'description',function(){return this.description_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:LicenseAnnotation,$an:function(){return[doc("The name, text, or URL of the license."),shared()];},d:['$','LicenseAnnotation','$at','description']};});})(LicenseAnnotation.$$.prototype);}
return LicenseAnnotation;}
exports.$init$LicenseAnnotation=$init$LicenseAnnotation;$init$LicenseAnnotation();var license=function ($s9){return LicenseAnnotation($s9);};license.$crtmm$=function(){return{mod:$CCMM$,$t:{t:LicenseAnnotation},$ps:[{$nm:'description',$mt:'prm',$t:{t:String$},$an:function(){return[doc("The name, text, or URL of the license.")];}}],$an:function(){return[doc($CCMM$['ceylon.language'].license.$an.doc[0]),shared(),annotation()];},d:['$','license']};};
exports.license=license;function OptionalImportAnnotation($optionalImportAnnotation){$init$OptionalImportAnnotation();if($optionalImportAnnotation===undefined)$optionalImportAnnotation=new OptionalImportAnnotation.$$;
$optionalImportAnnotation.$$targs$$={ProgramElement$OptionalAnnotation:{t:Import$meta$declaration},Value$OptionalAnnotation:{t:OptionalImportAnnotation}};OptionalAnnotation({ProgramElement$OptionalAnnotation:{t:Import$meta$declaration},Value$OptionalAnnotation:{t:OptionalImportAnnotation}},$optionalImportAnnotation);add_type_arg($optionalImportAnnotation,'ProgramElement$OptionalAnnotation',{t:Import$meta$declaration});add_type_arg($optionalImportAnnotation,'Value$OptionalAnnotation',{t:OptionalImportAnnotation});return $optionalImportAnnotation;}
OptionalImportAnnotation.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:OptionalAnnotation,a:{ProgramElement$OptionalAnnotation:{t:Import$meta$declaration},Value$OptionalAnnotation:{t:OptionalImportAnnotation}}}],$an:function(){return[doc("The annotation class for [[optional]]."),shared(),$final(),annotation()];},d:['$','OptionalImportAnnotation']};};
exports.OptionalImportAnnotation=OptionalImportAnnotation;function $init$OptionalImportAnnotation(){if(OptionalImportAnnotation.$$===undefined){initTypeProto(OptionalImportAnnotation,'ceylon.language::OptionalImportAnnotation',Basic,$init$OptionalAnnotation());
}
return OptionalImportAnnotation;}
exports.$init$OptionalImportAnnotation=$init$OptionalImportAnnotation;$init$OptionalImportAnnotation();var optional=function (){return OptionalImportAnnotation();};optional.$crtmm$=function(){return{mod:$CCMM$,$t:{t:OptionalImportAnnotation},$ps:[],$an:function(){return[doc($CCMM$['ceylon.language'].optional.$an.doc[0]),shared(),annotation()];},d:['$','optional']};};
exports.optional=optional;
function Number$(wat) {
return wat;
}
initType(Number$, 'ceylon.language::Number');
Number$.$crtmm$=function(){return{$an:function(){return[shared()]},mod:$CCMM$,d:['ceylon.language','Number']};}
exports.Number=Number$;
function $init$Number$() {
if (Number$.$$===undefined) {
initType(Number$, 'ceylon.language::Number');
}
return Number$;
}
var toInt = function(float) {
return (float >= 0) ? Math.floor(float) : Math.ceil(float);
}
function JSNumber(value) { return Number(value); }
initExistingType(JSNumber, Number, 'ceylon.language::JSNumber');
JSNumber.$crtmm$=function(){return{$nm:'JSNumber',$mt:'c',$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language','Number']};}
var origNumToString = Number.prototype.toString;
inheritProto(JSNumber, Object$, Scalar, $init$Integral(), Exponentiable);
function Integer(value) {
if (value && value.getT$name && value.getT$name() === 'ceylon.language::Integer') {
return value;
}
return Number(value);
}
initTypeProto(Integer, 'ceylon.language::Integer', Object$, Scalar,
$init$Integral(), Exponentiable, Binary);
Integer.$crtmm$=function(){return{$an:function(){return[shared(),$native(),$final()];},mod:$CCMM$,d:['ceylon.language','Integer']};}
function Float(value) {
if (value && value.getT$name && value.getT$name() === 'ceylon.language::Float') {
return value;
}
var that = new Number(value);
that.float$ = true;
return that;
}
initTypeProto(Float, 'ceylon.language::Float', Object$, Scalar, Exponentiable);
Float.$crtmm$=function(){return{$an:function(){return[shared(),$native(),$final()];},mod:$CCMM$,d:['ceylon.language','Float']};}
var JSNum$proto = Number.prototype;
JSNum$proto.getT$all = function() {
return (this.float$ ? Float : Integer).$$.T$all;
}
JSNum$proto.getT$name = function() {
return (this.float$ ? Float : Integer).$$.T$name;
}
JSNum$proto.toString = origNumToString;
$defat(JSNum$proto, 'string', function(){ return String$(this.toString()); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Object$,d:['ceylon.language','Object','$at','string']};});
JSNum$proto.plus = function(other) {
return (this.float$||other.float$) ? Float(this+other) : (this+other);
}
JSNum$proto.plusInteger = function(other) {
return this.float$ ? Float(this+other) : (this+other);
}
JSNum$proto.minus = function(other) {
return (this.float$||other.float$) ? Float(this-other) : (this-other);
}
JSNum$proto.times = function(other) {
return (this.float$||other.float$) ? Float(this*other) : (this*other);
}
JSNum$proto.timesInteger = function(other) {
return this.float$ ? Float(this*other) : (this*other);
}
JSNum$proto.divided = function(other) {
if (this.float$||other.float$) { return Float(this/other); }
if (other == 0) {
throw Exception(String$("Division by Zero"));
}
return toInt(this/other);
}
JSNum$proto.remainder = function(other) { return this%other; }
JSNum$proto.power = function(exp) {
if (this.float$||exp.float$) { return Float(Math.pow(this, exp)); }
if (exp<0 && this!=1 && this!=-1) {
throw AssertionError(String$("Negative exponent"));
}
return toInt(Math.pow(this, exp));
}
$defat(JSNum$proto, 'negated', function() {
return this.float$ ? Float(-this) : -this;
},undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Invertable,d:['ceylon.language','Invertable','$at','negated']};});
$defat(JSNum$proto, 'negative', function(){
return this.float$ ? this < 0.0 : this.valueOf() < 0;
},undefined,function(){return{$t:{t:Boolean$},$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Number$,d:['ceylon.language','Number','$at','negative']};});
$defat(JSNum$proto, 'positive', function(){
return this.float$ ? this > 0.0 : this.valueOf() > 0;
},undefined,function(){return{$t:{t:Boolean$},$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Number$,d:['ceylon.language','Number','$at','positive']};});
JSNum$proto.equals = function(other) { return (typeof(other)==='number' || other.constructor===Number) && other==this.valueOf(); }
JSNum$proto.compare = function(other) {
var value = this.valueOf();
return value==other ? equal : (value<other ? smaller:larger);
}
$defat(JSNum$proto, '$float', function(){ return Float(this.valueOf()); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Number$,d:['ceylon.language','Number','$at','float']};});
$defat(JSNum$proto, 'integer', function(){ return toInt(this); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Number$,d:['ceylon.language','Number','$at','integer']};});
$defat(JSNum$proto, 'integerValue', function(){ return toInt(this); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Ordinal,d:['ceylon.language','Ordinal','$at','integerValue']};});
$defat(JSNum$proto, 'character', function(){ return Character(this.valueOf()); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Integer,d:['ceylon.language','Integer','$at','character']};});
$defat(JSNum$proto, 'successor', function(){ return this+1; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Ordinal,d:['ceylon.language','Ordinal','$at','successor']};});
$defat(JSNum$proto, 'predecessor', function(){ return this-1; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Ordinal,d:['ceylon.language','Ordinal','$at','predecessor']};});
$defat(JSNum$proto, 'unit', function(){ return this == 1; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Integral,d:['ceylon.language','Integral','$at','unit']};});
$defat(JSNum$proto, 'zero', function(){ return this == 0; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Integral,d:['ceylon.language','Integral','$at','zero']};});
$defat(JSNum$proto, 'fractionalPart', function() {
if (!this.float$) { return 0; }
return Float(this - (this>=0 ? Math.floor(this) : Math.ceil(this)));
},undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Number$,d:['ceylon.language','Number','$at','fractionalPart']};});
$defat(JSNum$proto, 'wholePart', function() {
if (!this.float$) { return this.valueOf(); }
return Float(this>=0 ? Math.floor(this) : Math.ceil(this));
},undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Number$,d:['ceylon.language','Number','$at','wholePart']};});
$defat(JSNum$proto, 'sign', function(){ return this > 0 ? 1 : this < 0 ? -1 : 0; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Number$,d:['ceylon.language','Number','$at','sign']};});
$defat(JSNum$proto, 'hash', function() {
return this.float$ ? String$(this.toPrecision()).hash : this.valueOf();
},undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Object$,d:['ceylon.language','Object','$at','hash']};});
JSNum$proto.distanceFrom = function(other) {
return (this.float$ ? this.wholePart : this) - other;
}
$defat(JSNum$proto, 'not', function(){ return ~this; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Binary,d:['ceylon.language','Binary','$at','not']};});
JSNum$proto.leftLogicalShift = function(i) { return this << i; }
JSNum$proto.rightLogicalShift = function(i) { return this >> i; }
JSNum$proto.rightArithmeticShift = function(i) { return this >>> i; }
JSNum$proto.and = function(x) { return this & x; }
JSNum$proto.or = function(x) { return this | x; }
JSNum$proto.xor = function(x) { return this ^ x; }
JSNum$proto.$get = function(idx) {
if (idx < 0 || idx >31) {
return false;
}
var mask = 1 << idx;
return (this & mask) != 0 ? $true : $false;
}
JSNum$proto.set = function(idx,bit) {
if (idx < 0 || idx >31) {
return this;
}
if (bit === undefined) { bit = $true; }
var mask = idx > 1 ? 1 << idx : 1;
return (bit === $true) ? this | mask : this & ~mask;
}
JSNum$proto.flip = function(idx) {
if (idx < 0 || idx >31) {
return this;
}
var mask = 1 << idx;
return this ^ mask;
}
JSNum$proto.clear = function(index) {
return this.set(index, false);
}
$defat(JSNum$proto, 'magnitude', function(){ return Math.abs(this); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Number$,d:['ceylon.language','Number','$at','magnitude']};});
function $parseFloat(s) { return Float(parseFloat(s)); }
$parseFloat.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Float}]},$ps:[{$nm:'string',$t:{t:String$}}],d:['ceylon.language','parseFloat']};}
$defat(JSNum$proto, 'undefined', function(){ return isNaN(this); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Float,d:['ceylon.language','Float','$at','undefined']};});
$defat(JSNum$proto, 'finite', function(){ return this!=Infinity && this!=-Infinity && !isNaN(this); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Float,d:['ceylon.language','Float','$at','finite']};});
$defat(JSNum$proto, 'infinite', function(){ return this==Infinity || this==-Infinity; },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Float,d:['ceylon.language','Float','$at','infinite']};});
$defat(JSNum$proto, 'strictlyPositive', function(){ return this>0 || (this==0 && (1/this==Infinity)); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Float,d:['ceylon.language','Float','$at','strictlyPositive']};});
$defat(JSNum$proto, 'strictlyNegative', function() { return this<0 || (this==0 && (1/this==-Infinity)); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Float,d:['ceylon.language','Float','$at','strictlyNegative']};});
var $infinity = Float(Infinity);
function getInfinity() { return $infinity; }
exports.$prop$getInfinity={get:getInfinity,$crtmm$:function(){return{mod:$CCMM$,$t:{t:Float},d:['ceylon.language','infinity']};}};
exports.Integer=Integer;
exports.Float=Float;
exports.getInfinity=getInfinity;
exports.parseFloat=$parseFloat;
function getNull() { return null }
exports.$prop$getNull={get:getNull,$crtmm$:function(){return{mod:$CCMM$,d:['ceylon.language','null'],$t:{t:Null}};}};
function Boolean$(value) {return Boolean(value)}
initExistingTypeProto(Boolean$, Boolean, 'ceylon.language::Boolean');
Boolean$.$crtmm$={$ps:[],$an:function(){return[shared(),abstract()]},mod:$CCMM$,d:['ceylon.language','Boolean']};
var $Boolean=Boolean$;
function trueClass() {}
initType(trueClass, "ceylon.language::true", Boolean$);
function falseClass() {}
initType(falseClass, "ceylon.language::false", Boolean$);
Boolean.prototype.getT$name = function() {
return (this.valueOf()?trueClass:falseClass).$$.T$name;
}
Boolean.prototype.getT$all = function() {
return (this.valueOf()?trueClass:falseClass).$$.T$all;
}
Boolean.prototype.equals = function(other) {return other.constructor===Boolean && other==this;}
$defat(Boolean.prototype, 'hash', function(){ return this.valueOf()?1:0; },
undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['ceylon.language','Object','$at','hash']});
var trueString = String$("true", 4);
var falseString = String$("false", 5);
$defat(Boolean.prototype, 'string', function(){ return this.valueOf()?trueString:falseString; },
undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['ceylon.language','Object','$at','string']});
$defat(Boolean.prototype, 'not', function(){ return !this.valueOf(); },
undefined,function(){return{$an:function(){return[shared(),actual()]},mod:$CCMM$,$cont:Binary,d:['ceylon.language','Binary','$at','not']};});
Boolean.prototype.leftLogicalShift = function(i) { return this.valueOf(); }
Boolean.prototype.rightLogicalShift = function(i) { return this.valueOf(); }
Boolean.prototype.rightArithmeticShift = function(i) { return this.valueOf(); }
Boolean.prototype.and = function(x) { return this.valueOf() && x.valueOf(); }
Boolean.prototype.or = function(x) { return this.valueOf() || x.valueOf(); }
Boolean.prototype.xor = function(x) { return this.valueOf()?!x.valueOf():x.valueOf(); }
Boolean.prototype.$get = function(idx) {
return idx === 0 ? this.valueOf() : false;
}
Boolean.prototype.set = function(idx,bit) {
if (bit === undefined) { bit = $true; }
return idx === 0 ? bit.valueOf() : this.valueOf();
}
Boolean.prototype.flip = function(idx) {
return idx === 0 ? !this.valueOf() : this.valueOf();
}
Boolean.prototype.clear = function(index) {
return index === 0 ? false : this.valueOf();
}
function getTrue() {return true;}
function getFalse() {return false;}
exports.$prop$getTrue={get:getTrue,$crtmm$:function(){return{mod:$CCMM$,d:['ceylon.language','true'],$t:{t:Boolean$}};}};
exports.$prop$getFalse={get:getFalse,$crtmm$:function(){return{mod:$CCMM$,d:['ceylon.language','false'],$t:{t:Boolean$}};}};
var $true = true;
var $false = false;
function Comparison(name) {
var that = new Comparison.$$;
that.name = String$(name);
return that;
}
initTypeProto(Comparison, 'ceylon.language::Comparison', $init$Basic());
Comparison.$crtmm$={$ps:[{t:String$}],$an:function(){return[shared(),abstract()]},mod:$CCMM$,d:['ceylon.language','Comparison']};
var Comparison$proto = Comparison.$$.prototype;
$defat(Comparison$proto, 'string', function(){ return this.name; },
undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['ceylon.language','Object','$at','string']});
function Mapita(o,$$targs$$,$$mapita){
$init$Mapita();
if($$mapita===undefined)$$mapita=new Mapita.$$;
set_type_args($$mapita,$$targs$$);
Map({Item$Map:$$targs$$.V$Mapita,Key$Map:$$targs$$.K$Mapita},$$mapita);
$$mapita.o=o;
$$mapita.$prop$getHash={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Mapita,$an:function(){return[shared(),actual()];},d:['ceylon.language','Map','$at','hash']};}};
$$mapita.$prop$getHash.get=function(){return hash};
return $$mapita;
}
Mapita.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$tp:{K$Mapita:{'var':'out','satisfies':[{t:Object$}]},V$Mapita:{'var':'out','satisfies':[{t:Object$}]}},satisfies:[{t:Map,a:{Item$Map:'V$Mapita',Key$Map:'K$Mapita'}}],$an:function(){return[shared()];},d:['','Mapita']};};
exports.Mapita=Mapita;
function $init$Mapita(){
if(Mapita.$$===undefined){
initTypeProto(Mapita,'Mapita',Basic,$init$Map());
(function($$mapita){
$$mapita.equals=function (other$2){
var $$mapita=this;
return $$mapita.getT$all()['ceylon.language::Map'].$$.prototype.equals.call(this,other$2);
};
$$mapita.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},$ps:[{$nm:'other',$mt:'prm',$t:{t:Object$},$an:function(){return[];}}],$cont:Mapita,$an:function(){return[shared(),actual()];},d:['ceylon.language','Map','$m','equals']};};
$defat($$mapita,'hash',function(){
var $$mapita=this;
return attrGetter($$mapita.getT$all()['ceylon.language::Map'],'hash').call(this);
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:Mapita,$an:function(){return[shared(),actual()];},d:['ceylon.language','Map','$at','hash']};});
$$mapita.clone=function (){
return this;
};
$$mapita.clone.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Mapita,a:{V$Mapita:'V$Mapita',K$Mapita:'K$Mapita'}},$ps:[],$cont:Mapita,$an:function(){return[shared(),actual()];},d:['','Mapita','$m','clone']};};
$$mapita.iterator=function iterator(){
var $$mapita=this;
function miter$3($$targs$$){
var $$miter$3=new miter$3.$$;
$$miter$3.$$targs$$=$$targs$$;
Iterator({Element$Iterator:{t:Entry,a:{Item$Entry:$$targs$$.V$Mapita,Key$Entry:$$targs$$.K$Mapita}}},$$miter$3);
add_type_arg($$miter$3,'Element$Iterator',{t:Entry,a:{Item$Entry:$$mapita.$$targs$$.V$Mapita,Key$Entry:$$mapita.$$targs$$.K$Mapita}});
$$miter$3.keys=[];
for (var k in $$mapita.o) $$miter$3.keys.push(k);
$$miter$3.idx=-1;
return $$miter$3;
};miter$3.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Iterator,a:{Element$Iterator:{t:Entry,a:{Item$Entry:'V$Mapita',Key$Entry:'K$Mapita'}}}}],d:['','Mapita','$m','iterator','$o','miter']};};
function $init$miter$3(){
if(miter$3.$$===undefined){
initTypeProto(miter$3,'Mapita.iterator.miter',Basic,Iterator);
(function($$miter$3){
$$miter$3.next=function next(){
var $$miter=this;
$$miter.idx++;
if ($$miter.idx>=$$miter.keys.length)return getFinished();
var k$8=$$miter.keys[$$miter.idx];
var v$8=$$mapita.o[k$8]||null;
return Entry(k$8,v$8,{Key$Entry:$$mapita.$$targs$$.K$Mapita,Item$Entry:$$mapita.$$targs$$.V$mapita});
};$$miter$3.next.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u', l:[{t:Entry,a:{Item$Entry:'V$Mapita',Key$Entry:'K$Mapita'}},{t:Finished}]},$ps:[],$cont:miter$3,$an:function(){return[shared(),actual()];},d:['','Mapita','$m','iterator','$o','miter','$m','next']};};
})(miter$3.$$.prototype);
}
return miter$3;
}
$init$miter$3();
var miter$9;
function getMiter$9(){
if(miter$9===undefined){miter$9=$init$miter$3()({Element$Iterator:{t:Entry,a:{Item$Entry:$$mapita.$$targs$$.V$Mapita,Key$Entry:$$mapita.$$targs$$.K$Mapita}}});miter$9.$crtmm$=getMiter$9.$crtmm$;}
return miter$9;
}
getMiter$9.$crtmm$=function(){return{mod:$CCMM$,$t:{t:miter$3},d:['','Mapita','$m','iterator','$o','miter']};};
$prop$getMiter$9={get:getMiter$9,$crtmm$:getMiter$9.$crtmm$};
return getMiter$9();
};$$mapita.iterator.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Iterator,a:{Element$Iterator:{t:Entry,a:{Item$Entry:'V$Mapita',Key$Entry:'K$Mapita'}}}},$ps:[],$cont:Mapita,$an:function(){return[shared(),actual()];},d:['','Mapita','$m','iterator']};};
$$mapita.$get=function $get(k$3){
var v=this.o[k$3];
return v||null;
};$$mapita.$get.$crtmm$=function(){return{mod:$CCMM$,$t:'V$Mapita',$ps:[{$nm:'k',$mt:'prm',$t:{t:Object$},$an:function(){return[];}}],$cont:Mapita,$an:function(){return[shared(),actual()];},d:['','Mapita','$m','get']};};
})(Mapita.$$.prototype);
}
return Mapita;
}
exports.$init$Mapita=$init$Mapita;
$init$Mapita();
var larger=Comparison("larger");
function getLarger(){return larger}
var smaller=Comparison("smaller");
function getSmaller(){return smaller}
var equal=Comparison("equal");
function getEqual(){return equal}
exports.getLarger=getLarger;
exports.getSmaller=getSmaller;
exports.getEqual=getEqual;
exports.$prop$getLarger={get:getLarger,$crtmm$:function(){return{mod:$CCMM$,d:['$','larger'],$t:{t:Comparison}};}};
exports.$prop$getSmaller={get:getSmaller,$crtmm$:function(){return{mod:$CCMM$,d:['$','smaller'],$t:{t:Comparison}};}};
exports.$prop$getEqual={get:getEqual,$crtmm$:function(){return{mod:$CCMM$,d:['$','equal'],$t:{t:Comparison}};}};
function exists(value){
return value!==null&&value!==undefined;
}
function nonempty(value){
return value!==null&&value!==undefined&&!value.empty;
}
function $is(obj,type){
if(type && type.t){
if(type.t==='i'||type.t==='u'){
return isOfTypes(obj, type);
} else if(type.t==='T'){
type=$retuple(type);
}
if(obj===null||obj===undefined){
return type.t===Null||type.t===Anything;
}
if(obj.getT$all===undefined){
if(obj.$crtmm$){
var _mm=getrtmm$$(obj);
if(_mm.d['$mt']==='m'){
if(type.t===Callable){
if(type.a&&type.a.Return$Callable&&_mm['$t']){
if(extendsType(_mm['$t'],type.a.Return$Callable)){
if(type.a.Arguments$Callable&&_mm['$ps']!==undefined){
var metaparams=_mm['$ps'];
if(metaparams.length==0){
return type.a.Arguments$Callable.t === Empty;
}else{
var comptype=type.a.Arguments$Callable;
for(var i=0;i<metaparams.length;i++){
if(comptype.t!==Tuple||!extendsType(metaparams[i]['$t'],comptype.a.First$Tuple)){
return false;
}
comptype=comptype.a.Rest$Tuple;
}
}
}
return true;
}
}
}
}
}
return false;
}
if(type.t.$$.T$name in obj.getT$all()){
if(type.t==Callable&&!(obj.$$targs$$ && obj.$$targs$$.Return$Callable && obj.$$targs$$.Arguments$Callable)
&& getrtmm$$(obj)&&obj.$crtmm$.$t && obj.$crtmm$.$ps!==undefined){
add_type_arg(obj,'Return$Callable',obj.$crtmm$.$t);
add_type_arg(obj,'Arguments$Callable',{t:'T',l:[]});
for(var i=0;i<obj.$crtmm$.$ps.length;i++){
obj.$$targs$$.Arguments$Callable.l.push(obj.$crtmm$.$ps[i].$t);
}
}
if(type.a && obj.$$targs$$) {
for(var i in type.a) {
var cmptype=type.a[i];
var tmpobj=obj;
var iance=null;
var _mm=getrtmm$$(type.t);
if(_mm&&_mm.$tp&&_mm.$tp[i])iance=_mm.$tp[i]['var'];
if(iance===null) {
while(iance===null&&tmpobj.$$outer!==undefined){
tmpobj=tmpobj.$$outer;
var _tmpf = tmpobj.constructor.T$all[tmpobj.constructor.T$name];
var _mmf = getrtmm$$(_tmpf);
if(_mmf&&_mmf.$tp&&_mmf.$tp[i]){
iance=_mmf.$tp[i]['var'];
}
if(iance===null&&_mmf&&_mmf['super']){
var smm=getrtmm$$(_mmf['super'].t);
if(smm&&smm.$tp&&smm.$tp[i])iance=smm.$tp[i]['var'];
}
if(iance===null&&_mmf&&_mmf['satisfies']){
var sats=_mmf['satisfies'];
for(var s=0;iance===null&&s<sats.length;s++){
var smm=getrtmm$$(sats[s].t);
if (smm&&smm.$tp&&smm.$tp[i])iance=smm.$tp[i]['var'];
}
}
}
}
if(iance===null) {
var _omm=_mm;
while(iance===null&&_omm) {
if(_omm.$tp&&_omm.$tp[i]!==undefined){
iance=_omm.$tp[i]['var'];
tmpobj=obj;
}
if(iance===null)_omm=getrtmm$$(_omm.$cont);
}
}
if (iance === 'out') {
if (!extendsType(tmpobj.$$targs$$[i], cmptype)) {
return false;
}
} else if (iance === 'in') {
if (!extendsType(cmptype, tmpobj.$$targs$$[i])) {
return false;
}
} else if (iance === undefined) {
var _targ=tmpobj.$$targs$$[i];
if (!(_targ && _targ.t && (_targ.t.$$ || _targ.t==='i' || _targ.t==='u')))return false;
if (_targ.t.$$) {
if (cmptype && cmptype.t && cmptype.t.$$) {
if (!(cmptype.t.$$.T$name && _targ.t.$$.T$name === cmptype.t.$$.T$name))return false;
} else if (cmptype && cmptype.t && cmptype.t==='i') {
if (cmptype.t!==_targ.t || !cmptype.l || cmptype.l.length!==_targ.l.length)return false;
for (var i=0; i<_targ.l.length;i++) {
if (!extendsType(_targ.l[i],cmptype))return false;
}
} else if (cmptype && cmptype.t && cmptype.t==='u') {
if (cmptype.t!==_targ.t || !cmptype.l || cmptype.l.length!==_targ.l.length)return false;
for (var i=0; i<_targ.l.length;i++) {
if (!extendsType(_targ.l[i],cmptype))return false;
}
}
} else {
if (cmptype.t!==_targ.t || !cmptype.l || cmptype.l.length!==_targ.l.length)return false;
for (var i=0; i<_targ.l.length;i++) {
if (!extendsType(_targ.l[i],cmptype))return false;
}
}
} else if (iance === null) {
console.log("Possible missing metamodel for " + type.t.$$.T$name + "<" + i + ">");
} else {
console.log("Don't know what to do about variance '" + iance + "'");
}
}
}
return true;
}
}
return false;
}
function isOfTypes(obj, types) {
if (obj===null) {
for (var i=0; i < types.l.length; i++) {
if(types.l[i].t===Null || types.l[i].t===Anything) return true;
else if (types.l[i].t==='u') {
if (isOfTypes(null, types.l[i])) return true;
}
}
return false;
}
if (obj === undefined || obj.getT$all === undefined) { return false; }
var unions = false;
var inters = true;
var _ints=false;
var objTypes = obj.getT$all();
for (var i = 0; i < types.l.length; i++) {
var t = types.l[i];
var partial = $is(obj, t);
if (types.t==='u') {
unions = partial || unions;
} else {
inters = partial && inters;
_ints=true;
}
}
return _ints ? inters||unions : unions;
}
function extendsType(t1, t2) { //true if t1 is subtype of t2
if (t1 === undefined || t1.t === undefined || t1.t === Nothing || t2 === undefined || t2.t === undefined) {
return true;//t2 === undefined;
} else if (t2 && t2.t === Anything) {
return true;
} else if (t1 === null) {
return t2.t === Null || t2.t === Anything;
}
if (t1.t === 'u' || t1.t === 'i') {
if (t1.t==='i')removeSupertypes(t1.l);
var unions = false;
var inters = true;
var _ints = false;
for (var i = 0; i < t1.l.length; i++) {
var partial = extendsType(t1.l[i], t2);
if (t1.t==='i') {
unions = partial||unions;
} else {
inters = partial&&inters;
_ints=true;
}
}
return _ints ? inters||unions : unions;
}
if (t2.t === 'u' || t2.t === 'i') {
if (t2.t==='i')removeSupertypes(t2.l);
var unions = false;
var inters = true;
var _ints = false;
for (var i = 0; i < t2.l.length; i++) {
var partial = extendsType(t1, t2.l[i]);
if (t2.t==='u') {
unions = partial||unions;
} else {
inters = partial&&inters;
_ints=true;
}
}
return _ints ? inters||unions : unions;
}
if (t1.t==='T') {
if (t2.t==='T') {
if (t1.l.length>=t2.l.length) {
for (var i=0; i < t2.l.length;i++) {
if (!extendsType(t1.l[i],t2.l[i]))return false;
}
return true;
} else return false;
} else {
t1=$retuple(t1);
}
} else if (t2.t==='T') {
t2=$retuple(t2);
}
for (t in t1.t.$$.T$all) {
if (t === t2.t.$$.T$name || t === 'ceylon.language::Nothing') {
if (t1.a && t2.a) {
for (ta in t1.a) {
if (!extendsType(t1.a[ta], t2.a[ta])) return false;
}
}
return true;
}
}
return false;
}
function removeSupertypes(list) {
for (var i=0; i < list.length; i++) {
for (var j=i; i < list.length; i++) {
if (i!==j) {
if (extendsType(list[i],list[j])) {
list[j]=list[i];
} else if (extendsType(list[j],list[i])) {
list[i]=list[j];
}
}
}
}
}
function className(obj) {
function _typename(t) {
if (t.t==='i' || t.t==='u') {
var _sep = t.t==='i'?'&':'|';
var ct = '';
for (var i=0; i < t.l.length; i++) {
if (i>0) { ct+=_sep; }
ct += _typename(t.l[i]);
}
return String$(ct);
} else {
var tn = t.t.$$.T$name;
if (t.a) {
tn += '<';
for (var i = 0; i < t.a.length; i++) {
if (i>0) { tn += ','; }
tn += _typename(t.a[i]);
}
tn += '>';
}
return tn;
}
}
if (obj === null) return String$('ceylon.language::Null');
if (obj === undefined) return String$("JavaScript UNDEFINED");
var tn = obj.getT$name === undefined ? 'UNKNOWN' : obj.getT$name();
if (tn === 'UNKNOWN') {
if (typeof obj === 'function') {
tn = 'ceylon.language::Callable';
}
}
else if (obj.$$targs$$) {
/*tn += '<';
for (var i=0; i < obj.$$targs$$.length; i++) {
if (i>0) { tn += ','; }
tn += _typename(obj.$$targs$$[i]);
}
tn += '>';*/
}
return String$(tn);
}
className.$crtmm$={$an:function(){return[shared()];},mod:$CCMM$,d:['$','className']};
function identityHash(obj) {
return obj.BasicID;
}
identityHash.$crtmm$={$an:function(){return[shared()];},mod:$CCMM$,d:['$','identityHash']};
function set_type_args(obj, targs) {
if (obj===undefined)return;
if (obj.$$targs$$ === undefined) {
obj.$$targs$$={};
}
for (x in targs) {
obj.$$targs$$[x] = targs[x];
}
}
function add_type_arg(obj, name, type) {
if (obj===undefined)return;
if (obj.$$targs$$ === undefined) {
obj.$$targs$$={};
}
obj.$$targs$$[name]=type;
}
function wrapexc(e,loc,file) {
if (loc !== undefined) e.$loc=loc;
if (file !== undefined) e.$file=file;
return e;
}
function throwexc(e,loc,file) {
if (loc !== undefined) e.$loc=loc;
if (file !== undefined) e.$file=file;
throw e;
}
function $nn(e) {
return e!==null&&e!==undefined;
}
exports.set_type_args=set_type_args;
exports.add_type_arg=add_type_arg;
exports.exists=exists;
exports.nonempty=nonempty;
exports.$is=$is;
exports.className=className;
exports.identityHash=identityHash;
exports.throwexc=throwexc;
exports.wrapexc=wrapexc;
exports.$nn=$nn;
function internalSort(comp, elems, $$$mptypes) {
if (elems===undefined) {return getEmpty();}
var arr = [];
var it = elems.iterator();
var e;
while ((e=it.next()) !== getFinished()) {arr.push(e);}
if (arr.length === 0) {return getEmpty();}
arr.sort(function(a, b) {
var cmp = comp(a,b);
return (cmp===larger) ? 1 : ((cmp===smaller) ? -1 : 0);
});
return ArraySequence(arr, {Element$Iterable:$$$mptypes.Element$internalSort});
}
internalSort.$crtmm$=function(){return{
$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language','internalSort'],
$ps:[{$nm:'comparing',$t:{t:Callable,a:{Return$Callable:{t:Comparison},Arguments$Callable:{t:'T',l:['Element$internalSort','Element$internalSort']}}},$mt:'prm'},{$nm:'elements',$t:{t:Iterable,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$internalSort'}},$mt:'prm'}],
$tp:{Element$internalSort:{}}, $t:{t:Sequential,a:{Absent$Iterable:{t:Null},Element$Iterable:'Element$internalSort'}}
}};
function flatten(tf, $$$mptypes) {
function rf() {
var t = getEmpty();
var e = null;
var argc = arguments.length;
var last = argc>0 ? arguments[argc-1] : undefined;
if (typeof(last) === 'object' && typeof(last.Args$flatten) === 'object' && (last.Args$flatten.t==='T'||typeof(last.Args$flatten.t) === 'function')) {
argc--;
}
for (var i=argc-1; i>=0; i--) {
var c = arguments[i]===null ? Null :
arguments[i] === undefined ? Empty :
arguments[i].getT$all ? arguments[i].getT$all() :
Anything;
if (e === null) {
e = c;
} else if (e.t === 'u' && e.l.length > 0) {
var l = [c];
for (var j=0; j < e.l.length; j++) {
l[j+1] = e.l[j];
}
} else {
e = {t:'u', l:[e, c]};
}
var rest;
if (t === getEmpty()) {
rest={t:Empty};
} else {
rest={t:Tuple, a:t.$$targs$$};
}
t = Tuple(arguments[i], t, {First$Tuple:c, Element$Tuple:e, Rest$Tuple:rest});
}
return tf(t, t.$$targs$$);
};
rf.$$targs$$={Return$Callable:$$$mptypes.Return$flatten,Arguments$Callable:$$$mptypes.Args$flatten};
return rf;
}
flatten.$crtmm$=function(){return{
$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language','flatten'],
$tp:{Return$flatten:{},Args$flatten:{'satisfies':[{t:Sequential,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Anything}}}]}},
$t:{t:Callable,a:{Return$Callable:'Return',Arguments$Callable:{t:Sequential,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Anything}}}}},
$p:[{$nm:'tupleFunction',$t:{t:Callable,a:{Return$Callable:'Return$flatten',Arguments$Callable:{t:'T',l:[{t:Sequential,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Anything}}}]}}},$mt:'prm'}]
}};
function unflatten(ff, $$$mptypes) {
if (getrtmm$$(ff) && ff.$crtmm$.$ps) {
var ru=function ru(seq,$mptypes) {
if (seq===undefined || seq.size === 0) { return ff(); }
var pmeta = ff.$crtmm$.$ps;
var _lim=Math.max(pmeta.length,seq.size);
var a = [];
for (var i = 0; i < _lim; i++) {
if (pmeta[i]&&pmeta[i]['seq']) {
a.push(seq.skipping(i).sequence);
break;//we're done
} else if (seq.size > i) {
a.push(seq.$get(i));
}
}
if ($mptypes && ff.$crtmm$.$tp)a.push($mptypes);
return ff.apply(ru, a);
}
} else {
var ru=function ru(seq) {
if (seq===undefined || seq.size === 0) { return ff(); }
var a = [];
for (var i = 0; i < seq.size; i++) {
a[i] = seq.$get(i);
}
a[i]=ru.$$targs$$;
return ff.apply(ru, a);
}
}
ru.$$targs$$={Return$Callable:$$$mptypes.Return$unflatten,Arguments$Callable:{t:'T',l:[$$$mptypes.Args$unflatten]}};
return ru;
}
unflatten.$crtmm$=function(){return{
$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language','unflatten'],
$tp:{Return$unflatten:{},Args$unflatten:{'satisfies':[{t:Sequential,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Anything}}}]}},
$ps:[{$nm:'flatFunction',$t:{t:Callable,a:{Return$Callable:'Return$unflatten',Arguments$Callable:{t:Sequential,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Anything}}}}},$mt:'prm'}],
$t:{t:Callable,a:{Return$Callable:'Return$unflatten',Arguments$Callable:{t:'T',l:[{t:Sequential,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Anything}}}]}}}
}};
exports.flatten=flatten;
exports.unflatten=unflatten;
function toTuple(iterable) {
var seq = iterable.sequence;
return Tuple(seq.first, seq.rest.sequence,
{First$Tuple:seq.$$targs$$.Element$Iterable, Element$Tuple:seq.$$targs$$.Element$Iterable, Rest$Tuple:{t:Sequential, a:seq.$$targs$$}});
}
exports.toTuple=toTuple;
function languageClass() {
var lang = new languageClass.$$;
Basic(lang);
return lang;
}
languageClass.$crtmm$={$nm:'languageClass',$mt:'c',$ps:[],$an:function(){return[shared()];},mod:$CCMM$,d:['$','language']};
initTypeProto(languageClass, "ceylon.language::language", $init$Basic());
var lang$proto=languageClass.$$.prototype;
$defat(lang$proto, 'version', function() {
return String$("1.1.0",3);
},undefined,{$t:{t:String$}, $cont:lang$proto, $an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','language','$at','version']});
$defat(lang$proto, 'majorVersion', function(){ return 1; },undefined,
{$t:{t:Integer}, $cont:lang$proto, $an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','language','$at','majorVersion']});
$defat(lang$proto, 'minorVersion', function(){ return 1; },undefined,
{$t:{t:Integer}, $cont:lang$proto, $an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','language','$at','minorVersion']});
$defat(lang$proto, 'releaseVersion', function(){ return 0; },undefined,
{$t:{t:Integer}, $cont:lang$proto, $an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','language','$at','releaseVersion']});
$defat(lang$proto, 'versionName', function(){ return String$("Unflatzburged",13); },undefined,
{$t:{t:String$}, $cont:lang$proto, $an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','language','$at','versionName']});
$defat(lang$proto, 'majorVersionBinary', function(){ return 7; },undefined,
{$t:{t:Integer}, $cont:lang$proto, $an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','language','$at','majorVersionBinary']});
$defat(lang$proto, 'minorVersionBinary', function(){ return 0; },undefined,
{$t:{t:Integer}, $cont:lang$proto, $an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','language','$at','minorVersionBinary']});
var languageString = String$("language", 8);
$defat(lang$proto, 'string', function() {
return languageString;
},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','Object','$at','string']});
var language$ = languageClass();
function getLanguage() { return language$; }
exports.getLanguage=getLanguage;
exports.$prop$getLanguage={get:getLanguage,$crtmm$:function(){
return {mod:$CCMM$,d:['$','language'],$t:{t:languageClass}};
}};
function processClass() {
var proc = new processClass.$$;
Basic(proc);
return proc;
}
processClass.$crtmm$={$nm:'processClass',$mt:'c',$ps:[],$an:function(){return[shared()];},mod:$CCMM$,d:['$','process']};
initTypeProto(processClass, "ceylon.language::process", $init$Basic());
var process$proto = processClass.$$.prototype;
var argv = getEmpty();
var namedArgs = {};
if ((typeof process !== "undefined") && (process.argv !== undefined)) {
if (process.argv.length > 1) {
var args = process.argv.slice(1);
for (var i=0; i<args.length; ++i) {
var arg = args[i];
if (arg.charAt(0) == '-') {
var pos = 1;
if (arg.charAt(1) == '-') { pos = 2; }
arg = arg.substr(pos);
pos = arg.indexOf('=');
if (pos >= 0) {
namedArgs[arg.substr(0, pos)] = String$(arg.substr(pos+1));
} else {
var value = args[i+1];
if ((value !== undefined) && (value.charAt(0) != '-')) {
namedArgs[arg] = String$(value);
++i;
} else {
namedArgs[arg] = null;
}
}
}
args[i] = String$(args[i]);
}
argv = ArraySequence(args, {Element$Iterable:{t:String$}});
}
} else if (typeof window !== "undefined") {
var parts = window.location.search.substr(1).replace('+', ' ').split('&');
if ((parts.length > 1) || ((parts.length > 0) && (parts[0].length > 0))) {
var argStrings = new Array(parts.length);
var i;
for (i=0; i<parts.length; i++) { argStrings[i] = String$(parts[i]); }
argv = ArraySequence(argStrings, {Element$Iterable:{t:String$}});
for (i=0; i < parts.length; i++) {
var part = parts[i];
var pos = part.indexOf('=');
if (pos >= 0) {
var value = decodeURIComponent(part.substr(pos+1));
namedArgs[part.substr(0, pos)] = String$(value);
} else {
namedArgs[part] = null;
}
}
}
}
$defat(process$proto, 'arguments', function(){ return argv; },undefined,
{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','process','$at','arguments']});
process$proto.namedArgumentPresent = function(name) {
return (name in namedArgs);
}
process$proto.namedArgumentValue = function(name) {
var value = namedArgs[name];
return (value !== undefined) ? value : null;
}
var properties = {};
if (typeof navigator !== "undefined") {
if (navigator.language !== undefined) {
properties["user.language"] = String$(navigator.language);
}
if (navigator.platform !== undefined) {
properties["os.name"] = String$(navigator.platform);
}
if (navigator.userLanguage||navigator.browserLanguage||navigator.language) {
properties["user.locale"]=String$(navigator.userLanguage||navigator.browserLanguage||navigator.language);
}
}
if (typeof process !== "undefined") {
if (process.platform !== undefined) {
properties["os.name"] = String$(process.platform);
}
if (process.arch !== undefined) {
properties["os.arch"] = String$(process.arch);
}
}
if (typeof document !== "undefined") {
if (document.defaultCharset !== undefined) {
properties["file.encoding"] = String$(document.defaultCharset);
}
}
var linesep = String$('\n', 1);
var filesep = String$('/', 1);
var pathsep = String$(':', 1);
var osname = properties["os.name"];
if ((osname !== undefined) && (osname.search(/windows/i) >= 0)) {
linesep = String$("\r\n", 2);
filesep = String$('\\', 1);
pathsep = String$(';', 1);
}
properties["line.separator"] = linesep;
properties["file.separator"] = filesep;
properties["path.separator"] = pathsep;
process$proto.propertyValue = function(name) {
var value = properties[name];
return (value !== undefined) ? value : null;
}
if ((typeof process !== "undefined") && (process.stdout !== undefined)) {
process$proto.write = function(string) {
if(string)process.stdout.write(string.valueOf());
}
process$proto.writeLine = function(line) {
if(line)process$proto.write(line.valueOf());
process$proto.write(linesep.valueOf());
}
} else if ((typeof console !== "undefined") && (console.log !== undefined)) {
process$proto.writeLine = function(line) {
console.log(line?line.valueOf():'');
}
process$proto.write = process$proto.writeLine;
} else {
process$proto.write = function() {};
process$proto.writeLine = function() {};
}
if ((typeof process !== "undefined") && (process.stderr !== undefined)) {
process$proto.writeError = function(string) {
if(string)process.stderr.write(string.valueOf());
}
process$proto.writeErrorLine = function(line) {
if(line)process$proto.writeError(line.valueOf());
process$proto.writeError(linesep.valueOf());
}
} else if ((typeof console !== "undefined") && (console.error !== undefined)) {
process$proto.writeErrorLine = function(line) {
console.error(line?line.valueOf():'');
}
process$proto.writeError = process$proto.writeErrorLine;
} else {
process$proto.writeError = process$proto.write;
process$proto.writeErrorLine = process$proto.writeLine;
}
process$proto.flush = function(){}
process$proto.flushError=function(){}
process$proto.readLine = function() {
this.writeLine("process.readLine not supported on this platform.");
return "";
}
if ((typeof process !== "undefined") && (process.exit !== undefined)) {
process$proto.exit = function(code) {
process.exit(code);
}
} else {
process$proto.exit = function() {}
}
var processString = String$("process", 7);
$defat(process$proto, 'string', function() {
return processString;
},undefined,{$t:{t:String$},$cont:process$proto,$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','Object','$at','string']});
var process$ = processClass();
function getProcess() { return process$; }
getProcess.$crtmm$=function(){return{
mod:$CCMM$,$t:{t:processClass},$an:function(){return[shared(),$native()];},d:['$','process']};
}
exports.getProcess=getProcess;
exports.$prop$getProcess={get:getProcess,$crtmm$:function(){return{mod:$CCMM$,d:['$','process'],$t:{t:processClass}
}}};
getProcess.$crtmm$=exports.$prop$getProcess.$crtmm$;
function systemClass() {
var proc = new systemClass.$$;
Basic(proc);
return proc;
}
systemClass.$crtmm$={$nm:'systemClass',$mt:'c',$ps:[],$an:function(){return[shared()];},mod:$CCMM$,d:['$','system']};
initTypeProto(systemClass, "ceylon.language::system", $init$Basic());
var system$proto = systemClass.$$.prototype;
$defat(system$proto, 'milliseconds', function() {
return Date.now();
},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','system','$at','milliseconds']});
$defat(system$proto, 'nanoseconds', function() {
return Date.now()*1000000;
},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','system','$at','nanoseconds']});
$defat(system$proto, 'timezoneOffset', function(){
return new Date().getTimezoneOffset()*60000;
},undefined,{$t:{t:Integer}, $cont:system$proto, $an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','system','$at','timezoneOffset']});
$defat(system$proto, 'locale', function(){
return properties["user.locale"] || String$("Unknown",7);
},undefined,{$t:{t:String$}, $cont:system$proto, $an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','system','$at','locale']});
var systemString = String$("system", 7);
$defat(system$proto, 'string', function() {
return systemString;
},undefined,{$t:{t:String$},$cont:system$proto,$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','Object','$at','string']});
var system$ = systemClass();
function getSystem() { return system$; }
exports.getSystem=getSystem;
exports.$prop$getSystem={get:getSystem,$crtmm$:function(){return{
mod:$CCMM$,d:['$','system'],$t:{t:systemClass}
};}};
getSystem.$crtmm$=exports.$prop$getSystem.$crtmm$;
function runtimeClass() {
var proc = new runtimeClass.$$;
Basic(proc);
return proc;
}
runtimeClass.$crtmm$={$nm:'runtimeClass',$mt:'c',$ps:[],$an:function(){return[shared()];},mod:$CCMM$,d:['$','runtime']};
initTypeProto(runtimeClass, "ceylon.language::runtime", $init$Basic());
var runtime$proto = runtimeClass.$$.prototype;
$defat(runtime$proto, 'name', function() {
if (typeof process !== "undefined" && process.execPath && process.execPath.match(/node(js)?(\.exe)?$/)) {
return String$("node.js", 7);
} else if (typeof window === 'object') {
return String$("Browser", 7);
}
return String$("Unknown JavaScript environment", 30);
},undefined,{$t:{t:String$},$cont:runtime$proto,$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','runtime','$at','name']});
$defat(runtime$proto, 'version', function() {
if (typeof process !== "undefined" && typeof process.version === 'string') {
return String$(process.version);
}
return String$("Unknown");
},undefined,{$t:{t:String$},$cont:runtime$proto,$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','runtime','$at','version']});
$defat(runtime$proto, 'integerSize', function() {
return 53;
},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','runtime','$at','integerSize']});
$defat(runtime$proto, 'integerAddressableSize', function() {
return 32;
},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','runtime','$at','integerAddressableSize']});
var $minIntegerValue = Integer(-9007199254740991); //-(2^53-1)
$defat(runtime$proto, 'minIntegerValue', function() {
return $minIntegerValue;
},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','runtime','$at','minIntegerValue']});
var $maxIntegerValue = Integer(9007199254740989); //(2^53-3) => ((2^53)-2 is NaN)
$defat(runtime$proto, 'maxIntegerValue', function() {
return $maxIntegerValue;
},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','runtime','$at','maxIntegerValue']});
var $maxArraySize = Integer(4294967295); //(2^32-1)
$defat(runtime$proto, 'maxArraySize', function() {
return $maxArraySize;
},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','runtime','$at','maxArraySize']});
var runtimeString = String$("runtime", 7);
$defat(runtime$proto, 'string', function() {
return runtimeString;
},undefined,{$t:{t:String$},$cont:runtime$proto,$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','Object','$at','string']});
var runtime$ = runtimeClass();
function getRuntime() { return runtime$; }
exports.getRuntime=getRuntime;
exports.$prop$getRuntime={get:getRuntime,$crtmm$:function(){
return{mod:$CCMM$,d:['$','runtime'],$t:{t:runtimeClass}};}};
getRuntime.$crtmm$=exports.$prop$getRuntime.$crtmm$;
function operatingSystemClass() {
var proc = new operatingSystemClass.$$;
Basic(proc);
return proc;
}
operatingSystemClass.$crtmm$={$nm:'operatingSystemClass',$mt:'c',$ps:[],$an:function(){return[shared()];},mod:$CCMM$,d:['$','operatingSystem']};
initTypeProto(operatingSystemClass, "ceylon.language::operatingSystem", $init$Basic());
var operatingSystem$proto = operatingSystemClass.$$.prototype;
$defat(operatingSystem$proto, 'name',function() {
if (typeof process !== "undefined" && typeof process.platform === 'string') {
return String$(process.platform);
}
return String$("Unknown");
},undefined,{$t:{t:String$},$cont:operatingSystem$proto,$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','operatingSystem','$at','name']});
$defat(operatingSystem$proto, 'version', function() {
return String$("Unknown");
},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','operatingSystem','$at','version']});
$defat(operatingSystem$proto, 'newline', function(){ return linesep; },undefined,
{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','operatingSystem','$at','newline']});
$defat(operatingSystem$proto, 'fileSeparator', function(){ return filesep; },undefined,
{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','operatingSystem','$at','fileSeparator']});
$defat(operatingSystem$proto, 'pathSeparator', function(){ return pathsep; },undefined,
{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','operatingSystem','$at','pathSeparator']});
var operatingSystemString = String$("operatingSystem", 7);
$defat(operatingSystem$proto, 'string', function() {
return operatingSystemString;
},undefined,{$t:{t:String$},$cont:operatingSystem$proto,$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['$','Object','$at','string']});
var operatingSystem$ = operatingSystemClass();
function getOperatingSystem() { return operatingSystem$; }
exports.getOperatingSystem=getOperatingSystem;
exports.$prop$getOperatingSystem={get:getOperatingSystem,$crtmm$:function(){
return {mod:$CCMM$,d:['$','operatingSystem'],$t:{t:operatingSystemClass}};
}};
getOperatingSystem.$crtmm$=exports.$prop$getOperatingSystem.$crtmm$;
function addSuppressedException(/*Exception*/sup,/*Exception*/e) {
if (e.$sups$===undefined) {
e.$sups$=[];
}
if (sup.getT$name === undefined) sup = NativeException(sup);
e.$sups$.push(sup);
}
exports.addSuppressedException=addSuppressedException;
function suppressedExceptions(/*Exception*/e) {
return e.$sups$===undefined?getEmpty():e.$sups$;
}
suppressedExceptions.$crtmm$=function(){
return {mod:$CCMM$,d:['ceylon.language','suppressedExceptions'],$t:{t:Sequential,a:{Absent$Iterable:{t:Null},Element$Iterable:{t:Exception}}},$ps:[{$nm:'exception',$mt:'prm',$t:{t:Exception}}]};
}
exports.suppressedExceptions=suppressedExceptions;
function $retuple(t) { //receives {t:'T',l:[...]}
if (t.t!=='T')return t;
var e;
var r={t:Empty};
for (var i=t.l.length-1;i>=0;i--){
var f=$retuple(t.l[i]);
var e=(r.a&&r.a.Element$Tuple)||f;
if (r.a&&r.a.Element$Tuple){
if (e.l) {
var l2=[];for(var j=0;j<e.l.length;j++)l2.push(e.l[j]);
l2.unshift(f);
e={t:'u',l:l2};
} else {
e = {t:'u',l:[f,e]};
}
}
r={t:Tuple,a:{First$Tuple:f,Element$Tuple:e,Rest$Tuple:r}};
}
return r;
}
function validate$params(ps,t,msg) {
if (t.t===Nothing)return;
if (!ps || ps.length==0) {
if (t.t===Empty)return;
} else if (t.t==='T') {
if (ps.length==t.l.length) {
for (var i=0;i<ps.length;i++)
if (!extendsType(t.l[i],ps[i].$t))throw IncompatibleTypeException$meta$model(msg);
return;
}
} else { //it's already a tuple, navigate it
console.log("TODO!!!! validate$params with Tuple type");
}
throw IncompatibleTypeException$meta$model(msg);
}
function validate$typeparams(t,tparms,types) {
if (tparms) {
if (types===undefined||types.size<1)
throw TypeApplicationException$meta$model(String$("Missing type arguments"));
var i=0;
t.a={};
for (var tp in tparms) {
var _type=types.$get(i);
if (_type===undefined)
throw TypeApplicationException$meta$model(String$("Missing type argument for " + tp));
var _tp = tparms[tp];
var _ta = _type.tipo;
t.a[tp]= _ta.t ? _ta : {t:_type.tipo};
if ((_tp.satisfies && _tp.satisfies.length>0) || (_tp.of && _tp.of.length > 0)) {
var restraints=(_tp.satisfies && _tp.satisfies.length>0)?_tp.satisfies:_tp.of;
for (var j=0; j<restraints.length;j++) {
var _r=restraints[j];if(typeof(_r)==='function')_r=getrtmm$$(_r).$t;
if (!extendsType(t.a[tp],_r))
throw TypeApplicationException$meta$model(String$("Type argument for " + tp + " violates type parameter constraints"));
}
}
i++;
}
}
}
function tupleize$params(ps,aux) {
if (!ps || ps.length==0)return {t:Empty};
var tupa={t:'T',l:[]};
for (var i=ps.length-1; i>=ps.length;i--) {
var e=ps[i].$t;
if (typeof(e)==='string'&&aux&&aux[e])e=aux[e];
if (tupa.t==='T') {//tuple
tupa.l.unshift(e);
} else { //union
tupa={t:'T',l:[e,tupa]};
}
if (ps[i].$def) {
tupa={t:'u',l:[{t:Empty},tupa]};
}
}
return tupa;
}
function $qname(mm) {
if (mm.t) {
mm=mm.t;
}
if (mm.$crtmm$)mm=getrtmm$$(mm);
if (!mm.d)return "[unnamed type]";
var qn=mm.d[0];
if (qn==='$')qn='ceylon.language';
for (var i=1; i<mm.d.length; i++){
var n=mm.d[i];
var p=n.indexOf('$');
if(p!==0)qn+=(i==1?"::":".")+(p>0?n.substring(0,p):n);
}
return qn;
}
function resolve$typearg(ta,mm) {
var r=mm.$tp?mm.$tp[ta]:undefined;
while (!r && mm.$cont) {
mm=mm.$cont;
if (mm.$tp)r=mm.$tp[ta];
}
if (r) {
if (r.satisfies)
return r.satisfies.length==1?r.satisfies[0]:{t:'i',l:r.satisfies};
return {t:Anything};
}
console.log("MISSING definition of type argument " + ta + " in " + $qname(mm));
return {t:Anything};
}
function convert$params(mm,a) {
var ps=mm.$ps;
if (ps===undefined || ps.length===0){
if (a && a.size>0)
throw InvocationException$meta$model(String$("Passing parameters to no-args callable"));
return [];
}
if (a===undefined)a=[];
var fa=[];
var sarg;
for (var i=0; i<ps.length;i++) { //check def/seq params
var p=ps[i];
var val_t=sarg?sarg.$$targs$$.a.Element$Iterable:p.$t,mm;
if (typeof(val_t)==='string')val_t=resolve$typearg(val_t,mm);
if (a[i]===undefined) {
if (p.$def||p.seq)fa.push(undefined);
else {
throw InvocationException$meta$model(String$("Wrong number of arguments (should be " + ps.length + ")"));
}
} else if (sarg) {
sarg.push(a[i]);
} else if (p.seq) {
sarg=[].reifyCeylonType(p.$t); fa.push(sarg);
val_t=sarg.$$targs$$.a.Element$Sequential;
if (typeof(val_t)==='string')val_t=resolve$typearg(val_t,mm);
for (var j=i; j<a.size;j++){
if (!$is(a[j],val_t))throw IncompatibleTypeException$meta$model("Wrong type for argument " + j + ", expected " + typeLiteral$meta({Type$typeLiteral:val_t}).string + " got " + className(a[j]));
sarg.push(a[j]);
}
i=j;
} else {
fa.push(a[i]);
}
if (a[i]!==undefined && !$is(a[i],val_t))throw IncompatibleTypeException$meta$model("Wrong type for argument " + i + ", expected " + typeLiteral$meta({Type$typeLiteral:val_t}).string + " got " + className(a[i]));
}
if (a.size>i)throw InvocationException$meta$model("Too many arguments");
a = fa;
return a;
}
function getrtmm$$(x) {
if (x===undefined||x===null)return undefined;
if (typeof(x.$crtmm$)==='function')x.$crtmm$=x.$crtmm$();
return x.$crtmm$;
}
exports.getrtmm$$=getrtmm$$;
/*Native Implementation of annotations() */
function annotations$meta(anntype, progelem, $$$mptypes) {
if (progelem.tipo)progelem=progelem.tipo;
var mm = getrtmm$$(progelem);
if (progelem.$anns)mm={$an:typeof(progelem.$anns)==='function'?progelem.$anns():progelem.$anns};
if (mm && mm.$an) {
var anns=mm.$an;
if (typeof(anns) === 'function') {
anns=anns();
mm.$an=anns;
}
if (anntype.tipo.$$.T$all['ceylon.language::OptionalAnnotation'] !== undefined) {
for (var i=0; i < anns.length; i++) {
if ($is(anns[i], {t:anntype.tipo}))return anns[i];
}
return null;
}
var r=[];
for (var i=0; i < anns.length; i++) {
if ($is(anns[i], {t:anntype.tipo}))r.push(anns[i]);
}
return r.length==0?getEmpty():r.reifyCeylonType({Absent$Iterable:{t:Null},Element$Iterable:{t:ConstrainedAnnotation,
a:{Value$ConstrainedAnnotation:$$$mptypes.Value$annotations,Values$ConstrainedAnnotation:$$$mptypes.Values$annotations,
ProgramElement$ConstrainedAnnotation:$$$mptypes.ProgramElement$annotations}}});
}
return null;
}
annotations$meta.$crtmm$=function(){return{mod:$CCMM$,$t:'Values$annotations',$ps:[
{$nm:'annotationType',$mt:'prm',$t:{t:Class$meta$model,a:{Type$Class:{t:ConstrainedAnnotation,a:{Values$ConstrainedAnnotation:'Values$annotations',Value$ConstrainedAnnotation:'Value$annotations',ProgramElement$ConstrainedAnnotation:'ProgramElement$annotations'}}}}},{$nm:'programElement',$mt:'prm',$t:'ProgramElement$annotations'}],
$tp:{Value$annotations:{'satisfies':[{t:ConstrainedAnnotation$meta$model,a:{Values$ConstrainedAnnotation:'Values$annotations',Value$ConstrainedAnnotation:'Value$annotations',ProgramElement$ConstrainedAnnotation:'ProgramElement$annotations'}}]},Values$annotations:{},ProgramElement$annotations:{'var':'in','satisfies':[{t:Annotated$meta$model}]}},
$an:function(){return[shared(),$native()];},d:['ceylon.language.meta','annotations']};};
exports.annotations$meta=annotations$meta;
function JsResource(uri,$$jsResource){
$init$JsResource();
if($$jsResource===undefined)$$jsResource=new JsResource.$$;
$$jsResource.uri_=uri;
Resource($$jsResource);
$$jsResource.$prop$getUri={$crtmm$:function(){return{mod:$CCMM$,$t:{t:String$},$cont:JsResource,$an:function(){return[shared(),actual()];},d:['ceylon.language','Resource','$at','uri']};}};
$$jsResource.$prop$getUri.get=function(){return uri};
$$jsResource.$prop$getSize={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Integer},$cont:JsResource,$an:function(){return[shared(),actual()];},d:['ceylon.language','Resource','$at','size']};}};
$$jsResource.$prop$getSize.get=function(){return size};
return $$jsResource;
}
JsResource.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[{$nm:'uri',$mt:'prm',$t:{t:String$},$an:function(){return[shared(),actual()];}}],satisfies:[{t:Resource}],d:['ceylon.language','Resource']};};
function $init$JsResource(){
if(JsResource.$$===undefined){
initTypeProto(JsResource,'JsResource',Basic,Resource);
(function($$jsResource){
$defat($$jsResource,'uri',function(){return this.uri_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:JsResource,$an:function(){return[shared(),actual()];},d:['ceylon.language','Resource','$at','uri']};});
$defat($$jsResource,'size',function(){
var $elf=this;
if (getRuntime().name === 'node.js') {
var _fr=require;
var _fp=$elf.uri;
if (_fp.substring(0,5)==='file:')_fp=_fp.substring(_fp.indexOf(':')+1);
return _fr('fs').statSync(_fp).size;
} else if (getRuntime().name === 'Browser') {
alert('Resource.size not implemented yet');
} else {
print("Resource handling unsupported in this JS platform.");
}
return -1;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},$cont:JsResource,$an:function(){return[shared(),actual()];},d:['ceylon.language','Resource','$at','size']};});
$$jsResource.textContent=function textContent(encoding$2){
var $elf=this;
if(encoding$2===undefined){encoding$2=$elf.textContent$defs$encoding(encoding$2);}
if (getRuntime().name === 'node.js') {
var _fr=require;
var fs=_fr('fs');
encoding$2=encoding$2.toLowerCase();
if(encoding$2.initial(4)==="utf-")encoding$2='utf'+encoding$2.substring(4);
var _fp=$elf.uri;
if (_fp.substring(0,5)==='file:')_fp=_fp.substring(_fp.indexOf(':')+1);
var t = fs.readFileSync(_fp, encoding$2);
return String$(t);
} else if (getRuntime().name === 'Browser') {
alert("Resource.textContent() not implemented yet");
} else {
throw Error("Resource handling unsupported in this JS platform");
}
};$$jsResource.textContent.$crtmm$=function(){return{mod:$CCMM$,$t:{t:String$},$ps:[{$nm:'encoding',$mt:'prm',$def:1,$t:{t:String$},$an:function(){return[];}}],$cont:JsResource,$an:function(){return[shared(),actual()];},d:['ceylon.language','Resource','$m','textContent']};};
})(JsResource.$$.prototype);
}
return JsResource;
}
$init$JsResource();
/* Metamodel module and package objects */
var $loadedModules$={};
exports.$loadedModules$=$loadedModules$;
function $addmod$(mod, modname) {
$loadedModules$[modname] = mod;
}
exports.$addmod$=$addmod$;
function modules$2(){
var $$modules=new modules$2.$$;
$defat($$modules,'list',function(){
var mods=[];
for (var m in $loadedModules$) {
var slashPos = m.lastIndexOf('/');
mods.push(this.find(m.substring(0,slashPos), m.substring(slashPos+1)));
}
return ArraySequence(mods,{Element$Iterable:{t:Module$meta$declaration}});
},undefined,{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Module$meta$declaration}}},$cont:modules$2,$an:function(){return[shared()];},d:['ceylon.language.meta','modules','$at','list']});
function find(name,version){
var modname = name + "/" + (version?version:"unversioned");
var lm = $loadedModules$[modname];
if (!lm) {
var mpath;
if (name === 'default' && version=='unversioned') {
mpath = name + "/" + name;
} else {
mpath = name.replace(/\./g,'/') + '/' + version + "/" + name + "-" + version;
}
try {lm = require(mpath);}catch(e){return null;}
}
if (lm && lm.$CCMM$) {
lm = Modulo(lm);
$loadedModules$[modname] = lm;
}
return lm === undefined ? null : lm;
}
$$modules.find=find;
find.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Module$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}},{$nm:'version',$mt:'prm',$t:{t:String$}}],$cont:modules$2,$an:function(){return[shared()];},d:['ceylon.language.meta','modules','$m','find']};
$defat($$modules,'$default',function(){
return find('default',"unversioned");
},undefined,{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Module$meta$declaration}]},$cont:modules$2,$an:function(){return[shared()];},d:['ceylon.language.meta','modules','$at','default']});
return $$modules;
}
function $init$modules$meta(){
if (modules$2.$$===undefined){
initTypeProto(modules$2,'ceylon.language.meta::modules',Basic);
}
return modules$2;
}
exports.$init$modules$meta=$init$modules$meta;
$init$modules$meta();
var modules$meta=modules$2();
var getModules$meta=function(){
return modules$meta;
}
exports.getModules$meta=getModules$meta;
function Modulo(meta, $$modulo){
$init$Modulo();
if ($$modulo===undefined)$$modulo=new Modulo.$$;
Module$meta$declaration($$modulo);
$$modulo.meta=meta;
$$modulo.$anns=meta.$mod$ans$;
var mm = meta.$CCMM$;
if (typeof(mm)==='function') {
mm=mm();meta.$CCMM$=mm;
}
var name=String$(mm['$mod-name']);
$defat($$modulo,'name',function(){return name;},undefined,{mod:$CCMM$,$t:{t:String$},$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$at','name']});
$defat($$modulo,'qualifiedName',function(){return name;},undefined,{mod:$CCMM$,$t:{t:String$},$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$at','qualifiedName']});
var version=String$(mm['$mod-version']);
$defat($$modulo,'version',function(){return version;},undefined,{mod:$CCMM$,$t:{t:String$},$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$at','version']});
$defat($$modulo,'members',function(){
if (mm['$pks$'] === undefined) {
mm['$pks$'] = {};
for (mem in this.meta.$CCMM$) {
if (typeof(mem) === 'string' && mem[0]!=='$') {
mm['$pks$'][mem] = Paquete(mem, this, mm[mem]);
}
}
}
var m = [];
for (mem in mm['$pks$']) {
if (typeof(mem) === 'string') {
m.push(mm['$pks$'][mem]);
}
}
return ArraySequence(m,{Element$Iterable:{t:Package$meta$declaration}});
},undefined,{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Package$meta$declaration}}},$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$at','members']});
$defat($$modulo,'dependencies',function(){
if (typeof(meta.$mod$imps)==='function')meta.$mod$imps=meta.$mod$imps();
var deps=mm['$mod-deps']||[];
if (typeof(deps[0]) === 'string') {
var _d=[];
for (var d in meta.$mod$imps) {
var spos = d.lastIndexOf('/');
_d.push(Importa(String$(d.substring(0,spos)), String$(d.substring(spos+1)),this,meta.$mod$imps[d]));
}
deps = ArraySequence(_d,{Element$Iterable:{t:Import$meta$declaration}});
mm['$mod-deps'] = deps;
}
return deps;
},undefined,{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:Import$meta$declaration}}},$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$at','dependencies']});
function findPackage(pknm){
if (mm['$pks$'] === undefined) this.members;
if (pknm==='$')pknm='ceylon.language';
var pk = mm['$pks$'][pknm];
return pk===undefined ? null : pk;
}
$$modulo.findPackage=findPackage;
findPackage.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Package$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$m','findPackage']};
function findImportedPackage(pknm){
var pk = this.findPackage(pknm);
if (pk) return pk;
if (pknm.match('^ceylon\\.language')) {
var clmod=getModules$meta().find('ceylon.language', $CCMM$['$mod-version']);
var deps=clmod.dependencies;
if (deps===getEmpty())deps=[];
deps.push(Importa('ceylon.language', $CCMM$['$mod-version']),clmod);
return clmod.findPackage(pknm);
}
var deps=this.dependencies;
for (var i=0; i < deps.length; i++) {
pk = deps[i].container.findImportedPackage(pknm);
if (pk)return pk;
}
return null;
}
$$modulo.findImportedPackage=findImportedPackage;
findImportedPackage.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Package$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$m','findImportedPackage']};};
function annotations($$$mptypes){
var anns = this.meta.$mod$ans$;
if (typeof(anns) === 'function') {
anns = anns();
this.meta.$mod$ans$=anns;
} else if (anns === undefined) {
anns = [];
}
var r = [];
for (var i=0; i < anns.length; i++) {
var an = anns[i];
if ($is(an, $$$mptypes.Annotation$annotations)) r.push(an);
}
return r.reifyCeylonType({Element$Iterable:$$$mptypes.Annotation$annotations});
}
$$modulo.annotations=annotations;
$defat($$modulo,'string',function(){return String$("module " + this.name+"/" + this.version);},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['ceylon.language','Object','$at','string']});
annotations.$crtmm$={mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Annotation'}},$ps:[],$cont:Modulo,$tp:{Annotation:{'var':'out','satisfies':[{t:Annotation,a:{Value:'Annotation'}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$m','annotations']};
function resourceByPath(_path) {
var mpath;
var sep = getOperatingSystem().fileSeparator;
if ($$modulo.name === 'default' && $$modulo.version=='unversioned') {
mpath = $$modulo.name;
} else {
mpath = $$modulo.name.replace(/\./g,sep) + sep + $$modulo.version;
}
if (_path[0]===sep) {
mpath += _path;
} else {
mpath += sep + _path;
}
if (getRuntime().name === 'node.js') {
var _fr=require;//this is so that requirejs leaves us the fuck alone
var pm=_fr('path');
var mods=process.env.NODE_PATH.split(getOperatingSystem().pathSeparator);
var fs=_fr('fs');
for (var i=0; i<mods.length; i++) {
var fp = pm.resolve(mods[i], mpath);
if (fs.existsSync(fp)) {
var f = fs.statSync(fp);
if (f && f.isFile()) {
return JsResource('file:'+fp);
}
}
}
} else if (getRuntime().name === 'Browser') {
return JsResource(require.toUrl(mpath));
} else {
print("Resources unsupported in this environment.");
}
return null;
}
$$modulo.resourceByPath=resourceByPath;
resourceByPath.$crtmm$=function(){return {mod:$CCMM$,$t:{t:'u',l:[{t:Null},{t:Resource}]},$ps:[{$nm:'path',$mt:'prm',$t:{t:String$}}],$cont:Modulo,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Module','$m','resourceByPath']};};
return $$modulo;
}
Modulo.$crtmm$={mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Module$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','Module']};
exports.Modulo=Modulo;
function $init$Modulo(){
if (Modulo.$$===undefined){
initTypeProto(Modulo,'Modulo',Basic,Module$meta$declaration);
}
return Modulo;
}
exports.$init$Modulo=$init$Modulo;
$init$Modulo();
function Importa(name,version,mod,anns,$$importa){
$init$Importa();
if ($$importa===undefined)$$importa=new Importa.$$;
Import$meta$declaration($$importa);
$$importa.name=name;
$$importa.version=version;
$$importa._cont=mod;
$$importa.$anns=anns;
$defat($$importa,'name',function(){return name;},undefined,{mod:$CCMM$,$t:{t:String$},$cont:Importa,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Import','$at','name']});
$defat($$importa,'version',function(){return version;},undefined,{mod:$CCMM$,$t:{t:String$},$cont:Importa,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Import','$at','version']});
$defat($$importa,'shared',function(){
if (typeof(this.$anns)==='function')this.$anns=this.anns();
if (this.$anns)for (var i=0;i<this.$anns.length;i++) {
if (this.$anns[i]===shared)return true;
}
return false;},undefined,{mod:$CCMM$,$t:{t:Boolean$},$cont:Importa,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Import','$at','shared']});
$defat($$importa,'optional',function(){
if (typeof(this.$anns)==='function')this.$anns=this.$anns();
if (this.$anns)for (var i=0;i<this.$anns.length;i++) {
if (this.$anns[i]===optional)return true;
}
return version;},undefined,{mod:$CCMM$,$t:{t:Boolean$},$cont:Importa,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Import','$at','optional']});
$defat($$importa,'container',function(){
if (this._cont===undefined) {
this._cont = getModules$meta().find(this.name,this.version);
}
return this._cont;
},undefined,{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:Importa,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Import','$at','container']});
$defat($$importa,'string',function(){
return String$("import " + name + "/" + version);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:Importa,d:['ceylon.language','Object','$at','string']};});
return $$importa;
}
Importa.$crtmm$={mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Import$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','Import']};
exports.Importa=Importa;
function $init$Importa(){
if (Importa.$$===undefined){
initTypeProto(Importa,'Importa',Basic,Import$meta$declaration);
}
return Importa;
}
exports.$init$Importa=$init$Importa;
$init$Importa();
function Paquete(name, container, pkg, $$paquete){
$init$Paquete();
if ($$paquete===undefined)$$paquete=new Paquete.$$;
Package$meta$declaration($$paquete);
$$paquete.pkg=pkg;
var name=name;
var suffix = '';
if (name!==container.name) {
var _s = name.substring(container.name.length);
suffix = _s.replace(/\./g, '$');
}
$$paquete.suffix=suffix;
$defat($$paquete,'name',function(){return name;},undefined,{mod:$CCMM$,$t:{t:String$},$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$at','name']});
$defat($$paquete,'qualifiedName',function(){return name;},undefined,{mod:$CCMM$,$t:{t:String$},$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$at','qualifiedName']});
var container=container;
$defat($$paquete,'container',function(){return container;},undefined,{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$at','container']});
function members($$$mptypes){
var filter=[];
if (extendsType({t:FunctionDeclaration$meta$declaration},$$$mptypes.Kind$members))filter.push('m');
if (extendsType({t:ValueDeclaration$meta$declaration},$$$mptypes.Kind$members))filter.push('a','g','o', 's');
if (extendsType({t:ClassDeclaration$meta$declaration},$$$mptypes.Kind$members))filter.push('c');
if (extendsType({t:InterfaceDeclaration$meta$declaration},$$$mptypes.Kind$members))filter.push('i');
if (extendsType({t:AliasDeclaration$meta$declaration},$$$mptypes.Kind$members))filter.push('als');
var r=[];
for (var mn in this.pkg) {
var m = this.pkg[mn];
var mt = m['$mt'];
if (filter.indexOf(mt)>=0 && m['$an'] && m['$an']['shared']) {
if (mt === 'm') {
r.push(OpenFunction(this, m));
} else if (mt==='c') {
r.push(OpenClass(this, m));
} else if (mt==='i') {
r.push(OpenInterface(this, m));
} else if (mt==='a'||mt==='g'||mt==='o') {
r.push(OpenValue(this, m));
} else if (mt==='s') {
r.push(OpenSetter(OpenValue(this, m)));
} else if (mt==='als') {
r.push(OpenAlias(_findTypeFromModel(this,m)));
}
}
}
return r.reifyCeylonType({Element$Iterable:$$$mptypes.Kind$members});
}
$$paquete.members=members;
members.$crtmm$={mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind'}},$ps:[],$cont:Paquete,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','members']};
function annotatedMembers($$$mptypes){
var ms=this.members({Kind$members:$$$mptypes.Kind$annotatedMembers});
if (ms.length>0) {
var rv=[];
for (var i=0; i < ms.length; i++) {
if (ms[i].tipo && ms[i].tipo.$crtmm$) {
var mm=getrtmm$$(ms[i].tipo);
var ans=mm.$an;
if (typeof(ans)==='function'){ans=ans();mm.$an=ans;}
if (ans) for (var j=0; j<ans.length;j++) {
if ($is(ans[j],$$$mptypes.Annotation$annotatedMembers)) {
rv.push(ms[i]);
break;
}
}
}
}
return rv.reifyCeylonType({Element$Iterable:$$$mptypes.Kind$annotatedMembers});
}
return getEmpty();
}
$$paquete.annotatedMembers=annotatedMembers;
annotatedMembers.$crtmm$={mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Kind'}},$ps:[],$cont:Paquete,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]},Annotation:{}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','annotatedMembers']};
function getMember(name$3,$$$mptypes){
var m = this.pkg[name$3];
if (m) {
var mt = m['$mt'];
if (extendsType({t:ValueDeclaration$meta$declaration}, $$$mptypes.Kind$getMember)) {
if (mt==='a'||mt==='g'||mt==='o') {
return OpenValue(this, m);
} else if (mt==='s') {
return OpenSetter(OpenValue(this, m));
}
} else if (extendsType({t:FunctionDeclaration$meta$declaration}, $$$mptypes.Kind$getMember)) {
if (mt==='m') {
return OpenFunction(this, m);
}
} else if (extendsType({t:FunctionOrValueDeclaration$meta$declaration}, $$$mptypes.Kind$getMember)) {
if (mt==='a'||mt==='g'||mt==='o') {
return OpenValue(this, m);
} else if (mt==='s') {
return OpenSetter(OpenValue(this, m));
} else if (mt==='m') {
return OpenFunction(this, m);
}
} else if (extendsType({t:ClassDeclaration$meta$declaration}, $$$mptypes.Kind$getMember)) {
if (mt==='c') {
return OpenClass(this, m);
}
} else if (extendsType({t:InterfaceDeclaration$meta$declaration}, $$$mptypes.Kind$getMember)) {
if (mt==='i') {
return OpenInterface(this, m);
}
} else if (extendsType({t:ClassOrInterfaceDeclaration$meta$declaration}, $$$mptypes.Kind$getMember)) {
if (mt==='i') {
return OpenInterface(this, m);
} else if (mt==='c') {
return OpenClass(this, m);
}
} else if (extendsType({t:AliasDeclaration$meta$declaration}, $$$mptypes.Kind$getMember)) {
if (mt==='als')
return OpenAlias(_findTypeFromModel(this,m));
} else {
console.log("WTF do I do with this " + name$3 + " Kind " + className($$$mptypes.Kind$getMember));
}
}
return null;
}
$$paquete.getMember=getMember;
getMember.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},'Kind']},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:Paquete,$tp:{Kind:{'satisfies':[{t:NestableDeclaration$meta$declaration}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','getMember']};
function getValue(name$4) {
var m = this.pkg[name$4];
if (m && (m['$mt']==='a' || m['$mt']==='g' || m['$mt'] === 'o' ||m['$mt']==='s')) {
return OpenValue(this, m);
}
return null;
}
$$paquete.getValue=getValue;
getValue.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:ValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','getValue']};
function getClassOrInterface(name$5){
var ci = this.pkg[name$5];
if (ci && ci['$mt']==='c') {
return OpenClass(this, ci);
} else if (ci && ci['$mt']==='i') {
return OpenInterface(this, ci);
}
return null;
}
$$paquete.getClassOrInterface=getClassOrInterface;
getClassOrInterface.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:ClassOrInterfaceDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','getClassOrInterface']};
function getAlias(an) {
var al=this.pkg[an];
if (al && al.$mt==='als') {
var rta = _findTypeFromModel(this, al);
return OpenAlias(rta);
}
return null;
}
$$paquete.getAlias=getAlias;
getAlias.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language.meta.declaration','Package','$m','getAlias']};};
function getFunction(name$6){
var f = this.pkg[name$6];
if (f && f['$mt']==='m') {
return OpenFunction(this, f);
}
return null;
}
$$paquete.getFunction=getFunction;
getFunction.$crtmm$={mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:FunctionDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:Paquete,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','getFunction']};
function annotations($$$mptypes){
var _k = '$pkg$ans$' + this.name.replace(/\./g,'$');
var anns = this.container.meta[_k];
if (typeof(anns) === 'function') {
anns = anns();
this.container.meta[_k]=anns;
} else if (anns === undefined) {
anns = [];
}
var r = [];
for (var i=0; i < anns.length; i++) {
var an = anns[i];
if ($is(an, $$$mptypes.Annotation$annotations)) r.push(an);
}
return r.reifyCeylonType({Element$Iterable:$$$mptypes.Annotation$annotations});
}
$$paquete.annotations=annotations;
annotations.$crtmm$={mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:'Annotation'}},$ps:[],$cont:Paquete,$tp:{Annotation:{'var':'out','satisfies':[{t:Annotation,a:{Value:'Annotation'}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Package','$m','annotations']};
$defat($$paquete,'string',function(){return String$("package " + this.name);},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['ceylon.language','Object','$at','string']});
return $$paquete;
}
Paquete.$crtmm$={mod:$CCMM$,'super':{t:Basic},satisfies:[{t:Package$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','Package']};
exports.Paquete=Paquete;
function $init$Paquete(){
if (Paquete.$$===undefined){
initTypeProto(Paquete,'Paquete',Basic,Package$meta$declaration);
}
return Paquete;
}
exports.$init$Paquete=$init$Paquete;
$init$Paquete();
function AppliedClass(tipo,$$targs$$,that,classTargs){
$init$AppliedClass();
if (that===undefined){
var mm = getrtmm$$(tipo);
if (mm && mm.$cont) {
that=function(x){/*Class*/
if (that.$targs) {
var _a=[];
for (var i=0;i<arguments.length;i++)_a.push(arguments[i]);
_a.push(that.$targs);
return tipo.apply(x,_a);
}
return tipo.apply(x,arguments);
}
} else {
that=function(){
if (that.$targs) {
var _a=[];
for (var i=0;i<arguments.length;i++)_a.push(arguments[i]);
_a.push(that.$targs);
return tipo.apply(undefined,_a);
}
return tipo.apply(undefined,arguments);
}
}
that.$crtmm$=mm;
var dummy = new AppliedClass.$$;
that.$$=AppliedClass.$$;
that.getT$all=function(){return dummy.getT$all();};
that.getT$name=function(){return dummy.getT$name();};
that.equals=function(o){
var eq=$is(o,{t:AppliedClass}) && o.tipo===tipo;
return eq;
};
that.$apply=function(x){return AppliedClass.$$.prototype.$apply.call(that,x);};
that.$apply.$crtmm$=AppliedClass.$$.prototype.$apply.$crtmm$;
that.namedApply=function(x){return AppliedClass.$$.prototype.namedApply.call(that,x);};
that.namedApply.$crtmm$=AppliedClass.$$.prototype.namedApply.$crtmm$;
}
that.$targs=classTargs;
$defat(that,'satisfiedTypes',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getSatisfiedTypes.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.$crtmm$);
$defat(that,'container',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getContainer.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getContainer.$crtmm$);
$defat(that,'string',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getString.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getString.$crtmm$);
$defat(that,'hash',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getHash.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getHash.$crtmm$);
$defat(that,'typeArguments',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getTypeArguments.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getTypeArguments.$crtmm$);
$defat(that,'extendedType',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.$crtmm$);
$defat(that,'declaration',function(){
return ClassModel$meta$model.$$.prototype.$prop$getDeclaration.get.call(that);
},undefined,ClassModel$meta$model.$$.prototype.$prop$getDeclaration.$crtmm$);
$defat(that,'parameterTypes',function(){
return ClassModel$meta$model.$$.prototype.$prop$getParameterTypes.get.call(that);
},undefined,ClassModel$meta$model.$$.prototype.$prop$getParameterTypes.$crtmm$);
$defat(that,'declaration',function(){
return ClassModel$meta$model.$$.prototype.$prop$getDeclaration.get.call(that);
},undefined,ClassModel$meta$model.$$.prototype.$prop$getDeclaration.$crtmm$);
$defat(that,'caseValues',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getCaseValues.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getCaseValues.$crtmm$);
that.getMethod=ClassOrInterface$meta$model.$$.prototype.getMethod;
that.getDeclaredMethod=ClassOrInterface$meta$model.$$.prototype.getDeclaredMethod;
that.getAttribute=ClassOrInterface$meta$model.$$.prototype.getAttribute;
that.getDeclaredAttribute=ClassOrInterface$meta$model.$$.prototype.getDeclaredAttribute;
that.getClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getClassOrInterface;
that.getDeclaredClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredClassOrInterface;
that.getClass=ClassOrInterface$meta$model.$$.prototype.getClass;
that.getDeclaredClass=ClassOrInterface$meta$model.$$.prototype.getDeclaredClass;
that.getInterface=ClassOrInterface$meta$model.$$.prototype.getInterface;
that.getDeclaredInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredInterface;
that.equals=ClassModel$meta$model.$$.prototype.equals;
that.typeOf=ClassOrInterface$meta$model.$$.prototype.typeOf;
that.supertypeOf=ClassOrInterface$meta$model.$$.prototype.supertypeOf;
that.subtypeOf=ClassOrInterface$meta$model.$$.prototype.subtypeOf;
that.exactly=ClassOrInterface$meta$model.$$.prototype.exactly;
set_type_args(that,$$targs$$);
Class$meta$model(that.$$targs$$===undefined?$$targs$$:{Arguments$Class:that.$$targs$$.Arguments$Class,Type$Class:that.$$targs$$.Type$Class},that);
that.tipo=tipo;
return that;
}
AppliedClass.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Type$Class:{'var':'out','def':{t:Anything}},Arguments$Class:{'var':'in','satisfies':[{t:Sequential,a:{Element$Iterable:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:Class$meta$model,a:{Arguments$Class:'Arguments$Class',Type$Class:'Type$Class'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','Class']};};
function $init$AppliedClass(){
if (AppliedClass.$$===undefined){
initTypeProto(AppliedClass,'ceylon.language.meta.model::AppliedClass',Basic,Class$meta$model);
(function($$clase){
$$clase.$apply=function(a){
var mdl=get_model(this.tipo.$crtmm$);
if (mdl&&mdl.$mt==='o')throw InvocationException$meta$model("Cannot instantiate anonymous class");
a=convert$params(this.tipo.$crtmm$,a);
if (this.$targs)a.push(this.$targs);
return this.tipo.apply(undefined,a);
};$$clase.$apply.$crtmm$=function(){return{mod:$CCMM$,$t:'Type$Applicable',$ps:[{$nm:'arguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Anything}}},$an:function(){return[];}}],$cont:Applicable$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Applicable.$m.apply.$an.doc[0]),$throws("IncompatibleTypeException",""),$throws("InvocationException",""),shared(),formal()];},d:['ceylon.language.meta.model','Applicable','$m','apply']};};
$$clase.namedApply=function(args){
var mdl=get_model(this.tipo.$crtmm$);
if (mdl&&mdl.$mt==='o')throw InvocationException$meta$model("Cannot instantiate anonymous class");
var mm=getrtmm$$(this.tipo);
if (mm.$ps===undefined)throw InvocationException$meta$model("Applied function does not have metamodel parameter info for named args call");
var mapped={};
var iter=args.iterator();var a;while((a=iter.next())!==getFinished()) {
mapped[a.key]=a.item===getNullArgument$meta$model()?null:a.item;
}
var ordered=[];
for (var i=0; i<mm.$ps.length; i++) {
var p=mm.$ps[i];
var v=mapped[p.$nm];
if (v===undefined && p.$def===undefined) {
throw InvocationException$meta$model("Required argument " + p.$nm + " missing in named-argument invocation");
} else if (v!==undefined) {
var t=p.$t;
if(typeof(t)==='string'&&this.$targs)t=this.$targs[t];
if (t&&!$is(v,t))throw IncompatibleTypeException$meta$model("Argument " + p.$nm + "="+v+" is not of the expected type.");
}
delete mapped[p.$nm];
ordered.push(v);
}
if (Object.keys(mapped).length>0)throw new InvocationException$meta$model("No arguments with names " + Object.keys(mapped));
if (this.$targs) {
ordered.push(this.$targs);
}
return this.tipo.apply(undefined,ordered);
};$$clase.namedApply.$crtmm$=function(){return{mod:$CCMM$,$t:'Type$Applicable',$ps:[{$nm:'arguments',$mt:'prm',$t:{t:Iterable,a:{Element$Iterable:{t:Entry,a:{Item$Entry:{t:$Object},Key$Entry:{t:String$}}},Absent$Iterable:{t:Null}}},$an:function(){return[];}}],$cont:Applicable$meta$model,$an:function(){return[doc($CCMM$['ceylon.language.meta.model'].Applicable.$m.namedApply.$an.doc[0]),$throws("IncompatibleTypeException",""),$throws("InvocationException",""),shared(),formal()];},d:['ceylon.language.meta.model','Applicable','$m','namedApply']};};
})(AppliedClass.$$.prototype);
}
return AppliedClass;
}
exports.$init$AppliedClass$meta$model=$init$AppliedClass;
$init$AppliedClass();
function AppliedMemberClass(tipo,$$targs$$,that,myTargs){
$init$AppliedMemberClass();
if (that===undefined) {
var mm = getrtmm$$(tipo);
if (mm && mm.$cont) {
that=function(x){
var rv=tipo.bind(x);
rv.$crtmm$=tipo.$crtmm$;
var nt={t:tipo};
if (x.$$targs$$) {
nt.a={};
for (var nta in x.$$targs$$)nt.a[nta]=x.$$targs$$[nta];
}
if (that.$targs) {
if (!nt.a)nt.a={};
for (var nta in that.$targs)nt.a[nta]=that.$targs[nta];
}
rv=AppliedClass(rv,{Type$Class:nt,Arguments$Class:{t:Sequential,a:{Element$Iterable:{t:Anything},Absent$Iterable:{t:Null}}}});//TODO generate metamodel for Arguments
if (nt.a)rv.$targs=nt.a;
rv.$bound=x;
return rv;
}
} else {
throw IncompatibleTypeException$meta$model("Invalid metamodel data for MemberClass");
}
}
AppliedClass(tipo,$$targs$$,that);
var dummy = new AppliedMemberClass.$$;
that.$$=AppliedMemberClass.$$;
that.getT$all=function(){return dummy.getT$all();};
that.getT$name=function(){return dummy.getT$name();};
that.equals=function(o){
var eq=$is(o,{t:AppliedMemberClass}) && o.tipo===tipo;
if (that.$bound)eq=eq && o.$bound && o.$bound.equals(that.$bound);else eq=eq && o.$bound===undefined;
return eq;
};
that.$targs=myTargs;
$defat(that,'parameterTypes',function(){
return ClassModel$meta$model.$$.prototype.$prop$getParameterTypes.get.call(that);
},undefined,ClassModel$meta$model.$$.prototype.$prop$getParameterTypes.$crtmm$);
$defat(that,'extendedType',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.$crtmm$);
$defat(that,'satisfiedTypes',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getSatisfiedTypes.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getExtendedType.$crtmm$);
$defat(that,'caseValues',function(){
return ClassOrInterface$meta$model.$$.prototype.$prop$getCaseValues.get.call(that);
},undefined,ClassOrInterface$meta$model.$$.prototype.$prop$getCaseValues.$crtmm$);
$defat(that,'declaration',function(){
return ClassModel$meta$model.$$.prototype.$prop$getDeclaration.get.call(that);
},undefined,ClassModel$meta$model.$$.prototype.$prop$getDeclaration.$crtmm$);
that.$bind=function(){return AppliedMemberClass.$$.prototype.$bind.apply(that,arguments);}
$defat(that,'string',function(){
return String$($qname(mm));
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','Object','$at','string']};});
set_type_args(that,$$targs$$);
MemberClass$meta$model(that.$$targs$$===undefined?$$targs$$:{Arguments$MemberClass:that.$$targs$$.Arguments$MemberClass,Type$MemberClass:that.$$targs$$.Type$MemberClass,Container$MemberClass:that.$$targs$$.Container$MemberClass},that);
that.tipo=tipo;
return that;
}
AppliedMemberClass.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$tp:{Container$MemberClass:{'var':'in'},Type$MemberClass:{'var':'out','def':{t:Anything}},Arguments$MemberClass:{'var':'in','satisfies':[{t:Sequential,a:{Element$Iterable:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:MemberClass$meta$model,a:{Arguments$MemberClass:'Arguments$MemberClass',Type$MemberClass:'Type$MemberClass',Container$MemberClass:'Container$MemberClass'}}],$an:function(){return[shared(),abstract()];},d:['','AppliedMemberClass']};};
exports.AppliedMemberClass=AppliedMemberClass;
function $init$AppliedMemberClass(){
if (AppliedMemberClass.$$===undefined){
initTypeProto(AppliedMemberClass,'ceylon.language.meta.model::AppliedMemberClass',Basic,MemberClass$meta$model);
(function($$amc){
$$amc.$bind=function $bind(cont){
var ot=cont.getT$name ? cont.getT$all()[cont.getT$name()]:throwexc(IncompatibleTypeException$meta$model("Container does not appear to be a Ceylon object"));
if (!ot)throw IncompatibleTypeException$meta$model("Incompatible Container (has no metamodel information");
var omm=getrtmm$$(ot);
var mm=getrtmm$$(this.tipo);
if (!extendsType({t:ot},{t:mm.$cont}))throw IncompatibleTypeException$meta$model("Incompatible container type");
return this(cont);
};$$amc.$bind.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Class$meta$model,a:{Arguments$Class:'Arguments',Type$Class:'Type'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:Object$},$an:function(){return[];}}],$cont:MemberClass$meta$model,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','MemberClass','$m','bind']};};
})(AppliedMemberClass.$$.prototype);
}
return AppliedMemberClass;
}
exports.$init$AppliedMemberClass$meta$model=$init$AppliedMemberClass;
$init$AppliedMemberClass();
function AppliedInterface(tipo,$$targs$$,that,myTargs) {
$init$AppliedInterface();
if (that===undefined){
var mm = getrtmm$$(tipo);
if (mm && mm.$cont) {
that=function(x){
that.tipo=function(){return tipo.apply(x,arguments);};
that.$bound=x;
return that;
}
that.tipo$2=tipo;
} else {
that=new AppliedInterface.$$;
}
}
set_type_args(that,$$targs$$);
Interface$meta$model($$targs$$,that);
that.$targs=myTargs;
that.getMethod=ClassOrInterface$meta$model.$$.prototype.getMethod;
that.getDeclaredMethod=ClassOrInterface$meta$model.$$.prototype.getDeclaredMethod;
that.getAttribute=ClassOrInterface$meta$model.$$.prototype.getAttribute;
that.getDeclaredAttribute=ClassOrInterface$meta$model.$$.prototype.getDeclaredAttribute;
that.getClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getClassOrInterface;
that.getDeclaredClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredClassOrInterface;
that.getClass=ClassOrInterface$meta$model.$$.prototype.getClass;
that.getDeclaredClass=ClassOrInterface$meta$model.$$.prototype.getDeclaredClass;
that.getInterface=ClassOrInterface$meta$model.$$.prototype.getInterface;
that.getDeclaredInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredInterface;
that.equals=ClassModel$meta$model.$$.prototype.equals;
that.typeOf=ClassOrInterface$meta$model.$$.prototype.typeOf;
that.supertypeOf=ClassOrInterface$meta$model.$$.prototype.supertypeOf;
that.subtypeOf=ClassOrInterface$meta$model.$$.prototype.subtypeOf;
that.exactly=ClassOrInterface$meta$model.$$.prototype.exactly;
var dummy = new AppliedInterface.$$;
that.$$=AppliedInterface.$$;
that.getT$all=function(){return dummy.getT$all();};
that.getT$name=function(){return dummy.getT$name();};
that.equals=function(o){
var eq=$is(o,{t:AppliedInterface}) && (o.tipo$2||o.tipo)==tipo;
if (that.$bound)eq=eq && o.$bound && o.$bound.equals(that.$bound);else eq=eq && o.$bound===undefined;
return eq;
};
$defat(that,'string',function(){
return String$($qname(mm));
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','Object','$at','string']};});
$defat(that,'declaration',function(){
return InterfaceModel$meta$model.$$.prototype.$prop$getDeclaration.get.call(that);
},undefined,InterfaceModel$meta$model.$$.prototype.$prop$getDeclaration.$crtmm$);
that.tipo=tipo;
return that;
}
AppliedInterface.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Type$Interface:{'var':'out','def':{t:Anything}}},satisfies:[{t:Interface$meta$model,a:{Type$Interface:'Type$Interface'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','Interface']};};
exports.AppliedInterface=AppliedInterface;
function $init$AppliedInterface(){
if (AppliedInterface.$$===undefined){
initTypeProto(AppliedInterface,'ceylon.language.meta.model::AppliedInterface',Basic,Interface$meta$model);
(function($$appliedInterface){
})(AppliedInterface.$$.prototype);
}
return AppliedInterface;
}
exports.$init$AppliedInterface$meta$model=$init$AppliedInterface;
$init$AppliedInterface();
function AppliedMemberInterface(tipo,$$targs$$,that,myTargs){
$init$AppliedMemberInterface();
if (that===undefined){
var mm = getrtmm$$(tipo);
if (mm && mm.$cont) {
that=function(x){
var rv=tipo.bind(x);
rv.$crtmm$=tipo.$crtmm$;
var nt={t:tipo};
if (x.$$targs$$) {
nt.a={};
for (var nta in x.$$targs$$)nt.a[nta]=x.$$targs$$[nta];
}
if (that.$targs) {
if (!nt.a)nt.a={};
for (var nta in that.$targs)nt.a[nta]=that.$targs[nta];
}
rv=AppliedInterface(rv,{Type$Interface:nt});
if (nt.a)rv.$targs=nt.a;
rv.$bound=x;
return rv;
}
that.tipo$2=tipo;
} else {
that=new AppliedMemberInterface.$$;
}
}
set_type_args(that,$$targs$$);
MemberInterface$meta$model(that.$$targs$$===undefined?$$targs$$:{Type$MemberInterface:that.$$targs$$.Type$MemberInterface,
Container$MemberInterface:that.$$targs$$.Container$MemberInterface},that);
that.$targs=myTargs;
that.getMethod=ClassOrInterface$meta$model.$$.prototype.getMethod;
that.getDeclaredMethod=ClassOrInterface$meta$model.$$.prototype.getDeclaredMethod;
that.getAttribute=ClassOrInterface$meta$model.$$.prototype.getAttribute;
that.getDeclaredAttribute=ClassOrInterface$meta$model.$$.prototype.getDeclaredAttribute;
that.getClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getClassOrInterface;
that.getDeclaredClassOrInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredClassOrInterface;
that.getClass=ClassOrInterface$meta$model.$$.prototype.getClass;
that.getDeclaredClass=ClassOrInterface$meta$model.$$.prototype.getDeclaredClass;
that.getInterface=ClassOrInterface$meta$model.$$.prototype.getInterface;
that.getDeclaredInterface=ClassOrInterface$meta$model.$$.prototype.getDeclaredInterface;
that.equals=ClassModel$meta$model.$$.prototype.equals;
that.typeOf=ClassOrInterface$meta$model.$$.prototype.typeOf;
that.supertypeOf=ClassOrInterface$meta$model.$$.prototype.supertypeOf;
that.subtypeOf=ClassOrInterface$meta$model.$$.prototype.subtypeOf;
that.exactly=ClassOrInterface$meta$model.$$.prototype.exactly;
that.tipo=tipo;
var dummy = new AppliedMemberInterface.$$;
that.$$=AppliedMemberInterface.$$;
that.getT$all=function(){return dummy.getT$all();};
that.getT$name=function(){return dummy.getT$name();};
that.equals=function(o){
var eq=$is(o,{t:AppliedMemberInterface}) && (o.tipo$2||o.tipo)==tipo;
if (that.$bound)eq=eq && o.$bound && o.$bound.equals(that.$bound);else eq=eq && o.$bound===undefined;
return eq;
};
$defat(that,'string',function(){
return String$($qname(mm));
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','Object','$at','string']};});
$defat(that,'declaration',function(){
return InterfaceModel$meta$model.$$.prototype.$prop$getDeclaration.get.call(that);
},undefined,InterfaceModel$meta$model.$$.prototype.$prop$getDeclaration.$crtmm$);
that.$bind=function(x){return AppliedMemberInterface.$$.prototype.$bind.call(that,x);}
return that;
}
AppliedMemberInterface.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],$tp:{Container$MemberInterface:{'var':'in'},Type$MemberInterface:{'var':'out','def':{t:Anything}}},satisfies:[{t:MemberInterface$meta$model,a:{Type$MemberInterface:'Type$MemberInterface',Container$MemberInterface:'Container$MemberInterface'}}],$an:function(){return[shared(),abstract()];},d:['ceylon.language.meta.model','MemberInterface']};};
exports.AppliedMemberInterface=AppliedMemberInterface;
function $init$AppliedMemberInterface(){
if (AppliedMemberInterface.$$===undefined){
initTypeProto(AppliedMemberInterface,'ceylon.language.meta.model::AppliedMemberInterface',Basic,MemberInterface$meta$model);
(function($$appliedMemberInterface){
$$appliedMemberInterface.$bind=function $bind(container$2){
var $$appliedMemberInterface=this;
throw Exception(String$("IMPL MemberInterface.bind"));
};$$appliedMemberInterface.$bind.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Interface$meta$model,a:{Type$Interface:'Type$Interface'}},$ps:[{$nm:'container',$mt:'prm',$t:{t:Object$},$an:function(){return[];}}],$cont:MemberInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','MemberInterface','$m','bind']};};
})(AppliedMemberInterface.$$.prototype);
}
return AppliedMemberInterface;
}
exports.$init$AppliedMemberInterface$meta$model=$init$AppliedMemberInterface;
$init$AppliedMemberInterface();
function AppliedUnionType(tipo,types$2, $$targs$$, that) {
$init$AppliedUnionType();
if (that===undefined)that=new AppliedUnionType.$$;
set_type_args(that,$$targs$$);
UnionType$meta$model(that.$$targs$$===undefined?$$targs$$:{Union$UnionType:that.$$targs$$.Union$UnionType},that);
that.tipo=tipo;
that._types=types$2;
return that;
}
AppliedUnionType.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Union:{'var':'out','def':{t:Anything}}},satisfies:[{t:UnionType$meta$model,a:{Union:'Union'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','UnionType']};};
function $init$AppliedUnionType(){
if (AppliedUnionType.$$===undefined){
initTypeProto(AppliedUnionType,'ceylon.language.meta.model::AppliedUnionType',Basic,UnionType$meta$model);
(function($$appliedUnionType){
$defat($$appliedUnionType,'string',function(){
var qn="";
var first=true;
for (var i=0;i<this._types.length;i++) {
if (first)first=false;else qn+="|";
qn+=this._types[i].string;
}
return String$(qn);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','Object','$at','string']};});
$defat($$appliedUnionType,'hash',function(){
var h=this._types.length;
for (var i=0; i<this._types.length;i++) {
h+=this._types[i].hash;
}
return h;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','Object','$at','hash']};});
$$appliedUnionType.equals=function(u) {
if($is(u,{t:AppliedUnionType})) {
var mine=this._types;
var his=u.caseTypes;
if (mine.size==his.size) {
for (var i=0;i<mine.length;i++) {
if (!his.contains(mine[i]))return false;
}
return true;
}
}
return false;
}
$defat($$appliedUnionType,'caseTypes',function(){
var $$appliedUnionType=this;
return $$appliedUnionType._types; //TODO type
},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:Type$meta$model,a:{Type$Type:'Union$UnionType'}}}},$cont:AppliedUnionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','UnionType','$at','caseTypes']};});
$$appliedUnionType.typeOf=function typeOf(instance$20){
var tipos=[];
for (var i=0; i < this._types.length;i++) {
var _t = this._types[i];
if (_t.tipo) {
_t={t:_t.tipo};
} else if (_t.t===undefined) {
_t={t:_t};
}
tipos.push(_t);
}
return $is(instance$20,{t:'u',l:tipos});
};$$appliedUnionType.typeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'instance',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:AppliedUnionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','UnionType','$m','typeOf']};};
$$appliedUnionType.supertypeOf=function supertypeOf(type$21){
var $$appliedUnionType=this;
throw Exception(String$("IMPL AppliedUnionType.supertypeOf"));
};$$appliedUnionType.supertypeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:AppliedUnionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','UnionType','$m','supertypeOf']};};
$$appliedUnionType.exactly=function exactly(type$22){
if ($is(type$25, {t:AppliedUnionType})) {
for (var i=0; i<this._types.length;i++) {
var myt = this._types[i];
var was=false;
for (var j=0; j<type$25._types.length;j++) {
was |= myt.exactly(type$25._types[j]);
}
if (!was)return false;
}
for (var i=0; i<type$25._types.length;i++) {
var myt = type$25._types[i];
var was=false;
for (var j=0; j<this._types.length;j++) {
was |= myt.exactly(this._types[j]);
}
if (!was)return false;
}
return true;
}
return false;
};$$appliedUnionType.exactly.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:AppliedUnionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','UnionType','$m','exactly']};};
})(AppliedUnionType.$$.prototype);
}
return AppliedUnionType;
}
exports.$init$AppliedUnionType$meta$model=$init$AppliedUnionType;
$init$AppliedUnionType();
function AppliedIntersectionType(tipo,types$3, $$targs$$, that) {
$init$AppliedIntersectionType();
if (that===undefined)that=new AppliedIntersectionType.$$;
set_type_args(that,$$targs$$);
that._types=types$3;
IntersectionType$meta$model(that.$$targs$$===undefined?$$targs$$:{Intersection$IntersectionType:that.$$targs$$.Intersection$IntersectionType},that);
that.tipo=tipo;
return that;
}
AppliedIntersectionType.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Intersection$IntersectionType:{'var':'out','def':{t:Anything}}},satisfies:[{t:IntersectionType$meta$model,a:{Intersection$IntersectionType:'Intersection$IntersectionType'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','IntersectionType']};};
function $init$AppliedIntersectionType(){
if (AppliedIntersectionType.$$===undefined){
initTypeProto(AppliedIntersectionType,'ceylon.language.meta.model::AppliedIntersectionType',Basic,IntersectionType$meta$model);
(function($$appliedIntersectionType){
$defat($$appliedIntersectionType,'string',function(){
var qn="";
var first=true;
for (var i=0;i<this._types.length;i++) {
if (first)first=false;else qn+="&";
qn+=this._types[i].string;
}
return String$(qn);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','Object','$at','string']};});
$defat($$appliedIntersectionType,'hash',function(){
var h=this._types.length;
for (var i=0; i<this._types.length;i++) {
h+=this._types[i].hash;
}
return h;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['$','Object','$at','hash']};});
$$appliedIntersectionType.equals=function(u) {
if($is(u,{t:AppliedIntersectionType})) {
var mine=this._types;
var his=u.satisfiedTypes;
if (mine.size==his.size) {
for (var i=0;i<mine.length;i++) {
if (!his.contains(mine[i]))return false;
}
return true;
}
}
return false;
}
$defat($$appliedIntersectionType,'satisfiedTypes',function(){
var $$appliedIntersectionType=this;
return $$appliedIntersectionType._types;
},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:Type$meta$model,a:{Type$Type:'Intersection$IntersectionType'}}}},$cont:AppliedIntersectionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','IntersectionType','$at','satisfiedTypes']};});
$$appliedIntersectionType.typeOf=function typeOf(instance$23){
var tipos=[];
for (var i=0; i < this._types.length;i++) {
var _t = this._types[i];
if (_t.tipo) {
_t={t:_t.tipo};
} else if (_t.t===undefined) {
_t={t:_t};
}
tipos.push(_t);
}
return $is(instance$23,{t:'i',l:tipos});
};$$appliedIntersectionType.typeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'instance',$mt:'prm',$t:{t:Anything},$an:function(){return[];}}],$cont:AppliedIntersectionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','IntersectionType','$m','typeOf']};};
$$appliedIntersectionType.supertypeOf=function supertypeOf(type$24){
var $$appliedIntersectionType=this;
throw Exception(String$("IMPL AppliedIntersectionType.supertypeOf"));
};$$appliedIntersectionType.supertypeOf.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:AppliedIntersectionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','IntersectionType','$m','supertypeOf']};};
$$appliedIntersectionType.exactly=function exactly(type$25){
if ($is(type$25, {t:AppliedIntersectionType})) {
for (var i=0; i<this._types.length;i++) {
var myt = this._types[i];
var was=false;
for (var j=0; j<type$25._types.length;j++) {
was |= myt.exactly(type$25._types[j]);
}
if (!was)return false;
}
for (var i=0; i<type$25._types.length;i++) {
var myt = type$25._types[i];
var was=false;
for (var j=0; j<this._types.length;j++) {
was |= myt.exactly(this._types[j]);
}
if (!was)return false;
}
return true;
}
return false;
};$$appliedIntersectionType.exactly.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean},$ps:[{$nm:'type',$mt:'prm',$t:{t:Type$meta$model,a:{Type$Type:{t:Anything}}},$an:function(){return[];}}],$cont:AppliedIntersectionType,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','IntersectionType','$m','exactly']};};
})(AppliedIntersectionType.$$.prototype);
}
return AppliedIntersectionType;
}
exports.$init$AppliedIntersectionType$meta$model=$init$AppliedIntersectionType;
$init$AppliedIntersectionType();
function AppliedFunction(m,$$targs$$,o,mptypes) {
var mm=getrtmm$$(m);
var ttargs;
if (mm.$tp) {
if (!mptypes || mptypes.size<1)throw TypeApplicationException$meta$model("Missing type arguments for AppliedFunction");
var i=0;ttargs={};
for (var tp in mm.$tp) {
var _ta=mptypes.$get?mptypes.$get(i):mptypes[i];
if(_ta&&_ta.tipo)ttargs[tp]={t:_ta.tipo};
else if (_ta) console.log("TODO assign type arg " + _ta + " to " + tp);
else if (mptypes[tp])ttargs[tp]=mptypes[tp];
else throw new Error("No more type arguments in AppliedFunction!");
i++;
}
}
var f = o===undefined&&mm.$cont?function(x){
return AppliedFunction(m,$$targs$$,x,mptypes);
}:function(){
var _fu=(o&&o[mm.d[mm.d.length-1]])||m;//Get the object's method if possible
if (mm.$tp) {
var _a=[];
for (var i=0;i<arguments.length;i++)_a.push(arguments[i]);
_a.push(ttargs);
return _fu.apply(o,_a);
}
return _fu.apply(o,arguments);
}
f.$crtmm$={mod:$CCMM$,d:['ceylon.language.meta.model','Function'],$t:mm.$t,$ps:mm.$ps,$an:mm.$an};
var dummy=new AppliedFunction.$$;
f.getT$all=function(){return dummy.getT$all();}
f.getT$name=function(){return dummy.getT$name();}
if ($$targs$$===undefined) {
throw TypeApplicationException$meta$model("Missing type arguments for AppliedFunction");
}
Function$meta$model($$targs$$,f);
f.tipo=m;
f.$targs=ttargs;
if (o)f.$bound=o;
$defat(f,'typeArguments',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getTypeArguments.get.call(f);
},undefined,function(){return{mod:$CCMM$,$t:{t:Map,a:{Key$Map:{t:TypeParameter$meta$declaration},Item$Map:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:AppliedFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Generic','$at','typeArguments']};});
f.equals=function(oo){
return $is(oo,{t:AppliedFunction}) && oo.tipo===m && oo.typeArguments.equals(this.typeArguments) && (o?o.equals(oo.$bound):oo.$bound===o);
}
$defat(f,'string',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getString.get.call(f);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','Object','$at','string'],$cont:AppliedFunction};});
$defat(f,'parameterTypes',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getParameterTypes.get.call(f);
},undefined,FunctionModel$meta$model.$$.prototype.$prop$getParameterTypes.$crtmm$);
$defat(f,'declaration',function(){
if (f._decl)return f._decl;
f._decl = OpenFunction(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), m);
return f._decl;
},undefined,function(){return{mod:$CCMM$,$t:{t:FunctionDeclaration$meta$declaration},d:['ceylon.language.meta.model','FunctionModel','$at','declaration']};});
f.$apply=function(a){
a=convert$params(mm,a);
if (ttargs) {
var _a=[];
for (var i=0;i<a.size;i++)_a.push(a.$get(i));
_a.push(ttargs);
a=_a;
}
return m.apply(o,a);
}
f.namedApply=function(args) {
if (mm.$ps===undefined)throw InvocationException$meta$model("Applied function does not have metamodel parameter info for named args call");
var mapped={};
var iter=args.iterator();var a;while((a=iter.next())!==getFinished()) {
mapped[a.key]=a.item===getNullArgument$meta$model()?null:a.item;
}
var ordered=[];
for (var i=0; i<mm.$ps.length; i++) {
var p=mm.$ps[i];
var v=mapped[p.$nm];
if (v===undefined && p.$def===undefined) {
throw InvocationException$meta$model("Required argument " + p.$nm + " missing in named-argument invocation");
} else if (v!==undefined) {
var t=p.$t;
if(typeof(t)==='string'&&ttargs)t=ttargs[t];
if (t&&!$is(v,t))throw IncompatibleTypeException$meta$model("Argument " + p.$nm + "="+v+" is not of the expected type.");
}
delete mapped[p.$nm];
ordered.push(v);
}
if (Object.keys(mapped).length>0)throw new InvocationException$meta$model("No arguments with names " + Object.keys(mapped));
if (ttargs) {
ordered.push(ttargs);
}
return m.apply(o,ordered);
}
return f;
}
AppliedFunction.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language.meta.model','Function'],satisfies:{t:Function$meta$model,a:{Type$Function:'Type$Function',Arguments$Function:'Arguments$Function'}},$an:function(){return [shared(),actual()];}};};
exports.AppliedFunction$meta$model=AppliedFunction;
initTypeProto(AppliedFunction,'ceylon.language.meta.model::AppliedFunction',Basic,Function$meta$model);
function AppliedValue(obj,attr,$$targs$$,$$appliedValue){
if (attr===undefined)throw Exception("Value reference not found. Metamodel doesn't work with modules compiled in lexical scope style.");
var mm = getrtmm$$(attr);
$init$AppliedValue();
if ($$appliedValue===undefined){
if (obj||mm.$cont===undefined)$$appliedValue=new AppliedValue.$$;
else {
$$appliedValue=function(x){return AppliedValue(x,attr,$$targs$$);};
$$appliedValue.$$=AppliedValue.$$;
var dummy=new AppliedValue.$$;
$$appliedValue.getT$all=function(){return dummy.getT$all();};
$$appliedValue.getT$name=function(){return dummy.getT$name();};
$defat($$appliedValue,'string',function(){
var qn;
if ($$targs$$ && $$targs$$.Container$Value) {
qn = typeLiteral$meta({Type$typeLiteral:$$targs$$.Container$Value}).string + "." + mm.d[mm.d.length-1];
} else if (mm.$cont) {
qn = typeLiteral$meta({Type$typeLiteral:{t:mm.$cont}}).string + "." + mm.d[mm.d.length-1];
} else {
qn=$qname(mm);
}
return String$(qn);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','Object','$at','string']};});
}
}
set_type_args($$appliedValue,$$targs$$);
Value$meta$model($$appliedValue.$$targs$$===undefined?$$targs$$:{Get$Value:$$appliedValue.$$targs$$.Get$Value,Set$Value:$$appliedValue.$$targs$$.Set$Value},$$appliedValue);
if($$targs$$.Container$Value)Attribute$meta$model({Get$Attribute:$$targs$$.Get$Value,
Set$Attribute:$$targs$$.Set$Value,Container$Attribute:$$targs$$.Container$Value},$$appliedValue);//TODO checar si no es if Container$Attribute
$$appliedValue.obj=obj;
$$appliedValue.tipo=attr;
return $$appliedValue;
}
AppliedValue.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Get:{'var':'out'},Set:{'var':'in'}},
satisfies:[{t:Value$meta$model,a:{Get:'Get',Set:'Set'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','Value']};};
exports.AppliedValue$meta$model=AppliedValue;
function $init$AppliedValue(){
if (AppliedValue.$$===undefined){
initTypeProto(AppliedValue,'ceylon.language.meta.model::AppliedValue',Basic,Value$meta$model);
(function($$appliedValue){
$defat($$appliedValue,'string',function(){
return String$($qname(this.tipo));
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','Object','$at','string']};});
$defat($$appliedValue,'declaration',function(){
var $$av=this;
var mm = $$av.tipo.$crtmm$;
var _pkg = getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]);
return OpenValue(_pkg, $$av.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:ValueDeclaration$meta$declaration},$cont:AppliedValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Value','$at','declaration']};});
$$appliedValue.$get=function $get(){
if (this.obj) {
var mm=this.tipo.$crtmm$;
return (mm&&mm.d&&this.obj[mm.d[mm.d.length-1]])||this.tipo.get.call(this.obj);
}
return this.tipo.get();
};$$appliedValue.$get.$crtmm$=function(){return{mod:$CCMM$,$t:'Get',$ps:[],$cont:AppliedValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Value','$m','get']};};
$$appliedValue.set=function set(newValue$26){
if (!this.tipo.set)throw MutationException$meta$model("Value is not writable");
return this.obj?this.tipo.set.call(this.obj,newValue$26):this.tipo.set(newValue$26);
};$$appliedValue.set.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Anything},$ps:[{$nm:'newValue',$mt:'prm',$t:'Set',$an:function(){return[];}}],$cont:AppliedValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Value','$m','set']};};
$$appliedValue.setIfAssignable=function(v) {
var mm = this.tipo.$crtmm$;
if (!$is(v,mm.$t))throw IncompatibleTypeException$meta$model("The specified value has the wrong type");
var mdl=get_model(mm);
if (!(mdl &&mdl['var']))throw MutationException$meta$model("Attempt to modify a value that is not variable");
this.obj?this.tipo.set.call(this.obj,v):this.tipo.set(v);
};$$appliedValue.setIfAssignable.$crtmm$=function(){return{mod:$CCMM$,$ps:[],$cont:AppliedValue,d:['ceylon.language.meta.model','Value','$m','setIfAssignable']};};
$defat($$appliedValue,'type',function(){
var $$atr=this;
var t = $$atr.tipo.$crtmm$;
return typeLiteral$meta({Type$typeLiteral:t.$t});
},undefined,function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Get$Value'}},$cont:AppliedValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Value','$at','type']};});
$defat($$appliedValue,'container',function(){
if (this.$$targs$$.Container$Value) {
return typeLiteral$meta({Type$typeLiteral:this.$$targs$$.Container$Value});
} else if (this.$$targs$$.Container$Attribute) {
return typeLiteral$meta({Type$typeLiteral:this.$$targs$$.Container$Attribute});
}
var mm=this.tipo.$crtmm$;
if (mm.$cont) {
return typeLiteral$meta({Type$typeLiteral:{t:mm.$cont}});
}
return null;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:Type$meta$model,a:{Type$Type:{t:Anything}}}]},$cont:AppliedValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Value','$at','container']};});
})(AppliedValue.$$.prototype);
}
return AppliedValue;
}
exports.$init$AppliedValue$meta$model=$init$AppliedValue;
$init$AppliedValue();
function AppliedMethod(tipo,typeArgs,$$targs$$,$$appliedMethod){
$init$AppliedMethod();
var mm = getrtmm$$(tipo);
if (mm.$tp) {
if (typeArgs===undefined || typeArgs.size<1)
throw TypeApplicationException$meta$model(String$("Missing type arguments in call to FunctionDeclaration.apply"));
var _ta={}; var i=0;
for (var tp in mm.$tp) {
if (typeArgs.$get(i)===undefined)
throw TypeApplicationException$meta$model(String$("Missing type argument for "+tp));
var _tp = mm.$tp[tp];
var _t = typeArgs.$get(i).tipo;
_ta[tp]={t:_t};
if ((_tp.satisfies && _tp.satisfies.length>0) || (_tp.of && _tp.of.length > 0)) {
var restraints=(_tp.satisfies && _tp.satisfies.length>0)?_tp.satisfies:_tp.of;
for (var j=0; j<restraints.length;j++) {
var _r=restraints[j];if (typeof(_r)==='function')_r=getrtmm$$(_r).$t;
if (!extendsType(_ta[tp],_r))
throw TypeApplicationException$meta$model(String$("Type argument for " + tp + " violates type parameter constraints"));
}
}
i++;
}
}
if ($$appliedMethod===undefined){
$$appliedMethod=function(x){
return AppliedFunction(tipo,{Type$Function:$$targs$$.Type$Method,Arguments$Function:$$targs$$.Arguments$Method,
Container$Function:$$targs$$.Container$Method},x,typeArgs);
}
var dummy=new AppliedMethod.$$;
$$appliedMethod.getT$all=function(){return dummy.getT$all();};
$$appliedMethod.getT$name=function(){return dummy.getT$name();};
}
if (_ta)$$appliedMethod.$targs=_ta;
set_type_args($$appliedMethod,$$targs$$);
Method$meta$model($$appliedMethod.$$targs$$===undefined?$$targs$$:{Arguments$Method:$$appliedMethod.$$targs$$.Arguments$Method,
Type$Method:$$appliedMethod.$$targs$$.Type$Method,Container$Method:$$appliedMethod.$$targs$$.Container$Method},$$appliedMethod);
$$appliedMethod.tipo=tipo;
$defat($$appliedMethod,'declaration',function(){
var _pkg = getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]);
return OpenFunction(_pkg, $$appliedMethod.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:FunctionDeclaration$meta$declaration},$cont:AppliedMethod,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Method','$at','declaration']};});
$defat($$appliedMethod,'type',function(){
return typeLiteral$meta({Type$typeLiteral:mm.$t});
},undefined,function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Type'}},$cont:AppliedMethod,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Method','$at','type']};});
$defat($$appliedMethod,'typeArguments',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getTypeArguments.get.call($$appliedMethod);
},undefined,function(){return{mod:$CCMM$,$t:{t:Map,a:{Key:{t:TypeParameter$meta$declaration},Item:{t:Type$meta$model,a:{Type$Type:{t:Anything}}}}},$cont:AppliedMethod,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Generic','$at','typeArguments']};});
$defat($$appliedMethod,'parameterTypes',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getParameterTypes.get.call($$appliedMethod);
},undefined,FunctionModel$meta$model.$$.prototype.$prop$getParameterTypes.$crtmm$);
$$appliedMethod.equals=function(o){
return $is(o,{t:AppliedMethod}) && o.tipo===tipo && o.typeArguments.equals(this.typeArguments);
}
$$appliedMethod.$bind=function(o){
if (!$is(o,{t:mm.$cont}))throw IncompatibleTypeException$meta$model("Cannot bind " + $$appliedMethod.string + " to "+o);
return $$appliedMethod(o);
}
$defat($$appliedMethod,'string',function(){
return FunctionModel$meta$model.$$.prototype.$prop$getString.get.call($$appliedMethod);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','Object','$at','string'],$cont:AppliedMethod};});
return $$appliedMethod;
}
AppliedMethod.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Container$Method:{'var':'in'},Type$Method:{'var':'out','def':{t:Anything}},Arguments$Method:{'var':'in','satisfies':[{t:Sequential,a:{Element$Iterable:{t:Anything}}}],'def':{t:Nothing}}},satisfies:[{t:Method$meta$model,a:{Arguments$Method:'Arguments$Method',Type$Method:'Type$Method',Container$Method:'Container$Method'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','Method']};};
exports.AppliedMethod$meta$model=AppliedMethod;
function $init$AppliedMethod(){
if (AppliedMethod.$$===undefined){
initTypeProto(AppliedMethod,'ceylon.language.meta.model::AppliedMethod',Basic,Method$meta$model);
(function($$appliedMethod){
})(AppliedMethod.$$.prototype);
}
return AppliedMethod;
}
exports.$init$AppliedMethod$meta$model=$init$AppliedMethod;
$init$AppliedMethod();
function AppliedAttribute(pname, atr,$$targs$$,$$appliedAttribute){
$init$AppliedAttribute();
if ($$appliedAttribute===undefined) {
$$appliedAttribute=function(x){return AppliedValue(x,atr, {Get$Value:$$targs$$.Get$Attribute,Set$Value:$$targs$$.Set$Attribute,
Container$Value:$$targs$$.Container$Attribute});};
$$appliedAttribute.$$=AppliedAttribute.$$;
var dummy=new AppliedAttribute.$$;
$$appliedAttribute.getT$all=function(){return dummy.getT$all();};
$$appliedAttribute.getT$name=function(){return dummy.getT$name();};
}
set_type_args($$appliedAttribute,$$targs$$);
Attribute$meta$model($$appliedAttribute.$$targs$$===undefined?$$targs$$:{Get$Attribute:$$appliedAttribute.$$targs$$.Get$Attribute,Set$Attribute:$$appliedAttribute.$$targs$$.Set$Attribute,Container$Attribute:$$appliedAttribute.$$targs$$.Container$Attribute},$$appliedAttribute);
$$appliedAttribute.tipo=atr;
$$appliedAttribute.pname=pname;
$defat($$appliedAttribute,'type',function(){
var t = getrtmm$$(atr);
if (t===undefined)throw Exception("Attribute reference not found. Metamodel doesn't work in modules compiled in lexical scope style.");
t=t.$t;
return typeLiteral$meta({Type$typeLiteral:t});
},undefined,function(){return{mod:$CCMM$,$t:{t:Type$meta$model,a:{Type$Type:'Get$Attribute'}},$cont:AppliedAttribute,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Attribute','$at','type']};});
$defat($$appliedAttribute,'declaration',function(){
var mm = getrtmm$$(atr);
var pkg = getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]);
return OpenValue(pkg, atr);
},undefined,function(){return{mod:$CCMM$,$t:{t:ValueDeclaration$meta$declaration},$cont:AppliedAttribute,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.model','Attribute','$at','declaration']};});
$$appliedAttribute.$bind=function(cont){
return AppliedValue(cont,atr,{Get$Value:$$targs$$.Get$Attribute,Set$Value:$$targs$$.Set$Attribute,
Container$Value:$$targs$$.Container$Attribute});
}
$defat($$appliedAttribute,'string',function(){
var c=getrtmm$$(atr).$cont;
if (typeof(c.$crtmm$)==='function')c.$crtmm$=c.$crtmm$();
if (!c)return String$($qname(atr));
c=c.$crtmm$;
var qn=$qname(c);
if (c.$tp) {
qn+="<"; var first=true;
var cnt=$$targs$$&&$$targs$$.Container$Attribute&&$$targs$$.Container$Attribute.a;
for (var tp in c.$tp) {
if (first)first=false;else qn+=",";
var _ta=cnt&&cnt[tp];
if (_ta) {
qn+=$qname(_ta);
} else qn+=$qname(Anything);
}
qn+=">";
}
qn+="."+pname;
return String$(qn);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['$','Object','$at','string']};});
$$appliedAttribute.equals=function(o) {
return $is(o,{t:AppliedAttribute}) && o.tipo===atr;
}
return $$appliedAttribute;
}
AppliedAttribute.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$tp:{Get:{'var':'out','def':{t:Anything}},Set:{'var':'in','def':{t:Nothing}},Container:{'var':'in'}},satisfies:[{t:Attribute$meta$model,a:{Get:'Get',Set:'Set',Container:'Container'}}],$an:function(){return[shared()];},d:['ceylon.language.meta.model','Attribute']};};
exports.AppliedAttribute=AppliedAttribute;
function $init$AppliedAttribute(){
if (AppliedAttribute.$$===undefined){
initTypeProto(AppliedAttribute,'ceylon.language.meta.model::AppliedAttribute',Basic,Attribute$meta$model);
(function($$appliedAttribute){
})(AppliedAttribute.$$.prototype);
}
return AppliedAttribute;
}
exports.$init$AppliedAttribute$meta$model=$init$AppliedAttribute;
$init$AppliedAttribute();
function $findAnnotation(cont,ant) {
var _m=getrtmm$$(cont);
if (!(_m && _m.$an))return null;
if (typeof(_m.$an)==='function')_m.$an=_m.$an();
for (var i=0; i < _m.$an.length; i++) {
if ($is(_m.$an[i],{t:ant}))return _m.$an[i];
}
return null;
}
function _findTypeFromModel(pkg,mdl,cont) {
var mod = pkg.container;
var nm = mdl.$nm;
var mt = mdl['$mt'];
if (mt === 'a' || mt === 'g' || mt === 'o' || mt === 's') {
nm = '$prop$get' + nm[0].toUpperCase() + nm.substring(1);
}
if (cont) {
var imm=getrtmm$$(cont);
if (mt==='c'||mt==='i')nm=nm+'$'+imm.d[imm.d.length-1];
}else {
nm+=pkg.suffix;
}
var out=cont?cont.$$.prototype:mod.meta;
var rv=out[nm];
if (rv===undefined)rv=out['$'+nm];
if (rv===undefined){
rv=out['$init$'+nm];
if (typeof(rv)==='function')rv=rv();
}
return rv;
}
function _openTypeFromTarg(targ,o) {
if (targ.t==='u' || targ.t==='i') {
var tl=[];
for (var i=0; i < targ.l.length; i++) {
var _ct=targ.l[i];
if (typeof(_ct)==='string') {
tl.push(OpenTvar(OpenTypeParam(o,_ct)));
} else {
tl.push(_ct.t?_openTypeFromTarg(_ct,o):_ct);
}
}
return (targ.t==='u'?FreeUnion:FreeIntersection)(tl.reifyCeylonType({Element$Iterable:{t:OpenType$meta$declaration}}));
} else if (targ.t==='T') {
targ=$retuple(targ);
}
var mm=getrtmm$$(targ.t);
var lit = typeLiteral$meta({Type$typeLiteral:targ.t});
if (targ.a && lit)lit._targs=targ.a;
var mdl = get_model(mm);
if (mdl.$mt==='i') {
return FreeInterface(lit);
} else if (mdl.$mt==='c' || mdl.$mt==='o') {
return FreeClass(lit);
}
console.log("Don't know WTF to return for " + lit + " metatype " + mdl.$mt);
}
function FreeClass(declaration, $$freeClass){
$init$FreeClass();
if ($$freeClass===undefined)$$freeClass=new FreeClass.$$;
OpenClassType$meta$declaration($$freeClass);
$$freeClass._decl=declaration;
$$freeClass.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:ClassDeclaration$meta$declaration},$cont:FreeClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenClassType','$at','declaration']};}};
$$freeClass.$prop$getDeclaration.get=function(){return declaration};
return $$freeClass;
}
FreeClass.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenClassType$meta$declaration}],d:['ceylon.language.meta.declaration','OpenClassType']};};
function $init$FreeClass(){
if (FreeClass.$$===undefined){
initTypeProto(FreeClass,'ceylon.language.meta.declaration::FreeClass',Basic,OpenClassType$meta$declaration);
(function($$freeClass){
$$freeClass.equals=function(other) {
return $is(other,{t:FreeClass}) && other.declaration.equals(this.declaration) && this.typeArguments.equals(other.typeArguments);
}
})(FreeClass.$$.prototype);
}
return FreeClass;
}
exports.$init$FreeClass=$init$FreeClass;
$init$FreeClass();
function FreeInterface(declaration, $$freeInterface){
$init$FreeInterface();
if ($$freeInterface===undefined)$$freeInterface=new FreeInterface.$$;
OpenInterfaceType$meta$declaration($$freeInterface);
$$freeInterface._decl=declaration;
$$freeInterface.$prop$getDeclaration.get=function(){return declaration};
return $$freeInterface;
}
FreeInterface.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenInterfaceType$meta$declaration}],d:['ceylon.language.meta.declaration','OpenInterfaceType']};};
function $init$FreeInterface(){
if (FreeInterface.$$===undefined){
initTypeProto(FreeInterface,'ceylon.language.meta.declaration::FreeInterface',Basic,OpenInterfaceType$meta$declaration);
(function($$freeInterface){
$$freeInterface.equals=function(other) {
return $is(other,{t:FreeInterface}) && other.declaration.equals(this.declaration) && this.typeArguments.equals(other.typeArguments);
}
})(FreeInterface.$$.prototype);
}
return FreeInterface;
}
exports.$init$FreeInterface=$init$FreeInterface;
$init$FreeInterface();
function OpenFunction(pkg,meta,that){
if (meta===undefined)throw Exception("Function reference not found. Metamodel doesn't work with modules compiled in lexical scope style");
$init$OpenFunction();
if (that===undefined)that=new OpenFunction.$$;
that._pkg=pkg;
var _mm=getrtmm$$(meta);
if (_mm === undefined) {
that.meta=meta;
that.tipo=_findTypeFromModel(pkg,meta);
_mm=getrtmm$$(that.tipo);
} else {
that.tipo = meta;
that.meta = get_model(_mm);
}
that.name_=(that.meta&&that.meta.$nm)||'?';
that.toplevel_=_mm===undefined||_mm.$cont===undefined;
FunctionDeclaration$meta$declaration(that);
return that;
}
OpenFunction.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:FunctionDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','FunctionDeclaration']};};
function $init$OpenFunction(){
if (OpenFunction.$$===undefined){
initTypeProto(OpenFunction,'ceylon.language.meta.declaration::OpenFunction',Basic,FunctionDeclaration$meta$declaration);
(function($$openFunction){
$$openFunction.equals=function(o) {
if ($is(o,{t:OpenFunction})) {
return o.tipo === this.tipo;
}
return false;
}
$$openFunction.equals.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Boolean$},d:['ceylon.language','Object','$m','equals']};}
$defat($$openFunction,'container',function(){
if (this.$parent)return this.$parent;
if (this.toplevel)return this.containingPackage;
return typeLiteral$meta({Type$typeLiteral:this.tipo.$crtmm$.$cont});
},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','container']};});
$defat($$openFunction,'annotation',function(){
return $findAnnotation(this.tipo,AnnotationAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$at','annotation']};});
$$openFunction.$apply=function $apply(types,$mptypes){
var mm=this.tipo.$crtmm$;
var ta={t:this.tipo};
validate$typeparams(ta,mm.$tp,types);
validate$params(mm.$ps,$mptypes.Arguments$apply,"Wrong number of arguments when applying function");
return ta.a?AppliedFunction(this.tipo,{Type:mm.$t,Arguments:tupleize$params(mm.$ps,ta.a)},undefined,ta.a):
AppliedFunction(this.tipo,{Type:mm.$t,Arguments:tupleize$params(mm.$ps)});
};$$openFunction.$apply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Function$meta$model,a:{Arguments:{t:Nothing},Type:{t:Anything}}},$ps:[{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model}}}}],$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','apply']};};
$$openFunction.memberApply=function memberApply(cont,types,$mptypes){
var mm=this.tipo.$crtmm$;
if (!(cont.tipo && extendsType({t:cont.tipo},{t:mm.$cont}))&&cont!==getNothingType$meta$model())
throw IncompatibleTypeException$meta$model("Incompatible Container type argument");
if (!extendsType(mm.$t,$mptypes.Return$memberApply))throw IncompatibleTypeException$meta$model("Incompatible Return type argument");
validate$params(mm.$ps,$mptypes.Arguments$memberApply,"Wrong number of Arguments for memberApply");
var ta={t:this.tipo};
validate$typeparams(ta,mm.$tp,types);
return AppliedMethod(this.tipo,types,{Container$Method:$mptypes.Container$memberApply,
Type$Method:mm.$t,Arguments$Method:tupleize$params(mm.$ps,ta.a)});
};$$openFunction.memberApply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Method$meta$model,a:{Arguments:'Arguments',Type:'MethodType',Container:'Container'}},$ps:[{$nm:'types',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model}}}}],$cont:OpenFunction,$tp:{Container:{},MethodType:{},Arguments:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}]}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','memberApply']};};
$defat($$openFunction,'defaulted',function(){
return false;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','defaulted']};});
$defat($$openFunction,'variadic',function(){
var $$openFunction=this;
return false;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','variadic']};});
$$openFunction.getParameterDeclaration=function (name$6){
var pd=this.parameterDeclarations;
for (var i=0; i < pd.length; i++) {
if (name$6.equals(pd[i].name))return pd[i];
}
return null;
};
$$openFunction.getParameterDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:FunctionOrValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','getParameterDeclaration']};};
$defat($$openFunction,'openType',function(){
var t = this.tipo.$crtmm$.$t;
if (typeof(t)==='string')return OpenTvar(OpenTypeParam(this.tipo,t));
return _openTypeFromTarg(t, this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','openType']};});
$defat($$openFunction,'name',function(){return this.name_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','name']};});
$defat($$openFunction,'containingPackage',function(){return this._pkg;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','containingPackage']};});
$defat($$openFunction,'containingModule',function(){return this._pkg.container;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','containingPackage']};});
$defat($$openFunction,'toplevel',function(){return this.toplevel_;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','toplevel']};});
$defat($$openFunction,'string',function(){return "function " + this.qualifiedName;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','string']};});
$defat($$openFunction,'qualifiedName',function(){
return $qname(this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenFunction,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
})(OpenFunction.$$.prototype);
}
return OpenFunction;
}
exports.$init$OpenFunction=$init$OpenFunction;
$init$OpenFunction();
function OpenValue(pkg, meta, that){
if (meta===undefined)throw Exception("Value reference not found. Metamodel doesn't work with modules compiled in lexical scope style");
$init$OpenValue();
if (that===undefined)that=new OpenValue.$$;
that._pkg = pkg;
var _mm=getrtmm$$(meta);
if (_mm === undefined) {
that.meta=meta;
if (meta['$mt']==='prm') {
that.tipo={$crtmm$:meta};
} else {
that.tipo=_findTypeFromModel(pkg,meta);
}
_mm = getrtmm$$(that.tipo);
} else {
that.tipo = meta;
that.meta = get_model(_mm);
}
that.name_=that.meta?that.meta.$nm:_mm&&_mm.d&&_mm.d[_mm.d.length-1];
that.toplevel_=_mm.$cont === undefined;
ValueDeclaration$meta$declaration(that);
return that;
}
OpenValue.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:ValueDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','ValueDeclaration']};};
function $init$OpenValue(){
if (OpenValue.$$===undefined){
initTypeProto(OpenValue,'ceylon.language.meta.declaration::OpenValue',Basic,ValueDeclaration$meta$declaration);
(function($$openValue){
$defat($$openValue,'container',function(){
if (this.$parent)return this.$parent;
if (this.toplevel)return this.containingPackage;
return typeLiteral$meta({Type$typeLiteral:this.tipo.$crtmm$.$cont});
},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},d:['ceylon.language.meta.declaration','NestableDeclaration','$at','container']};});
$$openValue.$apply=function $apply($$$mptypes){
var mm=getrtmm$$(this.tipo);
if (!extendsType(mm.$t,$$$mptypes.Get$apply))throw IncompatibleTypeException$meta$model("Incompatible Get type argument");
if (!extendsType($$$mptypes.Set$apply,this.tipo.set?mm.$t:{t:Nothing}))throw IncompatibleTypeException$meta$model("Incompatible Set type argument");
return AppliedValue(undefined,this.tipo,{Get$Value:$$$mptypes.Get$apply,Set$Value:$$$mptypes.Set$apply});
};$$openValue.$apply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Value$meta$model,a:{Type:{t:Anything}}},$ps:[{$nm:'instance',$mt:'prm',$def:1,$t:{t:Anything}}],$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','apply']};};
$$openValue.memberApply=function memberApply(cont,$mptypes) {
var mm=getrtmm$$(this.tipo);
if (!(cont.tipo && extendsType({t:cont.tipo},{t:mm.$cont}))&&cont!==getNothingType$meta$model())
throw IncompatibleTypeException$meta$model("Incompatible Container type argument");
if (!extendsType(mm.$t,$mptypes.Get$memberApply))throw IncompatibleTypeException$meta$model("Incompatible Get type argument");
if (!extendsType($mptypes.Set$memberApply,this.tipo.set?mm.$t:{t:Nothing}))throw IncompatibleTypeException$meta$model("Incompatible Set type argument");
return AppliedAttribute(this.meta.$nm,this.tipo,{Get$Attribute:$mptypes.Get$apply,Set$Attribute:$mptypes.Set$apply,
Container$Attribute:$mptypes.Container$memberApply});
};$$openValue.memberApply.$crtmm$=function(){return{mod:$CCMM$,d:['ceylon.language.meta.declaration','ValueDeclaration','$m','memberApply']};};
$defat($$openValue,'defaulted',function(){
return false;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','defaulted']};});
$defat($$openValue,'variadic',function(){
return false;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','variadic']};});
$defat($$openValue,'variable',function(){
var _m = get_model(getrtmm$$(this.tipo));
if (_m && _m['var']) return true;
return $findAnnotation(this.tipo,VariableAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','variadic']};});
$defat($$openValue,'openType',function(){
if (this.tipo) {
var mm = getrtmm$$(this.tipo);
if (typeof(mm.$t)==='string') {
return OpenTvar(OpenTypeParam(mm.$cont,mm.$t));
}
return _openTypeFromTarg(mm.$t, this.tipo);
}
throw Error("OpenValue.openType-we don't have a metamodel!");
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','openType']};});
$defat($$openValue,'name',function(){return this.name_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','name']};});
$defat($$openValue,'containingPackage',function(){return this._pkg;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','containingPackage']};});
$defat($$openValue,'containingModule',function(){return this._pkg.container;},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','containingModule']};});
$defat($$openValue,'toplevel',function(){return this.toplevel_;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','toplevel']};});
$$openValue.equals=function(other) {
if ($is(other, {t:OpenValue}) && other.name.equals(this.name) && other.toplevel===this.toplevel && other.containingPackage.equals(this.containingPackage)) {
return other.meta==this.meta;
}
return false;
}
$defat($$openValue,'string',function(){return "value " + this.qualifiedName;},undefined,{$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['ceylon.language','Object','$at','string']});
$defat($$openValue,'qualifiedName',function(){
return $qname(this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
$$openValue.memberSet=function(c,v) {
if (!$is(c,{t:this.tipo.$crtmm$.$cont}))throw IncompatibleTypeException$meta$model("Incompatible container type");
if (!$is(v,this.tipo.$crtmm$.$t))throw IncompatibleTypeException$meta$model("Incompatible value type");
if (!this.tipo.set)throw MutationException$meta$model($qname(this.tipo.$crtmm$)+" is not writable");
c[this.name]=v;
};
$defat($$openValue,'setter',function(){
return OpenSetter(this);
},undefined,function(){return{mod:$CCMM$,$t:{t:SetterDeclaration$meta$declaration},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','setter']};});
$defat($$openValue,'isObject',function(){
return this.meta&&this.meta.$mt==='o';
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','isObject']};});
$defat($$openValue,'objectDeclaration',function(){
if (this.isObject) {
var _m=getrtmm$$(this.tipo);
if (_m && _m.$t && typeof(_m.$t.t)==='function')return OpenClass(this._pkg,_m.$t.t);
}
return null;
},undefined,function(){return{mod:$CCMM$,$t:{t:'u',l:[{t:ClassDeclaration$meta$declaration},{t:Null}]},$cont:OpenValue,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','objectDeclaration']};});
})(OpenValue.$$.prototype);
}
return OpenValue;
}
exports.$init$OpenValue=$init$OpenValue;
$init$OpenValue();
function OpenSetter(v, $$openSetter){
$init$OpenSetter();
if ($$openSetter===undefined)$$openSetter=new OpenSetter.$$;
$$openSetter.variable_=v;
SetterDeclaration$meta$declaration($$openSetter);
$$openSetter.tipo=v.tipo.set;
if (v.tipo.set && getrtmm$$(v.tipo.set)) {
var mm=getrtmm$$(v.tipo.set)
if (typeof(mm.$an)==='function')mm.$an=mm.$an();
v.tipo.set.$crtmm$=mm;
}
return $$openSetter;
}
OpenSetter.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:SetterDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','SetterDeclaration']};};
function $init$OpenSetter(){
if (OpenSetter.$$===undefined){
initTypeProto(OpenSetter,'ceylon.language.meta.declaration::OpenSetter',Basic,SetterDeclaration$meta$declaration);
(function($$openSetter){
$defat($$openSetter,'variable',function(){return this.variable_;},undefined,function(){return{mod:$CCMM$,$t:{t:ValueDeclaration$meta$declaration},$cont:OpenSetter,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','variable']};});
$defat($$openSetter,'name',function(){return this.variable_.name;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenSetter,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','SetterDeclaration','$at','name']};});
$defat($$openSetter,'name',function(){return this.variable.name;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenSetter,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','name']};});
$defat($$openSetter,'string',function(){return "setter " + this.qualifiedName;},undefined,function(){return{$t:{t:String$},$cont:OpenSetter,$an:function(){return[shared(),actual()]},mod:$CCMM$,d:['ceylon.language','Object','$at','string']};});
$defat($$openSetter,'qualifiedName',function(){return this.variable.qualifiedName;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenSetter,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
$$openSetter.equals=function(o) {
return $is(o,{t:OpenSetter}) && o.variable.equals(this.variable);
}
})(OpenSetter.$$.prototype);
}
return OpenSetter;
}
exports.$init$OpenSetter=$init$OpenSetter;
$init$OpenSetter();
function OpenClass(pkg, meta, that){
if (meta===undefined)throw Exception("Class reference not found. Metamodel doesn't work with modules compiled in lexical scope style");
$init$OpenClass();
if (that===undefined)that=new OpenClass.$$;
that._pkg = pkg;
var _mm=getrtmm$$(meta);
if (_mm === undefined) {
that.meta=meta;
that.tipo=_findTypeFromModel(pkg,meta);
_mm = getrtmm$$(that.tipo);
} else {
that.tipo = meta;
that.meta = get_model(_mm);
}
that.name_=(that.meta&&that.meta.$nm)||_mm.d[_mm.d.length-1];
that.toplevel_=_mm.$cont===undefined;
ClassDeclaration$meta$declaration(that);
return that;
}
OpenClass.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:ClassDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','ClassDeclaration']};};
function $init$OpenClass(){
if (OpenClass.$$===undefined){
initTypeProto(OpenClass,'ceylon.language.meta.declaration::OpenClass',Basic,ClassDeclaration$meta$declaration);
(function($$openClass){
$$openClass.classApply=function(targs,$mptypes) {
var mm=this.tipo.$crtmm$;
if (mm.$tp) {
if (!targs)throw TypeApplicationException$meta$model("This class requires type arguments");
}
validate$params(mm.$ps,$mptypes.Arguments$classApply,"Wrong number of Arguments for classApply");
return this.$apply(targs,$mptypes);
}
$$openClass.memberClassApply=function(cont,targs,$mptypes){
var mm=this.tipo.$crtmm$;
if (cont!==getNothingType$meta$model() && !extendsType({t:cont.tipo},{t:mm.$cont}))
throw IncompatibleTypeException$meta$model("Incompatible Container specified");
if (!extendsType({t:this.tipo},$mptypes.Type$memberClassApply))
throw IncompatibleTypeException$meta$model("Incompatible Type specified");
var _t={t:this.tipo};
validate$typeparams(_t,mm.$tp,targs);
validate$params(mm.$ps,$mptypes.Arguments$memberClassApply,"Wrong number of Arguments for classApply");
var rv=AppliedMemberClass(this.tipo,{Container$MemberClass:{t:mm.$cont},Type$MemberClass:_t,Arguments$MemberClass:tupleize$params(mm.$ps)});
if (_t.a)rv.$targs=_t.a;
return rv;
}
$defat($$openClass,'string',function(){
return "class " + this.qualifiedName;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language','Object']};});
$defat($$openClass,'anonymous',function(){
return this.meta.$mt==='o';
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','anonymous']};});
$defat($$openClass,'abstract',function(){
return $findAnnotation(this.tipo,AbstractAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','abstract']};});
$defat($$openClass,'$final',function(){
return $findAnnotation(this.tipo,FinalAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','final']};});
$defat($$openClass,'annotation',function(){
return $findAnnotation(this.tipo,AnnotationAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionalDeclaration','$at','annotation']};});
$defat($$openClass,'openType',function(){
return FreeClass(this);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','openType']};});
$$openClass.getParameterDeclaration=function (name$15){
var pd=this.parameterDeclarations;
for (var i=0; i < pd.length; i++) {
if (name$6.equals(pd[i].name))return pd[i];
}
return null;
};
$$openClass.getParameterDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:FunctionOrValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$}}],$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$m','getParameterDeclaration']};};
$defat($$openClass,'extendedType',function(){
var sc = this.tipo.$crtmm$['super'];
if (sc === undefined)return null;
var mm = getrtmm$$(sc.t);
var fc=FreeClass(OpenClass(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), sc.t));
if (sc.a)fc.declaration._targs=sc.a;
return fc;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:OpenClassType$meta$declaration}]},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','extendedType']};});
$defat($$openClass,'satisfiedTypes',function(){
var ints = this.tipo.$crtmm$['satisfies'];
if (ints && ints.length) {
var rv = [];
for (var i=0; i < ints.length; i++) {
var ifc = ints[i];
var mm = getrtmm$$(ifc.t);
var fi=FreeInterface(OpenInterface(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), ifc.t));
if (ifc.a)fi.declaration._targs=ifc.a;
rv.push(fi);
}
return ArraySequence(rv,{Element$Iterable:{t:OpenInterfaceType$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenInterfaceType$meta$declaration}}},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','satisfiedTypes']};});
$defat($$openClass,'name',function(){return this.name_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','name']};});
$defat($$openClass,'containingPackage',function(){return this._pkg;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','containingPackage']};});
$defat($$openClass,'containingModule',function(){return this._pkg.container;},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','containingModule']};});
$defat($$openClass,'toplevel',function(){return this.toplevel_;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ClassDeclaration','$at','toplevel']};});
$defat($$openClass,'qualifiedName',function(){
return $qname(this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenClass,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
$$openClass.equals=function(other) {
return $is(other, {t:OpenClass}) && other.tipo===this.tipo;
}
})(OpenClass.$$.prototype);
}
return OpenClass;
}
exports.$init$OpenClass=$init$OpenClass;
$init$OpenClass();
function OpenInterface(pkg, meta, that) {
if (meta===undefined)throw Exception("Interface reference not found. Metamodel doesn't work with modules compiled in lexical scope style");
$init$OpenInterface();
if (that===undefined)that=new OpenInterface.$$;
that._pkg = pkg;
var _mm=getrtmm$$(meta);
if (_mm === undefined) {
that.meta=meta;
that.tipo=_findTypeFromModel(pkg,meta);
_mm = getrtmm$$(that.tipo);
} else {
that.tipo = meta;
that.meta = get_model(_mm);
}
that.name_=(that.meta&&that.meta.$nm)||_mm.d[_mm.d.length-1];
that.toplevel_=_mm.$cont === undefined;
InterfaceDeclaration$meta$declaration(that);
return that;
}
OpenInterface.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:InterfaceDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','InterfaceDeclaration']};};
function $init$OpenInterface(){
if (OpenInterface.$$===undefined){
initTypeProto(OpenInterface,'ceylon.language.meta.declaration::OpenInterface',Basic,InterfaceDeclaration$meta$declaration);
(function($$openInterface){
$$openInterface.equals=function(other) {
return $is(other, {t:OpenInterface}) && other.tipo==this.tipo;
}
$$openInterface.memberInterfaceApply=function(cont,targs,$mptypes){
var mm=this.tipo.$crtmm$;
if (cont!==getNothingType$meta$model() && !extendsType({t:cont.tipo},{t:mm.$cont}))
throw IncompatibleTypeException$meta$model("Incompatible Container specified");
var _t={t:this.tipo};
validate$typeparams(_t,mm.$tp,targs);
var rv=AppliedMemberInterface(this.tipo,{Container$MemberInterface:{t:mm.$cont},Type$MemberInterface:_t});
if (_t.a)rv.$targs=_t.a;
return rv;
}
$$openInterface.interfaceApply=function(targs,$mptypes) {
return this.$apply(targs,$mptypes);
}
$defat($$openInterface,'string',function(){
return "interface " + this.qualifiedName;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language','Object']};});
$defat($$openInterface,'openType',function(){
return FreeInterface(this);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','openType']};});
$defat($$openInterface,'extendedType',function(){
var sc = this.tipo.$crtmm$['super'];
if (sc === undefined)return null;
var mm = getrtmm$$(sc.t);
return FreeClass(OpenClass(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), sc.t));
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:OpenClasType$meta$declaration}]},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','extendedType']};});
$defat($$openInterface,'satisfiedTypes',function(){
var ints = this.tipo.$crtmm$['satisfies'];
if (ints && ints.length) {
var rv = [];
for (var i=0; i < ints.length; i++) {
var ifc = ints[i].t;
var mm = getrtmm$$(ifc);
rv.push(FreeInterface(OpenInterface(getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']).findPackage(mm.d[0]), ifc)));
}
return ArraySequence(rv,{Element$Iterable:{t:OpenInterfaceType$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenInterfaceType$meta$declaration}}},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','satisfiedTypes']};});
$defat($$openInterface,'name',function(){return this.name_;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','name']};});
$defat($$openInterface,'containingPackage',function(){return this._pkg;},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','containingPackage']};});
$defat($$openInterface,'containingModule',function(){return this._pkg.container;},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','containingModule']};});
$defat($$openInterface,'toplevel',function(){return this.toplevel_;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','InterfaceDeclaration','$at','toplevel']};});
$defat($$openInterface,'qualifiedName',function(){
return $qname(this.tipo);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenInterface,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
})(OpenInterface.$$.prototype);
}
return OpenInterface;
}
exports.$init$OpenInterface=$init$OpenInterface;
$init$OpenInterface();
function OpenAlias(alias, $$openAlias){
$init$OpenAlias();
if ($$openAlias===undefined)$$openAlias=new OpenAlias.$$;
if (typeof(alias)==='function')alias=alias();
$$openAlias._alias = alias;
var mm=getrtmm$$(alias);
$$openAlias.meta=get_model(mm);
AliasDeclaration$meta$declaration($$openAlias);
return $$openAlias;
}
OpenAlias.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:AliasDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','OpenAlias']};};
function $init$OpenAlias(){
if (OpenAlias.$$===undefined){
initTypeProto(OpenAlias,'OpenAlias',Basic,AliasDeclaration$meta$declaration);
(function($$openAlias){
$defat($$openAlias,'extendedType',function(){
return _openTypeFromTarg(this._alias);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','extendedType']};});
$defat($$openAlias,'qualifiedName',function(){
return $qname(this._alias.$crtmm$);
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','qualifiedName']};});
$defat($$openAlias,'toplevel',function(){
return this._alias.$cont===undefined;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','toplevel']};});
$defat($$openAlias,'containingPackage',function(){
throw Error("IMPL OpenAlias.containingPackage");
},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','containingPackage']};});
$defat($$openAlias,'containingModule',function(){
throw Exception("IMPL OpenAlias.containingModule");
},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','containingModule']};});
$defat($$openAlias,'container',function(){
var cont=this.$$targs$$.Container;
if (cont===undefined) {
cont=this._alias.$crtmm$.$cont;
if (cont)cont={t:cont};
}
if (cont) {
return typeLiteral$meta({Type$typeLiteral:cont});
}
return null;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:NestableDeclaration$meta$declaration},{t:Package$meta$declaration}]},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','container']};});
$defat($$openAlias,'openType',function(){
return this.extendedType;
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','openType']};});
$defat($$openAlias,'typeParameterDeclarations',function(){
var tps=this._alias.$crtmm$.$tp;
if (tps) {
var rv=[];
for (var tp in tps) {
rv.push(OpenTypeParam(this._alias, tp));
}
return ArraySequence(rv,{Element$Iterable:{t:TypeParameter$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:TypeParameter$meta$declaration}}},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','typeParameterDeclarations']};});
$$openAlias.getTypeParameterDeclaration=function getTypeParameterDeclaration(name$2){
var tp=this._alias.$crtmm$;
if (tp.$tp) {
var tpn=undefined;
for (var ftn in tp.$tp) {
if (ftn.substring(0,name$2.length+1)==name$2+'$') {
tpn=ftn;
}
}
tp=tpn;
} else {
tp=undefined;
}
return tp ? OpenTypeParam(this._alias, tp) : null;
};$$openAlias.getTypeParameterDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:TypeParameter$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$m','getTypeParameterDeclaration']};};
$defat($$openAlias,'name',function(){
return this._alias.$crtmm$.d[this._alias.$crtmm$.d.length-1];
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','name']};});
$defat($$openAlias,'string',function(){return "alias "+this.qualifiedName;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenAlias,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','AliasDeclaration','$at','string']};});
$$openAlias.equals=function equals(o) {
if (o && $is(o, {t:OpenAlias})) {
if (o._alias.a) {
return o._alias.a == this._alias.a;
}
return o._alias.t === this._alias.t;
}
return false;
}
})(OpenAlias.$$.prototype);
}
return OpenAlias;
}
exports.$init$OpenAlias=$init$OpenAlias;
$init$OpenAlias();
function OpenTypeParam(cont, nom, that){
$init$OpenTypeParam();
if (that===undefined)that=new OpenTypeParam.$$;
that._cont=cont;
that._fname=nom;
if (nom.indexOf('$')>0)nom=nom.substring(0,nom.indexOf('$'));
that._name=nom;
TypeParameter$meta$declaration(that);
return that;
}
OpenTypeParam.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:TypeParameter$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','TypeParameter']};};
exports.OpenTypeParam=OpenTypeParam;
function $init$OpenTypeParam(){
if (OpenTypeParam.$$===undefined){
initTypeProto(OpenTypeParam,'ceylon.language.meta.declaration::OpenTypeParam',Basic,TypeParameter$meta$declaration);
(function($$openTypeParam){
$defat($$openTypeParam,'container',function(){return this._cont;},undefined,function(){return{mod:$CCMM$,$t:{t:NestableDeclaration$meta$declaration},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','container']};});
$defat($$openTypeParam,'defaulted',function(){
var tp=this._cont.$crtmm$.$tp[this._fname];
if (tp) {
return tp['def'] !== undefined;
}
throw wrapexc(Exception("TypeParameter.defaulted"),'8:38-8:80','caca.ceylon');
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','defaulted']};});
$defat($$openTypeParam,'defaultTypeArgument',function(){
var tp=this._cont.$crtmm$.$tp[this._fname];
if (typeof(tp.def)==='string') {
return OpenTvar(OpenTypeParam(this._cont, tp.def));
}
return tp.def?_openTypeFromTarg(tp.def,this._cont):null;
},undefined,function(){return{mod:$CCMM$,$t:{ t:'u', l:[{t:Null},{t:OpenType$meta$declaration}]},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','defaultTypeArgument']};});
$defat($$openTypeParam,'variance',function(){
var tp=this._cont.$crtmm$.$tp[this._fname];
if (tp) {
if (tp['var']==='out')return getCovariant$meta$declaration();
if (tp['var']=== 'in')return getContravariant$meta$declaration();
return getInvariant$meta$declaration();
}
throw wrapexc(Exception("TypeParameter.variance"),'10:38-10:79','caca.ceylon');
},undefined,function(){return{mod:$CCMM$,$t:{t:Variance$meta$declaration},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','variance']};});
$defat($$openTypeParam,'satisfiedTypes',function(){
var tp=this._cont.$crtmm$.$tp[this._fname];
if (tp.satisfies) {
var a=[];
for (var i=0;i<tp.satisfies.length;i++) {
a.push(_openTypeFromTarg(tp.satisfies[i],this._cont));
}
return ArraySequence(a,{Element$Iterable:{t:OpenType$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','satisfiedTypes']};});
$defat($$openTypeParam,'caseTypes',function(){
var tp=this._cont.$crtmm$.$tp[this._fname];
if (tp.of) {
var a=[];
for (var i=0;i<tp.of.length;i++) {
var _ct=tp.of[i];if (typeof(_ct)==='function')_ct=getrtmm$$(_ct).$t;
a.push(_openTypeFromTarg(_ct,this._cont));
}
return ArraySequence(a,{Element$Iterable:{t:OpenType$meta$declaration}});
}
return getEmpty();
},undefined,function(){return{mod:$CCMM$,$t:{t:Sequential,a:{Element$Sequential:{t:OpenType$meta$declaration}}},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','TypeParameter','$at','caseTypes']};});
$defat($$openTypeParam,'name',function(){return this._name;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','name']};});
$defat($$openTypeParam,'qualifiedName',function(){
return $qname(this._cont)+"."+this._name;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','qualifiedName']};});
$defat($$openTypeParam,'hash',function(){return this.string.hash;},undefined,function(){return {mod:$CCMM$,$t:{t:Integer},d:['ceylon.language','Object','$at','hash']};});
$defat($$openTypeParam,'string',function(){return "given " + this.qualifiedName;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenTypeParam,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','Declaration','$at','string']};});
$$openTypeParam.equals=function(o) {
return $is(o,{t:OpenTypeParam}) && o._cont==this._cont && o._fname==this._fname;
}
})(OpenTypeParam.$$.prototype);
}
return OpenTypeParam;
}
exports.$init$OpenTypeParam=$init$OpenTypeParam;
$init$OpenTypeParam();
function OpenTvar(p$2, $$openTvar){
$init$OpenTvar();
if ($$openTvar===undefined)$$openTvar=new OpenTvar.$$;
$$openTvar.p$2=p$2;
OpenTypeVariable$meta$declaration($$openTvar);
$$openTvar.$prop$getDeclaration={$crtmm$:function(){return{mod:$CCMM$,$t:{t:TypeParameter$meta$declaration},$cont:OpenTvar,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenTvar','$at','declaration']};}};
$$openTvar.$prop$getDeclaration.get=function(){return declaration};
return $$openTvar;
}
OpenTvar.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenTypeVariable$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','OpenTvar']};};
exports.OpenTvar=OpenTvar;
function $init$OpenTvar(){
if (OpenTvar.$$===undefined){
initTypeProto(OpenTvar,'ceylon.language.meta.declaration::OpenTvar',Basic,$init$OpenTypeVariable$meta$declaration());
(function($$openTvar){
$defat($$openTvar,'string',function(){return this.p$2.qualifiedName;},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:OpenTvar,$an:function(){return[shared(),actual()];},d:['ceylon.language','Object','$at','string']};});
$defat($$openTvar,'declaration',function(){
return this.p$2;
},undefined,function(){return{mod:$CCMM$,$t:{t:TypeParameter$meta$declaration},$cont:OpenTvar,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenTypeVariable','$at','declaration']};});
$$openTvar.equals=function(o) {
return $is(o, {t:OpenTvar}) && this.p$2.equals(o.p$2);
}
$defat($$openTvar,'hash',function(){return this.string.hash;},undefined,function(){return{mod:$$CCMM$,$t:{t:Integer},$cont:OpenTvar,$an:function(){return[shared(),actual()];},d:['ceylon.language','Object','$at','string']};});
})(OpenTvar.$$.prototype);
}
return OpenTvar;
}
exports.$init$OpenTvar=$init$OpenTvar;
$init$OpenTvar();
function FreeUnion(ts$2, $$freeUnion){
$init$FreeUnion();
if ($$freeUnion===undefined)$$freeUnion=new FreeUnion.$$;
$$freeUnion.ts$2_=ts$2;
OpenUnion$meta$declaration($$freeUnion);
$$freeUnion.$prop$getCaseTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeUnion,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenUnion','$at','caseTypes']};}};
$$freeUnion.$prop$getCaseTypes.get=function(){return caseTypes};
return $$freeUnion;
}
FreeUnion.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenUnion$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','OpenUnion']};};
exports.FreeUnion=FreeUnion;
function $init$FreeUnion(){
if (FreeUnion.$$===undefined){
initTypeProto(FreeUnion,'ceylon.language.meta.declaration::FreeUnion',Basic,OpenUnion$meta$declaration);
(function($$freeUnion){
$$freeUnion.equals=function(u) {
if($is(u,{t:FreeUnion})) {
var mine=this.caseTypes;
var his=u.caseTypes;
if (mine.size==his.size) {
for (var i=0;i<mine.length;i++) {
if (!his.contains(mine[i]))return false;
}
return true;
}
}
return false;
}
$defat($$freeUnion,'string',function(){
var s="";
var first=true;
for (var i=0;i<this.ts$2.size;i++) {
if (first)first=false;else s+="|";
s+=this.ts$2.$get(i).string;
}
return s;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['ceylon.language','Object','$at','string']};});
$defat($$freeUnion,'hash',function(){
var s=this.ts$2.size;
for (var i=0;i<this.ts$2.size;i++) {
s+=this.ts$2.$get(i).string.hash;
}
return s;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['ceylon.language','Object','$at','hash']};});
$defat($$freeUnion,'caseTypes',function(){
var $$freeUnion=this;
return $$freeUnion.ts$2;
},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeUnion,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenUnion','$at','caseTypes']};});
$defat($$freeUnion,'ts$2',function(){return this.ts$2_;},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeUnion,d:['ceylon.language.meta.declaration','OpenUnion','$at','ts']};});
})(FreeUnion.$$.prototype);
}
return FreeUnion;
}
exports.$init$FreeUnion=$init$FreeUnion;
$init$FreeUnion();
function FreeIntersection(ts$3, $$freeIntersection){
$init$FreeIntersection();
if ($$freeIntersection===undefined)$$freeIntersection=new FreeIntersection.$$;
$$freeIntersection.ts$3_=ts$3;
OpenIntersection$meta$declaration($$freeIntersection);
$$freeIntersection.$prop$getSatisfiedTypes={$crtmm$:function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeIntersection,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenIntersection','$at','satisfiedTypes']};}};
$$freeIntersection.$prop$getSatisfiedTypes.get=function(){return satisfiedTypes};
return $$freeIntersection;
}
FreeIntersection.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},satisfies:[{t:OpenIntersection$meta$declaration}],$an:function(){return[shared()];},d:['ceylon.language.meta.declaration','OpenIntersection']};};
exports.FreeIntersection=FreeIntersection;
function $init$FreeIntersection(){
if (FreeIntersection.$$===undefined){
initTypeProto(FreeIntersection,'ceylon.language.meta.declaration::FreeIntersection',Basic,OpenIntersection$meta$declaration);
(function($$freeIntersection){
$$freeIntersection.equals=function(u) {
if($is(u,{t:FreeIntersection})) {
var mine=this.satisfiedTypes;
var his=u.satisfiedTypes;
if (mine.size==his.size) {
for (var i=0;i<mine.length;i++) {
if (!his.contains(mine[i])){
return false;
}
}
return true;
}
}
return false;
}
$defat($$freeIntersection,'string',function(){
var s="";
var first=true;
for (var i=0;i<this.ts$3.size;i++) {
if (first)first=false;else s+="&";
s+=this.ts$3.$get(i).string;
}
return s;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},d:['ceylon.language','Object','$at','string']};});
$defat($$freeIntersection,'hash',function(){
var s=this.ts$3.size;
for (var i=0;i<this.ts$3.size;i++) {
s+=this.ts$3.$get(i).string.hash;
}
return s;
},undefined,function(){return{mod:$CCMM$,$t:{t:Integer},d:['ceylon.language','Object','$at','hash']};});
$defat($$freeIntersection,'satisfiedTypes',function(){
var $$freeIntersection=this;
return $$freeIntersection.ts$3;
},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeIntersection,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','OpenIntersection','$at','satisfiedTypes']};});
$defat($$freeIntersection,'ts$3',function(){return this.ts$3_;},undefined,function(){return{mod:$CCMM$,$t:{t:List,a:{Element$List:{t:OpenType$meta$declaration}}},$cont:FreeIntersection,d:['ceylon.language.meta.declaration','OpenIntersection','$at','ts']};});
})(FreeIntersection.$$.prototype);
}
return FreeIntersection;
}
exports.$init$FreeIntersection=$init$FreeIntersection;
$init$FreeIntersection();
function FunParamDecl(cont,param,$$funParamDecl){
$init$FunParamDecl();
if ($$funParamDecl===undefined)$$funParamDecl=new FunParamDecl.$$;
FunctionDeclaration$meta$declaration($$funParamDecl);
$$funParamDecl.cont=cont;
$$funParamDecl.param=param;
$$funParamDecl.tipo={$crtmm$:{$cont:cont.tipo,$t:param.$t,$ps:param.$ps,$mt:'prm',d:cont.tipo.$crtmm$.d,$an:param.$an}};
$$funParamDecl.$prop$getParameter={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','parameter']};}};
$$funParamDecl.$prop$getParameter.get=function(){return true;};
$$funParamDecl.$prop$getAnnotation={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','annotation']};}};
$$funParamDecl.$prop$getAnnotation.get=function(){return false;};
$$funParamDecl.$prop$getShared={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','shared']};}};
$$funParamDecl.$prop$getShared.get=function(){return false;};
$$funParamDecl.$prop$getToplevel={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','toplevel']};}};
$$funParamDecl.$prop$getToplevel.get=function(){return false;};
$$funParamDecl.$prop$getFormal={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','formal']};}};
$$funParamDecl.$prop$getFormal.get=function(){return false;};
$$funParamDecl.$prop$getDefault={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','default']};}};
$$funParamDecl.$prop$getDefault.get=function(){return false};
$$funParamDecl.$prop$getActual={$crtmm$:function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','actual']};}};
$$funParamDecl.$prop$getActual.get=function(){return false;};
return $$funParamDecl;
}
FunParamDecl.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:FunctionDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','FunParamDecl']};};
function $init$FunParamDecl(){
if (FunParamDecl.$$===undefined){
initTypeProto(FunParamDecl,'ceylon.language.meta.declaration::FunParamDecl',Basic,FunctionDeclaration$meta$declaration);
(function($$funParamDecl){
$defat($$funParamDecl,'parameter',function(){return true;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','parameter']};});
$defat($$funParamDecl,'defaulted',function(){
return this.param.$def!==undefined;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','defaulted']};});
$defat($$funParamDecl,'variadic',function(){
return this.param.seq!==undefined;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','variadic']};});
$defat($$funParamDecl,'container',function(){
return this.cont;
},undefined,function(){return{mod:$CCMM$,$t:{t:'u', l:[{t:Package$meta$declaration},{t:NestableDeclaration$meta$declaration}]},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','container']};});
$defat($$funParamDecl,'containingPackage',function(){
return this.cont.containingPackage;
},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','containingPackage']};});
$defat($$funParamDecl,'containingModule',function(){
return this.cont.containingModule;
},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','containingModule']};});
$defat($$funParamDecl,'openType',function(){
var t = this.param.$t;
if (typeof(t)==='string')return OpenTvar(OpenTypeParam(this.cont,t));
return _openTypeFromTarg(t);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','openType']};});
$defat($$funParamDecl,'annotation',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','annotation']};});
$defat($$funParamDecl,'shared',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','shared']};});
$defat($$funParamDecl,'toplevel',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','toplevel']};});
$defat($$funParamDecl,'formal',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','formal']};});
$defat($$funParamDecl,'$default',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','default']};});
$defat($$funParamDecl,'actual',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','actual']};});
$defat($$funParamDecl,'qualifiedName',function(){
return $qname(cont.tipo.$crtmm$)+"."+this.param.$nm;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','qualifiedName']};});
$defat($$funParamDecl,'name',function(){
return this.param.$nm;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$at','name']};});
$$funParamDecl.getParameterDeclaration=function getParameterDeclaration(name$10){
var pd=this.parameterDeclarations;
for (var i=0; i < pd.length; i++) {
if (name$6.equals(pd[i].name))return pd[i];
}
return null;
};$$funParamDecl.getParameterDeclaration.$crtmm$=function(){return{mod:$CCMM$,$t:{t:'u', l:[{t:Null},{t:FunctionOrValueDeclaration$meta$declaration}]},$ps:[{$nm:'name',$mt:'prm',$t:{t:String$},$an:function(){return[];}}],$cont:FunParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','getParameterDeclaration']};};
$$funParamDecl.$apply=function $apply(typeArguments$11,$$$mptypes){
if(typeArguments$11===undefined){typeArguments$11=getEmpty();}
throw Exception("IMPL FunParamDecl.apply");
};$$funParamDecl.$apply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Function$meta$model,a:{Arguments:'Arguments',Type:'Return'}},$ps:[{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:FunParamDecl,$tp:{Return:{'def':{t:Anything}},Arguments:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','apply']};};
$$funParamDecl.memberApply=function memberApply(containerType$12,typeArguments$13,$$$mptypes){
if(typeArguments$13===undefined){typeArguments$13=getEmpty();}
throw Exception("IMPL FunParamDecl.memberApply");
};$$funParamDecl.memberApply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Method$meta$model,a:{Arguments:'Arguments',Type:'Return',Container:'Container'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type:'Container'}},$an:function(){return[];}},{$nm:'typeArguments',$mt:'prm',seq:1,$t:{t:Sequential,a:{Element$Sequential:{t:Type$meta$model,a:{Type:{t:Anything}}}}},$an:function(){return[];}}],$cont:FunParamDecl,$tp:{Container:{'def':{t:Nothing}},Return:{'def':{t:Anything}},Arguments:{'satisfies':[{t:Sequential,a:{Element$Sequential:{t:Anything}}}],'def':{t:Nothing}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','FunctionDeclaration','$m','memberApply']};};
})(FunParamDecl.$$.prototype);
}
return FunParamDecl;
}
exports.$init$FunParamDecl=$init$FunParamDecl;
$init$FunParamDecl();
function ValParamDecl(cont,param,$$valParamDecl){
$init$ValParamDecl();
if ($$valParamDecl===undefined)$$valParamDecl=new ValParamDecl.$$;
ValueDeclaration$meta$declaration($$valParamDecl);
$$valParamDecl.cont=cont;
$$valParamDecl.param=param;
$$valParamDecl.tipo={$crtmm$:{$cont:cont.tipo,$t:param.$t,$mt:'prm',d:cont.tipo.$crtmm$.d,$an:param.$an}};
$$valParamDecl.$prop$getParameter.get=function(){return true;};
$$valParamDecl.$prop$getShared.get=function(){return false;};
$$valParamDecl.$prop$getToplevel.get=function(){return false;};
$$valParamDecl.$prop$getFormal.get=function(){return false;};
$$valParamDecl.$prop$getDefault.get=function(){return false;};
$$valParamDecl.$prop$getActual.get=function(){return false;};
return $$valParamDecl;
}
ValParamDecl.$crtmm$=function(){return{mod:$CCMM$,'super':{t:Basic},$ps:[],satisfies:[{t:ValueDeclaration$meta$declaration}],d:['ceylon.language.meta.declaration','ValParamDecl']};};
function $init$ValParamDecl(){
if (ValParamDecl.$$===undefined){
initTypeProto(ValParamDecl,'ceylon.language.meta.declaration::ValParamDecl',Basic,ValueDeclaration$meta$declaration);
(function($$valParamDecl){
$defat($$valParamDecl,'parameter',function(){return true;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','parameter']};});
$defat($$valParamDecl,'defaulted',function(){
return this.param.$def!==undefined;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','defaulted']};});
$defat($$valParamDecl,'variadic',function(){
return this.param.seq!==undefined;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','variadic']};});
$defat($$valParamDecl,'variable',function(){
return $findAnnotation(this.param,VariableAnnotation)!==null;
},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','variable']};});
$defat($$valParamDecl,'container',function(){
return this.cont;
},undefined,function(){return{mod:$CCMM$,$t:{t:'u', l:[{t:Package$meta$declaration},{t:NestableDeclaration$meta$declaration}]},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','container']};});
$defat($$valParamDecl,'containingPackage',function(){
return this.cont.containingPackage;
},undefined,function(){return{mod:$CCMM$,$t:{t:Package$meta$declaration},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','containingPackage']};});
$defat($$valParamDecl,'containingModule',function(){
return this.cont.containingModule;
},undefined,function(){return{mod:$CCMM$,$t:{t:Module$meta$declaration},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','containingModule']};});
$defat($$valParamDecl,'openType',function(){
var t = this.param.$t;
if (typeof(t)==='string')return OpenTvar(OpenTypeParam(this.cont,t));
return _openTypeFromTarg(t);
},undefined,function(){return{mod:$CCMM$,$t:{t:OpenType$meta$declaration},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','openType']};});
$defat($$valParamDecl,'shared',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','shared']};});
$defat($$valParamDecl,'toplevel',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','toplevel']};});
$defat($$valParamDecl,'formal',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','formal']};});
$defat($$valParamDecl,'$default',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','default']};});
$defat($$valParamDecl,'actual',function(){return false;},undefined,function(){return{mod:$CCMM$,$t:{t:Boolean$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','actual']};});
$defat($$valParamDecl,'qualifiedName',function(){
return $qname(this.cont.tipo.$crtmm$)+"."+this.param.$nm;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','qualifiedName']};});
$defat($$valParamDecl,'name',function(){
return this.param.$nm;
},undefined,function(){return{mod:$CCMM$,$t:{t:String$},$cont:ValParamDecl,$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$at','name']};});
$$valParamDecl.$apply=function $apply($$$mptypes){
var $$valParamDecl=this;
throw Exception("IMPL ValParamDecl.apply");
};$$valParamDecl.$apply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Value$meta$model,a:{Type:'Type'}},$ps:[],$cont:ValParamDecl,$tp:{Type:{'def':{t:Anything}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','apply']};};
$$valParamDecl.memberApply=function memberApply(containerType$20,$$$mptypes){
var $$valParamDecl=this;
throw Exception("IMPL ValParamDecl.memberApply");
};$$valParamDecl.memberApply.$crtmm$=function(){return{mod:$CCMM$,$t:{t:Attribute$meta$model,a:{Type:'Type',Container:'Container'}},$ps:[{$nm:'containerType',$mt:'prm',$t:{t:Type$meta$model,a:{Type:'Container'}},$an:function(){return[];}}],$cont:ValParamDecl,$tp:{Container:{'def':{t:Nothing}},Type:{'def':{t:Anything}}},$an:function(){return[shared(),actual()];},d:['ceylon.language.meta.declaration','ValueDeclaration','$m','memberApply']};};
})(ValParamDecl.$$.prototype);
}
return ValParamDecl;
}
exports.$init$ValParamDecl=$init$ValParamDecl;
$init$ValParamDecl();
function get_model(mm) {
var map=mm.mod;
var path=mm.d;
for (var i=0; i < path.length; i++) {
var _p=path[i];
if (i===0 && _p==='$')_p='ceylon.language';
else if (i==path.length-1&&_p==='$set' && map.$nm && map.$set)return map;
map = map[_p];
}
return map;
}
function type$meta(x,$$targs$$) {
if (x === null || $$targs$$.Type$type.t===Nothing) {
return getNothingType$meta$model();
}
var mm=getrtmm$$(x);
var _t=$$targs$$.Type$type.t;
if (mm===undefined) {
if (x.getT$name && x.getT$all) {
var mmm=x.getT$all()[x.getT$name()];
if (mmm){mm=mmm.$crtmm$;_t=mmm;}
if (typeof(mm)==='function') {
mm=mm(); mmm.$crtmm$=mm;
}
}
}
if (mm===undefined&&x.reifyCeylonType)mm=Array$.$crtmm$;
if (mm===undefined)throw new Error("Cannot retrieve metamodel for " + x);
if (mm.$t) { //it's a value
if (typeof(x)==='function') { //It's a callable
if (mm.$cont) {
return AppliedMethod(x,undefined,{Type$Method:mm.$t,Arguments$Method:{t:Nothing}});
}
return AppliedFunction(x,{Type$Function:mm.$t,Arguments$Function:{t:Nothing}});
}
return AppliedClass(mm.$t.t, {Type$Class:mm.$t,Arguments$Class:{t:Nothing}});
}
var c;
if ($$targs$$.Type$type.t==='T') {
var rt=$retuple($$targs$$.Type$type);
c=AppliedClass(Tuple,{Type$Class:$$targs$$.Type$type, Arguments$Class:{t:'T',l:[$$targs$$.Type$type.l[0],rt.Rest$Tuple]}});
} else {
var _ta={T:{t:x.getT$all()[x.getT$name()]}, A:{t:Sequential,a:{Element$Iterable:{t:Anything}}}};
if (x.$$targs$$)_ta.T.a=x.$$targs$$;
if (x.$$outer) {
_ta.C={t:x.$$outer.getT$all()[x.$$outer.getT$name()]};
if (x.$$outer.$$targs$$)_ta.C.a=x.$$outer.$$targs$$;
}
if (mm.$cont) {
c=AppliedMemberClass(_t, {Type$MemberClass:_ta.T,Arguments$MemberClass:_ta.A,Container$MemberClass:_ta.C});
} else {
c=AppliedClass(_t, {Type$Class:_ta.T,Arguments$Class:_ta.A});
}
}
if ($$targs$$.Type$type.a)c.$targs=$$targs$$.Type$type.a;
return c;
}
type$meta.$crtmm$=function(){return{
$ps:[{$nm:'instance',$t:'Type'}],$an:function(){return[shared(),$native()];},
$t:{t:ClassModel$meta$model,a:{Type$Class:'Type', Arguments$Class:{t:Nothing}}}, $tp:{Type$type:{satisfies:{t:Anything}}},
mod:$CCMM$,d:['ceylon.language.meta','type']};}
exports.type$meta=type$meta;
function typeLiteral$meta($$targs$$) {
if ($$targs$$ === undefined || $$targs$$.Type$typeLiteral === undefined) {
throw new Error("Missing type argument 'Type' " + /*require('util').inspect(*/$$targs$$);
} else if ($$targs$$.Type$typeLiteral.$crtmm$ == undefined) {
var t = $$targs$$.Type$typeLiteral.t
if (t === undefined) {
t = $$targs$$.Type$typeLiteral.setter;
if (t && t.$crtmm$) {
var mm = getrtmm$$(t);
var _mod = getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']);
return OpenSetter(OpenValue(_mod.findPackage(mm.d[0]), t));
}
throw new Error("'Type' argument should be an open or closed type");
} else if (t === 'u' || t === 'i') {
return t === 'u' ? applyUnionType($$targs$$.Type$typeLiteral) : applyIntersectionType($$targs$$.Type$typeLiteral);
} else if (t === 'T') {
var _tt=$retuple($$targs$$.Type$typeLiteral);
return AppliedClass(Tuple,{Type$Class:$$targs$$.Type$typeLiteral,Arguments$Class:{t:'T',l:[_tt.a.First$Tuple,_tt.a.Rest$Tuple]}});
} else if (t.$crtmm$ === undefined) {
throw new Error("JS Interop not supported / incomplete metamodel for " + /*require('util').inspect(*/t);
} else {
var mm = getrtmm$$(t);
var mdl = get_model(mm);
if (mdl['$mt'] === 'c') {
var r=AppliedClass(t,{Type$Class:$$targs$$.Type$typeLiteral,Arguments$Class:{t:Sequential,a:{Element$Iterable:{t:Anything}}}});
if ($$targs$$.Type$typeLiteral.a)r.$targs=$$targs$$.Type$typeLiteral.a;
return r;
} else if (mdl['$mt'] === 'i') {
var r=AppliedInterface(t,{Type$Interface:$$targs$$.Type$typeLiteral});
if ($$targs$$.Type$typeLiteral.a)r.$targs=$$targs$$.Type$typeLiteral.a;
return r;
} else if (mdl['$mt'] === 'm') {
return AppliedFunction(t,{Type$Function:$$targs$$.Type$typeLiteral,Arguments$Function:{t:Sequential,a:{Element$Iterable:{t:Anything}}}});
} else if (mdl['$mt'] === 'a' || mdl['$mt'] === 'g' || mdl['$mt'] === 'o'||mdl.$mt==='s') {
return AppliedValue(undefined,t,{Container$Value:{t:mm.$cont},Get$Value:mm.$t,Set$Value:mdl['var']?mm.$t:{t:Nothing}});
} else {
console.log("WTF is a metatype " + mdl['$mt'] + " on a closed type???????");
}
console.log("typeLiteral<" + t.getT$name() + "> (closed type)");
}
} else {
var t = $$targs$$.Type$typeLiteral;
var mm = getrtmm$$(t);
var mdl = get_model(mm);
var _mod = getModules$meta().find(mm.mod['$mod-name'],mm.mod['$mod-version']);
var _pkg = _mod.findPackage(mm.d[0]);
if (mdl.$mt==='c' || mdl.$mt==='o') {
return OpenClass(_pkg, t);
} else if (mdl['$mt'] === 'i') {
return OpenInterface(_pkg, t);
} else if (mdl['$mt'] === 'm') {
return OpenFunction(_pkg, t);
} else if (mdl['$mt'] === 'a' || mdl['$mt'] === 'g') {
return OpenValue(_pkg, t);
} else if (mdl.$mt==='s') {
return OpenSetter(OpenValue(_pkg, t));
} else {
console.log("WTF is a metatype " + mdl['$mt'] + " on an open type???????");
}
console.log("typeLiteral<" + t.getT$name() + "> (open type)");
}
throw new Error("typeLiteral UNIMPLEMENTED for " + /*require('util').inspect(*/$$targs$$);
}
typeLiteral$meta.$crtmm$={$ps:[],$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language.meta','typeLiteral']};
exports.typeLiteral$meta=typeLiteral$meta;
function pushTypes(list, types) {
for (var i=0; i<types.length; i++) {
var t = types[i];
if (t.t === 'u') {
list.push(applyUnionType(t, t.l));
} else if (t.t === 'i') {
list.push(applyIntersectionType(t, t.l));
} else {
list.push(typeLiteral$meta({Type$typeLiteral:t}));
}
}
return list;
}
function applyUnionType(ut) { //return AppliedUnionType
var cases = [];
pushTypes(cases, ut.l);
return AppliedUnionType(ut, cases.reifyCeylonType({Absent$Iterable:{t:Null},Element$Iterable:{t:Type$meta$model}}), {Union$UnionType:{t:Anything}});
}
function applyIntersectionType(it) { //return AppliedIntersectionType
var sats = [];
pushTypes(sats, it.l);
return AppliedIntersectionType(it, sats.reifyCeylonType({Absent$Iterable:{t:Null},Element$Iterable:{t:Type$meta$model}}), {Intersection$IntersectionType:{t:Anything}});
}
exports.$mod$ans$=function(){return[doc("The Ceylon language module containing the core types \nreferred to in the language specification."),by(["Gavin King","Tom Bentley","Tako Schotanus","Stephane Epardaud","Enrique Zamudio"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),license("http://www.apache.org/licenses/LICENSE-2.0.html")];};exports.$pkg$ans$ceylon$language=function(){return[doc("The Ceylon language package."),by(["Gavin King","Tom Bentley","Tako Schotanus","Stephane Epardaud","Enrique Zamudio"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];};exports.$pkg$ans$ceylon$language$meta=function(){return[doc("The Ceylon metamodel base package.\n\nThe Ceylon metamodel allows you to: \n\n* dynamically inspect modules, packages, functions, values and types, \n* invoke functions and class initialisers, or read and write values, and\n* inspect the annotations on program elements.\n\n### A little bit of terminology\n\nThere are a few concepts and terms in the Ceylon metamodel API that you should be familiar with:\n\n- A _declaration_ is the definition of a Ceylon construct, such as a module, package, value, function\n  or class. Declarations are singletons: there is only a single instance of a given class declaration,\n  for example. You can inspect declarations to get information about how they were defined by their\n  author. You cannot directly invoke function or class declarations, but you can _apply_ them to get\n  a _model_ that you can invoke.\n- A _model_ is a Ceylon definition that represents a declaration where all the type variables have\n  been bound to _closed type_ values. You can query models for their member models and you can directly\n  invoke models.\n- A _closed type_ is a type which does not contain any unbound type variables.\n- An _open type_ is a type which may contain unbound type variables.\n\nFor example, given the following Ceylon program:\n\n    shared abstract class MyList<T>() satisfies List<T>{}\n\nThe declaration of `MyList` represents the class declaration and contains the information that it is\n`abstract` and that it satisfies the `List<T>` open type. That type is open because it contains an\nunbound type variable `T`, which is not bound when we inspect the `MyList` class declaration.\n\nGiven an particular instance of `MyList`, we can query its (closed) type with the [[type]] function,\nand we obtain a closed type representing (for example) `MyList<Integer>`. Object instances necessarily\nhave a closed type at runtime, since in order to instantiate an object, all type arguments must be\nprovided and known during instantiation, so the type of an object instance at runtime is necessarily\na closed type: they cannot contain unbound type variables.\n\nClosed types that represent class or interfaces are also models. For example, the closed type of our\n`MyList<Integer>` instance is both a closed type and a class model: you can query its satisfied types\nand find that it satisfies `List<Integer>` closed type and model (as opposed to the class declaration\nof `MyList` which satisfies the `List<T>` open type). You can also invoke that model to obtain a new\ninstance of `MyList<Integer>`.\n\n### Model and declaration literals\n\nCeylon supports getting declaration values using either the declaration API or using declaration\nliterals:\n\n- <code>\\`module ceylon.file\\`</code> returns the [[Module|ceylon.language.meta.declaration::Module]] \n  declaration which corresponds to the `ceylon.file` module you imported in your module descriptor.\n- <code>\\`package ceylon.language.meta\\`</code> returns the [[Package|ceylon.language.meta.declaration::Package]]\n  declaration from your current module imports.\n- <code>\\`interface List\\`</code> returns the [[InterfaceDeclaration|ceylon.language.meta.declaration::InterfaceDeclaration]] \n  for the [[List|ceylon.language::List]] type.\n- <code>\\`class Integer\\`</code> returns the [[ClassDeclaration|ceylon.language.meta.declaration::ClassDeclaration]] \n  for the [[Integer|ceylon.language::Integer]] type.\n- <code>\\`function type\\`</code> returns the [[FunctionDeclaration|ceylon.language.meta.declaration::FunctionDeclaration]] \n  for the [[type]] function. Similarly <code>\\`function List.shorterThan\\`</code> for methods.\n- <code>\\`value modules\\`</code> returns the [[ValueDeclaration|ceylon.language.meta.declaration::ValueDeclaration]] \n  for the [[modules]] value. Similarly <code>\\`function List.size\\`</code> for attributes.\n- <code>\\`alias AliasName\\`</code> returns the [[AliasDeclaration|ceylon.language.meta.declaration::AliasDeclaration]]\n  for the `AliasName` type alias. \n- <code>\\`given T\\`</code> returns the [[TypeParameter|ceylon.language.meta.declaration::TypeParameter]] \n  for the `T` type parameter.\n\nNote that declaration literals cannot have type arguments specified on types or methods, as declarations are not types.\n\nYou can also get access to closed types and model using either the model API or using literals: \n\n- <code>\\`List&lt;Integer>\\`</code> returns the [[Interface|ceylon.language.meta.model::Interface]] model and \n  closed type for the [[List|ceylon.language::List]] type applied with the [[Integer|ceylon.language::Integer]] type argument.\n- <code>\\`Integer\\`</code> returns the [[Class|ceylon.language.meta.model::Class]] model and closed type \n  for the [[Integer|ceylon.language::Integer]] type.\n- <code>\\`type&lt;Integer>\\`</code> returns the [[Function|ceylon.language.meta.model::Function]] model \n  for the [[type]] function applied with the [[Integer|ceylon.language::Integer]] type argument.\n  Similarly <code>\\`List&lt;Integer>.shorterThan\\`</code> for method models.\n- <code>\\`modules\\`</code> returns the [[Value|ceylon.language.meta.model::Value]] model \n  for the [[modules]] value. Similarly <code>\\`List&lt;Integer>.size\\`</code> for attribute models.\n- <code>\\`A & B\\`</code> returns a [[IntersectionType|ceylon.language.meta.model::IntersectionType]]\n  for the `A & B` intersection type.\n- <code>\\`A | B\\`</code> returns a [[UnionType|ceylon.language.meta.model::UnionType]]\n  for the `A | B` union type.\n- <code>\\`T\\`</code> returns a [[Type|ceylon.language.meta.model::Type]] representing the runtime type \n  argument value for the `T` type parameter.\n\nNotice that all model and close type literals must be applied with all required type arguments.\n\n### Accessing the metamodel using the API\n\nAside from declaration and model literals there are several ways you can start using the metamodel API:\n\n- The [[modules]] object contains a list of all currently loaded [[Module|ceylon.language.meta.declaration::Module]]\n  declarations. Note that these contain even modules you did not import as it contains all transitive\n  dependencies, and may contain multiple different versions of the same module.\n- The [[type]] function will return the closed type of the given instance, which can only be a\n  [[ClassModel|ceylon.language.meta.model::ClassModel]] since only classes can be instantiated.\n- The [[typeLiteral]] function is the functional equivalent to closed type literals: it turns a type argument\n  value into a metamodel closed type.\n- The [declaration](declaration/index.html) package contains all the declaration and open types.\n- The [model](model/index.html) package contains all the model and closed types.\n\n### Inspecting annotations\n\nConstrained annotations can be inspected using the [[annotations]] \nfunction, like this:\n\n    // Does the process declaration have the Shared annotation?\n    value isShared = annotations(`Shared`, `value process`) exists;\n\nor the related [[optionalAnnotation]] and [[sequencedAnnotations]] functions.\n\nNote that annotations are queried for via their \n[[ceylon.language::Annotation]] type, \nnot by the annotation constructor which was used to annotate \nthe program element.\n"),by(["Gavin King","Stephane Epardaud"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];};exports.$pkg$ans$ceylon$language$meta$model=function(){return[doc("The Ceylon metamodel closed type and model package.\n\nAs described in the [ceylon.language.meta](../index.html) documentation, this package contains all\nthe types that represent Ceylon closed types and models.\n\n### Usage example\n\nThe following code will list all the value declarations in the `ceylon.language` package and print their\ncurrent value:\n\n    Package languagePackage = `package ceylon.language`;\n    ValueDeclaration[] valueDeclarations = languagePackage.members<ValueDeclaration>();\n    Value<Anything>[] valueModels = valueDeclarations*.apply<Anything>();\n    for(val in valueModels){\n        // skip the nothing value which cannot be read\n        if(val.type != `Nothing`){\n            print(val.get());\n        }\n    }\n\nThe following code will iterate all the class declarations in the `ceylon.language` package that\nare not abstract, anonymous or annotations, and that have no type parameters nor initialiser\nparameters. For each matching class, we will apply it to get a class model which we can then\nuse to instantiate the class and display its instance:\n\n    for(decl in `package ceylon.language`.members<ClassDeclaration>()){\n        if(!decl.abstract \n                && !decl.anonymous \n                && !decl.annotation\n                && decl.parameterDeclarations.empty\n                && decl.typeParameterDeclarations.empty){\n            Class<Object,[]> classModel = decl.classApply<Object,[]>();\n            Object instance = classModel();\n            print(\"Instance of ``decl.name`` is: ``instance``\");\n        }\n    }\n"),by(["Gavin King","Stephane Epardaud"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];};exports.$pkg$ans$ceylon$language$meta$declaration=function(){return[doc("The Ceylon metamodel open type and declaration package.\n\nAs described in the [ceylon.language.meta](../index.html) documentation, this package contains all\nthe types that represent Ceylon declarations and open types.\n\n### Usage example\n\nThe following code will list all the classes in the `ceylon.language` package and print their\nextended type:\n\n    for(decl in `package ceylon.language`.members<ClassDeclaration>()){\n        if(exists extendedType = decl.extendedType){\n            print(\"Class ``decl.name`` extends: ``extendedType``\");\n        }else{\n            print(\"Class ``decl.name`` does not extend anything\");\n        }\n    }\n\nThe following code will iterate all the class declarations in the `ceylon.language` package that\nare not abstract, anonymous or annotations, and that have no type parameters nor initialiser\nparameters. For each matching class, we will apply it to get a class model which we can then\nuse to instantiate the class and display its instance:\n\n    for(decl in `package ceylon.language`.members<ClassDeclaration>()){\n        if(!decl.abstract \n                && !decl.anonymous \n                && !decl.annotation\n                && decl.parameterDeclarations.empty\n                && decl.typeParameterDeclarations.empty){\n            Class<Object,[]> classModel = decl.classApply<Object,[]>();\n            Object instance = classModel();\n            print(\"Instance of ``decl.name`` is: ``instance``\");\n        }\n    }\n"),by(["Gavin King","Stephane Epardaud"].reifyCeylonType({Element$Iterable:{t:String$},Absent$Iterable:{t:Null}})),shared()];};
//Ends compiled from Ceylon sources
function NativeException(e) {
var that = new NativeException.$$;
var msg;
if (typeof e === 'string') {
msg = String$(e);
} else if (e) {
msg = String$(e.toString());
} else {
msg = String$("Native JavaScript Exception",27);
}
Exception(msg,null,that);
return that;
}
initTypeProto(NativeException, 'ceylon.language::NativeException', $init$Exception());
NativeException.$crtmm$=function(){return{$nm:'NativeException',$mt:'c',$ps:[{t:Exception}],$an:function(){return[shared()];},mod:$CCMM$,d:['ceylon.language','Exception']};}
exports.Identifiable=Identifiable;
exports.identityHash=$identityHash;
exports.$Object=Object$;
exports.Anything=Anything;
exports.Null=Null;
exports.Nothing=Nothing;
exports.$Boolean=Boolean$;
exports.Comparison=Comparison;
exports.getNull=getNull;
exports.getTrue=getTrue;
exports.getFalse=getFalse;
exports.NativeException=NativeException;
});
}(typeof define==='function' && define.amd ?
define : function (factory) {
if (typeof exports!=='undefined') {
factory(require, exports, module);
} else {
throw "no module loader";
}
}));
